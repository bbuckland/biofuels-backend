'use strict';

angular.module('biofuels.sections.createVials', [
  'biofuels.sections.createVials.controller'
]);


'use strict';

angular.module('biofuels.sections.createVials.controller', [])
  .controller('createVialsCtrl',
    function ($log,
              vialService,
              $state,
              ROUTES) {
      (function (vm) {
        $log.debug('This is from the home page');
        vm.vialData = {};
        vm.vials = [];
        vm.idCounter = 0;

        vm.vialTypes = [{
          code: 'RXN',
          description: 'REACTION'
        }, {
          code: 'GC',
          description: 'GC'
        }, {
          code: 'SPK',
          description: 'SPIKED'
        }];

        vm.addToQueue = function () {
          $log.debug('Added to Queue');
          if (vm.selectedVialType === 'RXN') {
            vm.vial = {
              vialId: vm.vialData.vialId.toString(),
              preparationDate: vm.vialData.preparationDate,
              vialStatus: 0,
              fattyAcidmass: Number(vm.vialData.fattyAcidmass),
              c15Istdcon: Number(vm.vialData.c15Istdcon)
            };
          } else if (vm.selectedVialType === 'GC') {
            vm.vial = {
              vialId: vm.vialData.vialId.toString(),
              preparationDate: vm.vialData.preparationDate,
              vialStatus: 0,
              c13Mass: Number(vm.vialData.c13Mass),
              c13Istdcon: Number(vm.vialData.c13Istdcon),
              c19Istdcon: Number(vm.vialData.c19Istdcon)
          };
          } else if (vm.selectedVialType === 'SPK') {
            vm.vial = {
              vialId: vm.vialData.vialId.toString(),
              preparationDate: vm.vialData.preparationDate,
              vialStatus: 0,
              c15Mass: Number(vm.vialData.c15Mass),
              Mass450mlsample: Number(vm.vialData.Mass450mlsample)
            };
          }
          vm.vials.push(vm.vial);

          vm.vialData.vialId++;
        };

        vm.removeFromQueue = function (vial) {
          $log.debug(vial);
          var index = vm.vials.indexOf(vial);
          if (index > -1) {
            vm.vials.splice(index, 1);
          }
        };

        vm.saveVials = function () {
          $log.debug('Saved vials');

          vm.formError = '';
          vm.formResponse = '';
          vialService.createVial(vm.selectedVialType, vm.vials).then(function (data) {
            vm.formResponse = 'Successfully made vials!';
            $state.go(ROUTES.VIALS);
          }).catch(function (err) {
            vm.formError = err.error;
          });
        };

        vm.determineAddButtonStatus = function () {
          // Returning true disables the ADD button
          if (vm.selectedVialType === 'RXN') {
            return !(vm.vialData.vialId && vm.vialData.preparationDate && vm.vialData.fattyAcidmass && vm.vialData.c15Istdcon);
          } else if (vm.selectedVialType === 'GC') {
            return !(vm.vialData.vialId && vm.vialData.preparationDate && vm.vialData.c13Mass && vm.vialData.c13Istdcon && vm.vialData.c19Istdcon);
          } else if (vm.selectedVialType === 'SPK') {
            return !(vm.vialData.vialId && vm.vialData.preparationDate && vm.vialData.c15Mass && vm.vialData.Mass450mlsample && vm.vialData.gcVialID);
          }
          return true;
        };

      })(this);
    });

'use strict';

angular.module('biofuels.sections.newBatch', [
  'biofuels.sections.newBatch.controller'
]);


'use strict';

angular.module('biofuels.sections.newBatch.controller', [
  'biofuels.core.customer',
  'biofuels.core.sample'
])
  .controller('newBatchCtrl',
    function ($log,
              $mdDialog,
              customerService,
              sampleService,
              _
    ) {
      (function (vm) {
        function getCustomerNames () {
          customerService.getCustomers().then(function (data) {
            vm.customers = data.data;
          });
        }

        getCustomerNames();

        vm.batchData = {};
        vm.samples = [{
          name: 'Bradley'
        }];
        vm.workingSample = {};
        vm.workingIndex = 1;

        vm.addNewSample = function () {
          vm.samples.push(angular.copy(vm.workingSample));
          vm.workingIndex++;
          vm.workingSample = {};
        };

        vm.deleteSample = function (index) {
          vm.samples.splice(index, 1);
          if (vm.workingIndex === index) {
            vm.workingSample = {};
          }
          vm.workingIndex = vm.samples.length;
        };

        vm.cancelEdit = function () {
          vm.workingSample = {};
          vm.workingIndex = vm.samples.length;
        };

        vm.isEditing = function () {
          return vm.workingIndex < vm.samples.length;
        };

        vm.editSample = function (index) {
          vm.workingIndex = index;
          vm.workingSample = angular.copy(vm.samples[index]);
        };

        vm.saveEditedSample = function () {
          vm.samples[vm.workingIndex] = angular.copy(vm.workingSample);
          vm.workingSample = {};
          vm.workingIndex = vm.samples.length;
        };

        vm.saveBatch = function (ev) {
          var confirm = $mdDialog.confirm()
            .title('Are you sure you want to save?')
            .textContent('Ensure you have entered all samples.')
            .ariaLabel('Entered All Samples')
            .targetEvent(ev)
            .ok('Create the Batch')
            .cancel('Hold please.');
          $mdDialog.show(confirm).then(function() {
              vm.batchData.samples = angular.fromJson(angular.toJson(vm.samples));
              vm.batchData.customerId += '';
              return vm.batchData;
          }).then(sampleService.createBatch);
        };
      })(this);
    });

'use strict';

angular.module('biofuels.sections.createCustomer', [
  'biofuels.sections.createCustomer.controller'
]);


'use strict';

angular.module('biofuels.sections.createCustomer.controller', [])
  .controller('createCustomerCtrl',
    function ($log,
              customerService,
              $state,
              ROUTES
    ) {
      (function (vm) {
        $log.debug('This is from the home page');
        vm.customerData = {
          PONumbers: [],
        };
        vm.states = ('AL AK AZ AR CA CO CT DE FL GA HI ID IL IN IA KS KY LA ME MD MA MI MN MS ' +
        'MO MT NE NV NH NJ NM NY NC ND OH OK OR PA RI SC SD TN TX UT VT VA WA WV WI ' +
        'WY').split(' ').map(function(state) {
          return {abbrev: state};
        });

        vm.addToPOList = function (poNumber) {
          if (!vm.customerData.PONumbers.includes(poNumber) && poNumber) {
            vm.customerData.PONumbers.push(poNumber);
          }
        };

        vm.removeFromPOList = function (poNumber) {
          var index = vm.customerData.PONumbers.indexOf(poNumber);
          if (index > -1) {
            vm.customerData.PONumbers.splice(index, 1);
          }
        };

        vm.createCustomer = function () {
          $log.debug('Create this customer');

          vm.formError = '';
          vm.formResponse = '';
          customerService.createCustomer(vm.customerData.name, vm.customerData.code, vm.customerData.contactName1, vm.customerData.contactName2, vm.customerData.billingName,
                                         vm.customerData.address, vm.customerData.address2, vm.customerData.city, vm.customerData.state,
                                         Number(vm.customerData.postalCode), vm.customerData.phoneNumber, vm.customerData.email).then(function (data) {
            vm.formResponse = 'Successfully made customer!';
            $state.go(ROUTES.CUSTOMERS);
          }).catch(function (err) {
            vm.formError = err.error;
          });
        };

      })(this);
    });

'use strict';

angular.module('biofuels.sections.vials', [
  'biofuels.sections.vials.controller'
]);


'use strict';

angular.module('biofuels.sections.vials.controller', [])
  .controller('vialsCtrl',
    function ($log,
              vialService
    ) {
      (function (vm) {
        $log.debug('This is from the vials page');

        vm.selected = [];
        vm.customers = [];

        vm.vialTypes = [{
          code: 'RXN',
          description: 'REACTION'
        }, {
          code: 'GC',
          description: 'GC'
        }, {
          code: 'SPK',
          description: 'SPIKED'
        }];
        vm.selectedVialType = vm.vialTypes[0].code;

        vm.changeVialType = function () {
          $log.debug('Change vial type');
          getVials();
        };

        vm.convertDateString = function (dateString) {
          var date = new Date(dateString);
          return date.toLocaleDateString("en-US");
        }

        function getVials () {
          vm.formError = '';
          vm.formResponse = '';
          vialService.getVials(vm.selectedVialType).then(function (data) {
            vm.formResponse = 'Successfully got vial list!';
            vm.vials = data.data;
          }).catch(function (err) {
            vm.formError = err.error;
          });

        }

        getVials();
      })(this);
    });

'use strict';

angular.module('biofuels.sections.samples', [
  'biofuels.sections.samples.controller'
]);


'use strict';

angular.module('biofuels.sections.samples.controller', [

])
  .controller('samplesCtrl',
    function ($log,
              sampleService,
              _
    ) {
      (function (vm) {
        $log.debug('This is from the samples page');
        vm.selected = [];

        //vm.selectedBatch = vm.batches[0];

        sampleService.getSamples().then(function (data) {
          $log.debug(data);
          vm.sampleData = data.data;

          vm.batches = _.uniq(_.pluck(vm.sampleData, 'batch_id'));

          $log.debug(vm.batches);
        });

        vm.updateBatchId = function () {
          vm.samples = _.filter(vm.sampleData, function(sample) {
            return sample.batch_id === vm.selectedBatch;
          });
        }

      })(this);
    });

'use strict';

angular.module('biofuels.sections.login', [
  'biofuels.sections.login.controller'
]);


'use strict';

angular.module('biofuels.sections.login.controller', [
  'ngMessages',
  'ngStorage',
  'biofuels.core.user',
  'biofuels.core.router.constants'
])
  .controller('loginCtrl',
  function ($log,
            userService,
            $localStorage,
            $state,
            ROUTES
  ) {
    (function (vm) {
      $log.debug('This is from the logins page');

      vm.disableIt = false;
      vm.userLogin = {};
      vm.userRegister = {};

      if ($localStorage.userProfile && $localStorage.userProfile.email) {
        vm.userLogin.email = $localStorage.userProfile.email;
      }

      vm.onEnter = function (ev) {
        if (ev.which === 13) {
          vm.loginUser();
        }
      };

      vm.loginUser = function () {
        vm.formError = '';
        vm.formResponse = '';
        userService.login(vm.userLogin.email, vm.userLogin.password).then(function () {
          vm.formResponse = 'Successfully logged in!';
          $state.go(ROUTES.HOME);
        }).catch(function (err) {
          vm.formError = err.error;
        });
      };

      vm.registerUser = function () {
        vm.registerFormError = '';
        vm.registerFormResponse = '';
        userService.register(vm.userRegister.fullName,
            vm.userRegister.email,
            vm.userRegister.password).then(function () {

          vm.registerFormResponse = 'Successfully registered user!';
          vm.userLogin.email = vm.userRegister.email;
          vm.userRegister = {};
          vm.selectedTab = 0;
        }).catch(function (err) {
          vm.registerFormError = err.error;
        });
      };
    })(this);
  });

'use strict';

angular.module('biofuels.sections.customers', [
  'biofuels.sections.customers.controller'
]);


'use strict';

angular.module('biofuels.sections.customers.controller', [])
  .controller('customersCtrl',
    function ($log,
              customerService
    ) {
      (function (vm) {
        $log.debug('This is from the customers page');
        vm.selected = [];
        vm.customers = [];

        function getCustomers () {
          vm.formError = '';
          vm.formResponse = '';
          customerService.getCustomers().then(function (data) {
            vm.formResponse = 'Successfully got customer list!';
            vm.customers = data.data;
            $log.debug(vm.customers.length);
          }).catch(function (err) {
            vm.formError = err.error;
          });

        }

        getCustomers();
      })(this);
    });

'use strict';

angular.module('biofuels.sections.home', [
  'biofuels.sections.home.controller'
]);


'use strict';

angular.module('biofuels.sections.home.controller', [
  'ngStorage'
])
  .controller('homeCtrl',
  function ($log,
            $localStorage
  ) {
    (function (vm) {
      $log.debug('This is from the home page');

      vm.userProfile = $localStorage.userProfile;
      vm.labels = ['Download Sales', 'In-Store Sales', 'Mail-Order Sales'];
      vm.data = [300, 500, 100];


      vm.lineLabels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];
      vm.lineSeries = ['Series A', 'Series B'];
      vm.lineData = [
        [65, 59, 80, 81, 56, 55, 40],
        [28, 48, 40, 19, 86, 27, 90]
      ];

      vm.radarLabels =['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'];

      vm.radarData = [
        [65, 59, 90, 81, 56, 55, 40],
        [28, 48, 40, 19, 96, 27, 100]
      ];


      vm.barLabels = ['2006', '2007', '2008', '2009', '2010', '2011', '2012'];
      vm.barSeries = ['Series A', 'Series B'];

      vm.barData = [
        [65, 59, 80, 81, 56, 55, 40],
        [28, 48, 40, 19, 86, 27, 90]
      ];
    })(this);
  });

'use strict';

angular.module('biofuels.core.wrappers', [
  'biofuels.core.wrappers.underscore'
]);

'use strict';

angular.module('biofuels.core.wrappers.underscore', [])
  .factory('_', ['$window', function($window) {
    if ($window && '_' in $window) {
      return $window._;
    }

    return {};
  }]);

'use strict';

angular.module('biofuels.core.vial', [
  'biofuels.core.vial.service'
]);

'use strict';

angular.module('biofuels.core.vial.service', [
    'biofuels.core.resource'
  ])
  .factory(
    'vialService',
    function ($log,
              resourceService,
              $q
    ) {
      function createVial (vialType, vials) {
        $log.debug('Creating vials');

        var payload = {
          vial_type: vialType,
          vials: vials
        };

        return resourceService.vialCreate.save(payload).$promise.then(function (data) {
          $log.debug(data);
        }).catch(function (err) {
          $log.error(err);
          return $q.reject(err.data);
        });
      }


      function getVials (vialType) {
        $log.debug('Getting vials');

        var query = {
          vial_type: vialType
        };

        return resourceService.vialList.get(query).$promise.then(function (data) {
          $log.debug(data);
          return data;
        }).catch(function (err) {
          $log.error(err);
          return $q.reject(err.data);
        });
      }

      return {
        createVial: createVial,
        getVials: getVials
      };
    }
  );


'use strict';

angular.module('biofuels.core.user', [
  'biofuels.core.user.service'
]);

'use strict';

angular.module('biofuels.core.user.service', [
  'ngStorage',
  'biofuels.core.resource'
])
  .factory(
    'userService',
    function ($log,
              resourceService,
              $localStorage,
              $q
    ) {
      function login (email, password) {
        $log.debug('Logging you in from the user service');

        var payload = {
          email: email,
          password: password
        };

        return resourceService.userAuth.save(payload).$promise.then(function (data) {
          $log.debug(data);
          $localStorage.userProfile = {
            id: data['user_id'],
            fullName: data['full_name'],
            email: data['email'],
            token: data['token']
          };
        }).catch(function (err) {
          $log.error(err);
          return $q.reject(err.data);
        });
      }


      function register (fullName, email, password) {
        $log.debug('Logging you in from the user service');

        var payload = {
          full_name: fullName,
          email: email,
          password: password
        };

        return resourceService.userRegister.save(payload).$promise.then(function (data) {
          $log.debug(data);
        }).catch(function (err) {
          $log.error(err);
          return $q.reject(err.data);
        });
      }

      return {
        login: login,
        register: register
      };
    }
  );


'use strict';

angular.module('biofuels.templates', []);

'use strict';

angular.module('biofuels.core.sample', [
  'biofuels.core.sample.service'
]);

'use strict';

angular.module('biofuels.core.sample.service', [
    'biofuels.core.resource'
  ])
  .factory(
    'sampleService',
    function ($log,
              resourceService,
              $q
    ) {
      function getSamples () {
        $log.debug('Getting customers');

        var query = {};

        return resourceService.sampleList.get(query).$promise.then(function (data) {
          $log.debug(data);
          return data;
        }).catch(function (err) {
          $log.error(err);
          return $q.reject(err.data);
        });
      }

      function createBatch (batchData) {
        $log.debug('Creating batch');
        $log.debug(batchData);
        return resourceService.batchCreate.save(batchData).$promise.then(function (data) {
          $log.debug(data);
          return data;
        }).catch(function (err) {
          $log.error(err);
          return $q.reject(err.data);
        });
      }

      return {
        getSamples: getSamples,
        createBatch: createBatch
      };
    }
  );


'use strict';

angular.module('biofuels.core.router', [
  'biofuels.core.router.config',
  'biofuels.core.router.constants'
]);

'use strict';

angular.module('biofuels.core.router.constants', [])
  .constant(
  'ROUTES', {
    'CREATE_CUSTOMER':'createCustomer',
    'CREATE_VIALS':'createVials',
    'CUSTOMERS':'customers',
    'HOME': 'home',
    'LOGIN': 'login',
    'NEW_BATCH': 'newBatch',
    'SAMPLES':'samples',
    'VIALS':'vials'
  });

'use strict';

angular.module('biofuels.core.router.config', [
  'biofuels.core.router.constants',
  'ui.router',
  'biofuels.templates'
])
  .config(
  function routerConfig(ROUTES, $stateProvider, $urlRouterProvider) {
    var states = [];

    states.push({
      name: ROUTES.CREATE_CUSTOMER,
      url: '/create-customer',
      templateUrl: 'sections/customers/create-customer/create-customer.tpl.html',
      controller: 'createCustomerCtrl as ctrl'
    });

    states.push({
      name: ROUTES.CUSTOMERS,
      url: '/customers',
      templateUrl: 'sections/customers/customers.tpl.html',
      controller: 'customersCtrl as ctrl'
    });

    /* Home screen */
    states.push({
      name: ROUTES.HOME,
      url: '/home',
      templateUrl: 'sections/home/home.tpl.html',
      controller: 'homeCtrl as ctrl'
    });

    states.push({
      name: ROUTES.LOGIN,
      url: '/login',
      templateUrl: 'sections/login/login.tpl.html',
      controller: 'loginCtrl as ctrl'
    });

    states.push({
      name: ROUTES.NEW_BATCH,
      url: '/new-batch',
      templateUrl: 'sections/samples/new-batch/new-batch.tpl.html',
      controller: 'newBatchCtrl as ctrl'
    });

    states.push({
      name: ROUTES.SAMPLES,
      url: '/samples',
      templateUrl: 'sections/samples/samples.tpl.html',
      controller: 'samplesCtrl as ctrl'
    });

    states.push({
      name: ROUTES.CREATE_VIALS,
      url: '/create-vials',
      templateUrl: 'sections/vials/create-vials/create-vials.tpl.html',
      controller: 'createVialsCtrl as ctrl'
    });

    states.push({
      name: ROUTES.VIALS,
      url: '/vials',
      templateUrl: 'sections/vials/vials.tpl.html',
      controller: 'vialsCtrl as ctrl'
    });

    /**
     * UI routes initialization
     */
    angular.forEach(states, function (state) {
      $stateProvider.state(state);
    });

    $urlRouterProvider.otherwise('/login');

  }
);

(function(module) {
try {
  module = angular.module('biofuels.templates');
} catch (e) {
  module = angular.module('biofuels.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('sections/vials/create-vials/create-vials.tpl.html',
    '<div menu=""></div><div layout="row" layout-align="center"><div flex="50"><md-card><md-card-title><md-card-title-text><span class="md-headline">Create Vial</span></md-card-title-text></md-card-title><div layout="column" ng-cloak class="md-inline-form"><md-content layout-padding><div><form name="vialForm"><div layout-gt-xs="row"><md-input-container><label>Vial Type</label><md-select ng-model="ctrl.selectedVialType" ng-disabled="ctrl.vials.length > 0"><md-option ng-repeat="vialType in ctrl.vialTypes" value="{{vialType.code}}">{{vialType.description}}</md-option></md-select></md-input-container></div><div layout-gt-xs="row"><md-input-container ng-show="ctrl.selectedVialType"><label>Vial ID</label><input ng-model="ctrl.vialData.vialId"></md-input-container><md-datepicker ng-model="ctrl.vialData.preparationDate" md-placeholder="Enter date" ng-show="ctrl.selectedVialType"></md-datepicker></div><div layout-gt-xs="row" ng-show="ctrl.selectedVialType == \'RXN\'"><md-input-container><label>Mass of Fatty Acid</label><input ng-model="ctrl.vialData.fattyAcidmass"></md-input-container><md-input-container><label>Concentration of C-15 FA ISTD</label><input ng-model="ctrl.vialData.c15Istdcon"></md-input-container></div><div layout-gt-xs="row" ng-show="ctrl.selectedVialType == \'GC\'"><md-input-container><label>Mass of FAME ISTD</label><input ng-model="ctrl.vialData.c13Mass"></md-input-container><md-input-container><label>Concentration of C-13 ISTD</label><input ng-model="ctrl.vialData.c13Istdcon"></md-input-container><md-input-container><label>Concentration of C-19 ISTD</label><input ng-model="ctrl.vialData.c19Istdcon"></md-input-container></div><div layout-gt-xs="row" ng-show="ctrl.selectedVialType == \'SPK\'"><md-input-container><label>Mass of C-15 ISTD</label><input ng-model="ctrl.vialData.c15Mass"></md-input-container><md-input-container><label>Mass of Sample Added</label><input ng-model="ctrl.vialData.Mass450mlsample"></md-input-container><md-input-container><label>GC Vial ID</label><input ng-model="ctrl.vialData.gcVialID"></md-input-container></div></form></div></md-content><md-card-actions layout="column" layout-align="end-end"><md-button class="md-raised md-primary" ng-click="ctrl.addToQueue()" ng-disabled="ctrl.determineAddButtonStatus()">Add</md-button></md-card-actions></div></md-card></div><div flex="25" ng-show="ctrl.vials.length > 0"><md-card><md-card-title><md-card-title-text><span class="md-headline">Vials</span></md-card-title-text></md-card-title><div layout="column" ng-cloak class="md-inline-form"><md-content layout-padding><div><md-list-item ng-repeat="vial in ctrl.vials track by $index"><p>{{ ctrl.selectedVialType}}-{{ vial.vialId}}</p><md-button class="md-raised" ng-click="ctrl.removeFromQueue(vial)">DELETE</md-button></md-list-item></div></md-content><md-card-actions layout="column" layout-align="center-center"><md-button class="md-raised md-primary" ng-click="ctrl.saveVials()">Save Vials</md-button></md-card-actions></div></md-card></div></div>');
}]);
})();

(function(module) {
try {
  module = angular.module('biofuels.templates');
} catch (e) {
  module = angular.module('biofuels.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('sections/samples/new-batch/new-batch.tpl.html',
    '<div menu=""></div><div flex layout="row" layout-align="center start"><div flex="30"><md-card><md-card-header><md-card-header-text><span class="md-title">Batch</span> <span class="md-subhead">Header</span></md-card-header-text></md-card-header><md-card-content><form name="userForm" class="md-inline-form"><div layout="row" flex><md-input-container class="md-block" flex><label>Customer</label><md-select ng-model="ctrl.batchData.customerId"><md-option ng-repeat="customer in ctrl.customers" ng-value="customer.id">{{customer.customer_code}}</md-option></md-select></md-input-container><md-datepicker class="date-picker" ng-model="ctrl.batchData.shippedDate" md-placeholder="Shipped Date"></md-datepicker></div><div layout="row" flex><md-input-container class="md-block" flex><label>Sample Purpose</label><input type="text" ng-model="ctrl.batchData.purpose"></md-input-container><md-datepicker class="date-picker" ng-model="ctrl.batchData.receivedDate" md-placeholder="Received Date"></md-datepicker></div><div layout="row" flex><md-input-container class="md-block" flex><label>Storage Location</label><input type="text" ng-model="ctrl.batchData.storageLocation"></md-input-container></div></form></md-card-content></md-card></div><div flex="40"><md-card><md-card-header><md-card-header-text><span class="md-title">Sample</span> <span class="md-subhead">Number 1</span></md-card-header-text></md-card-header><md-card-content><form name="userForm" class="md-inline-form"><div layout="row" flex><md-input-container class="md-block" flex><label>Type</label><md-select ng-model="ctrl.workingSample.type"><md-option>Powder</md-option><md-option>Filter</md-option><md-option>Other</md-option></md-select></md-input-container><md-input-container class="md-block" flex><label>Name</label><input type="text" ng-model="ctrl.workingSample.name"></md-input-container></div><div layout="row" flex><md-input-container class="md-block" flex><label>Species ID</label><input type="text" ng-model="ctrl.workingSample.speciesId"></md-input-container><md-datepicker class="date-picker" ng-model="ctrl.workingSample.collectionDate" layout-align="end end" md-placeholder="Collection Date"></md-datepicker></div><div layout="row" flex><md-input-container class="md-block" flex><label>Container Type</label><md-select ng-model="ctrl.workingSample.containerType"><md-option>Glass</md-option><md-option>Container 2</md-option><md-option>Container 3</md-option><md-option value="other">Other</md-option></md-select></md-input-container><md-input-container class="md-block" flex ng-if="ctrl.workingSample.container===\'other\'"><label>Container Type</label><input type="text" ng-model="ctrl.workingSample.enteredContainer"></md-input-container><md-input-container class="md-block" ng-if="ctrl.workingSample.type === \'Powder\'"><label>Replicates</label><md-select ng-model="ctrl.workingSample.replicates"><md-option>0</md-option><md-option>1</md-option><md-option>2</md-option><md-option>3</md-option><md-option>4</md-option><md-option>5</md-option></md-select></md-input-container></div><div layout="row" flex><md-input-container class="md-block" flex><label>Description</label><textarea ng-model="ctrl.workingSample.description" md-maxlength="150" rows="5" md-select-on-focus flex></textarea></md-input-container></div></form></md-card-content><md-card-actions layout="row" layout-align="end center"><md-button class="md-primary" ng-if="!ctrl.isEditing()" ng-click="ctrl.addNewSample()">Add Sample</md-button><md-button class="md-primary" ng-if="ctrl.isEditing()" ng-click="ctrl.cancelEdit()">Cancel</md-button><md-button class="md-primary" ng-if="ctrl.isEditing()" ng-click="ctrl.saveEditedSample()">Save Sample</md-button></md-card-actions></md-card></div><div flex="30"><md-card><md-card-header><md-card-header-text><span class="md-title">Samples</span> <span class="md-subhead">Added</span></md-card-header-text></md-card-header><md-card-content><p ng-if="!ctrl.samples.length || ctrl.samples.length === 0">Add samples to see them over here.</p><md-list ng-if="ctrl.samples.length && ctrl.samples.length > 0" ng-cloak><md-list-item class="secondary-button-padding" ng-click="ctrl.editSample($index)" ng-repeat="sample in ctrl.samples"><p>{{sample.name}}</p><md-button class="md-secondary" ng-click="ctrl.deleteSample($index)">Delete</md-button></md-list-item></md-list></md-card-content><md-card-actions layout="row" layout-align="end center"><md-button class="md-primary" ng-click="ctrl.saveBatch($event)">Create Batch + Samples</md-button></md-card-actions></md-card></div></div>');
}]);
})();

'use strict';

angular.module('biofuels.core.customer', [
  'biofuels.core.customer.service'
]);

'use strict';

angular.module('biofuels.core.customer.service', [
    'biofuels.core.resource'
  ])
  .factory(
    'customerService',
    function ($log,
              resourceService,
              $q
    ) {
      function createCustomer (custName, custCode, contactName1, contactName2, billingName, address1, address2, city, state, postalCode, phoneNumber, email) {
        $log.debug('Creating customer');

        var payload = {
          customer_name: custName,
          customer_code: custCode,
          contact_name1: contactName1,
          contact_name2: contactName2,
          billing_name: billingName,
          address_1: address1,
          address_2: address2,
          city: city,
          state: state,
          postal_code: postalCode,
          phone_number: phoneNumber,
          email: email
        };

        return resourceService.customerCreate.save(payload).$promise.then(function (data) {
          $log.debug(data);
        }).catch(function (err) {
          $log.error(err);
          return $q.reject(err.data);
        });
      }


      function getCustomers () {
        $log.debug('Getting customers');

        var query = {};

        return resourceService.customerList.get(query).$promise.then(function (data) {
          $log.debug(data);
          return data;
        }).catch(function (err) {
          $log.error(err);
          return $q.reject(err.data);
        });
      }

      return {
        createCustomer: createCustomer,
        getCustomers: getCustomers
      };
    }
  );


(function(module) {
try {
  module = angular.module('biofuels.templates');
} catch (e) {
  module = angular.module('biofuels.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('sections/customers/create-customer/create-customer.tpl.html',
    '<div menu=""></div><div layout="row" layout-align="center center"><div flex-xs="90" flex-sm="75" flex-md="75" flex-gt-md="50"><md-card><md-card-title><md-card-title-text><span class="md-headline">Create Customer</span></md-card-title-text></md-card-title><div layout="column" ng-cloak class="md-inline-form"><md-content layout-padding><div><form name="userForm"><div layout-gt-xs="row"><md-input-container class="md-block" flex-gt-xs><label>Customer Name</label><input ng-model="ctrl.customerData.name"></md-input-container><md-input-container class="md-block"><label>Code</label><input ng-model="ctrl.customerData.code" required md-maxlength="4"></md-input-container></div><div layout-gt-xs="row"><md-input-container class="md-block" flex-gt-xs><label>Contact Name #1</label><input ng-model="ctrl.customerData.contactName1"></md-input-container><md-input-container class="md-block" flex-gt-xs><label>Contact Name #2</label><input ng-model="ctrl.customerData.contactName2"></md-input-container><md-input-container class="md-block" flex-gt-xs><label>Name for Billing</label><input ng-model="ctrl.customerData.billingName"></md-input-container></div><div layout-gt-xs="row"><md-input-container class="md-block" flex-gt-xs><label>Ship to Address</label><input ng-model="ctrl.customerData.address"></md-input-container><md-input-container class="md-block" flex-gt-xs><input ng-model="ctrl.customerData.address2" placeholder="Address 2"></md-input-container></div><div layout-gt-xs="row"><md-input-container class="md-block" flex-gt-xs><label>City</label><input ng-model="ctrl.customerData.city"></md-input-container><md-input-container class="md-block" flex-gt-xs><label>State</label><md-select ng-model="ctrl.customerData.state"><md-option ng-repeat="state in ctrl.states" value="{{state.abbrev}}">{{state.abbrev}}</md-option></md-select></md-input-container><md-input-container class="md-block" flex-gt-xs><label>Postal Code</label><input name="postalCode" ng-model="ctrl.customerData.postalCode" required ng-pattern="/^[0-9]{5}$/" md-maxlength="5"><div ng-messages="userForm.postalCode.$error" role="alert" multiple="multiple"><div ng-message="required" class="my-message">You must supply a postal code.</div><div ng-message="pattern" class="my-message">That doesn\'t look like a valid postal code.</div><div ng-message="md-maxlength" class="my-message">Don\'t use the long version silly...we don\'t need to be that specific.</div></div></md-input-container></div><div layout-gt-xs="row"><md-input-container class="md-block" flex-gt-xs><label>Email</label><input ng-model="ctrl.customerData.email"></md-input-container><md-input-container class="md-block" flex-gt-xs><label>Phone Number</label><input ng-model="ctrl.customerData.phoneNumber"></md-input-container></div><div layout-gt-xs="row"><md-input-container class="md-block" flex-gt-xs><label>Purchase Order Number</label><input ng-model="ctrl.customerData.PONumber"></md-input-container><md-input-container class="md-block"><md-button class="md-raised" ng-click="ctrl.addToPOList(ctrl.customerData.PONumber)" ng-disabled="!ctrl.customerData.PONumber">ADD</md-button></md-input-container></div><div><md-list-item ng-repeat="poNumber in ctrl.customerData.PONumbers track by $index"><p>{{ poNumber }}</p><md-button class="md-raised" ng-click="ctrl.removeFromPOList(poNumber)">DELETE</md-button></md-list-item></div></form></div></md-content><md-card-actions layout="row" layout-align="end-center"><md-button class="md-raised md-primary" ng-click="ctrl.createCustomer()" ng-disabled="!(ctrl.customerData.name && ctrl.customerData.code &&\n' +
    '          ctrl.customerData.contactName1 && ctrl.customerData.billingName && ctrl.customerData.address && ctrl.customerData.city && ctrl.customerData.state\n' +
    '          && ctrl.customerData.postalCode && ctrl.customerData.email && ctrl.customerData.phoneNumber && ctrl.customerData.PONumbers.length > 0)">Create Customer</md-button></md-card-actions></div></md-card></div></div>');
}]);
})();

(function(module) {
try {
  module = angular.module('biofuels.templates');
} catch (e) {
  module = angular.module('biofuels.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('sections/vials/vials.tpl.html',
    '<div menu=""></div><md-toolbar class="md-accent"><div class="md-toolbar-tools"><md-select ng-model="ctrl.selectedVialType" aria-label="Vial Selection" ng-change="ctrl.changeVialType()"><md-option ng-repeat="vialType in ctrl.vialTypes" value="{{vialType.code}}">{{vialType.description}}</md-option></md-select><md-button class="" aria-label="Create Vials" ui-sref="createVials">Create Vials</md-button><md-button class="" aria-label="Edit Vials">Edit Vials</md-button></div></md-toolbar><md-content layout-padding><md-table-container><table md-table md-row-select ng-model="ctrl.selected"><thead md-head md-order="query.order" md-on-reorder="ctrl.onReorder"><tr md-row><th md-column><span>Vial ID</span></th><th md-column><span>Sample ID</span></th><th md-column><span>Day Prepared</span></th><th md-column><span>Status</span></th><th md-column ng-show="ctrl.selectedVialType == \'RXN\'"><span>FA Mass</span></th><th md-column ng-show="ctrl.selectedVialType == \'RXN\'"><span>C15 ISTD Concentration</span></th><th md-column ng-show="ctrl.selectedVialType == \'GC\'"><span>C13 Mass</span></th><th md-column ng-show="ctrl.selectedVialType == \'GC\'"><span>C13 ISTD Concentration</span></th><th md-column ng-show="ctrl.selectedVialType == \'GC\'"><span>C19 ISTD Concentration</span></th><th md-column ng-show="ctrl.selectedVialType == \'SPK\'"><span>GC Vial ID</span></th><th md-column ng-show="ctrl.selectedVialType == \'SPK\'"><span>C15 ISTD Concentration</span></th><th md-column ng-show="ctrl.selectedVialType == \'SPK\'"><span>Sample Mass</span></th></tr></thead><tbody md-body><tr md-row ng-repeat="vial in ctrl.vials" md-select="vial" md-select-id="{{vial}}" md-auto-select><td md-cell>{{vial.vial_id}}</td><td md-cell>{{vial.id}}</td><td md-cell>{{ctrl.convertDateString(vial.date_prepared)}}</td><td md-cell>{{vial.status}}</td><td md-cell ng-show="ctrl.selectedVialType == \'RXN\'">{{vial.fatty_acid_mass}}</td><td md-cell ng-show="ctrl.selectedVialType == \'RXN\'">{{vial.c15_istd_concentration}}</td><td md-cell ng-show="ctrl.selectedVialType == \'GC\'">{{vial.c13_mass}}</td><td md-cell ng-show="ctrl.selectedVialType == \'GC\'">{{vial.c13_istd_concentration}}</td><td md-cell ng-show="ctrl.selectedVialType == \'GC\'">{{vial.c19_istd_concentration}}</td><td md-cell ng-show="ctrl.selectedVialType == \'SPK\'">{{vial.gc_vial_id}}</td><td md-cell ng-show="ctrl.selectedVialType == \'SPK\'">{{vial.c15_mass}}</td><td md-cell ng-show="ctrl.selectedVialType == \'SPK\'">{{vial.Mass_450ml_sample}}</td></tr></tbody></table></md-table-container><md-table-pagination md-limit="ctrl.query.limit" md-page="ctrl.query.page" md-total="{{ctrl.desserts.count}}" md-on-paginate="onPaginate" md-page-select></md-table-pagination></md-content>');
}]);
})();

'use strict';

angular.module('biofuels.core.resource', [
  'biofuels.core.resource.service'
]);

'use strict';

angular.module('biofuels.core.resource.service', [
  'ngResource'
])
  .factory(
    'resourceService',
    function ($resource, $localStorage) {
      var token = '';
      if ($localStorage
        && $localStorage.userProfile
        && $localStorage.userProfile.token) {
          token = $localStorage.userProfile.token;
      }
      var url = 'https://biofuels-csis471.rhcloud.com';

      var userAuth = $resource(url + '/api/v1/user/auth', {}, {
        'save': {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          }
        }
      });

      var userRegister = $resource(url + '/api/v1/user/create', {}, {
        'save': {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          }
        }
      });

      var customerList = $resource(url + '/api/v1/customer/list', {}, {
        'get': {
          method: 'GET',
          headers: {
            'Authorization': 'Bearer ' + token,
            'Content-Type': 'application/json'
          }
        }
      });

      var customerCreate = $resource(url + '/api/v1/customer/create', {}, {
        'save': {
          method: 'POST',
          headers: {
            'Authorization': 'Bearer ' + token,
            'Content-Type': 'application/json'
          }
        }
      });

      var vialList = $resource(url + '/api/v1/vial/list', {}, {
        'get': {
          method: 'GET',
          headers: {
            'Authorization': 'Bearer ' + token,
            'Content-Type': 'application/json'
          }
        }
      });

      var vialCreate = $resource(url + '/api/v1/vial/create', {}, {
        'save': {
          method: 'POST',
          headers: {
            'Authorization': 'Bearer ' + token,
            'Content-Type': 'application/json'
          }
        }
      });

      var sampleList = $resource(url + '/api/v1/sample/list', {}, {
        'save': {
          method: 'GET',
          headers: {
            'Authorization': 'Bearer ' + token,
            'Content-Type': 'application/json'
          }
        }
      });

      var batchCreate = $resource(url + '/api/v1/batch/create', {}, {
        'save': {
          method: 'POST',
          headers: {
            'Authorization': 'Bearer ' + token,
            'Content-Type': 'application/json'
          }
        }
      });


      return {
        userAuth: userAuth,
        userRegister: userRegister,
        customerList: customerList,
        customerCreate: customerCreate,
        vialList: vialList,
        vialCreate: vialCreate,
        sampleList: sampleList,
        batchCreate: batchCreate
      };
    }
  );


(function(module) {
try {
  module = angular.module('biofuels.templates');
} catch (e) {
  module = angular.module('biofuels.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('sections/samples/samples.tpl.html',
    '<div menu=""></div><md-toolbar class="md-accent"><div class="md-toolbar-tools"><md-select ng-model="ctrl.selectedBatch" placeholder="Select a batch" ng-change="ctrl.updateBatchId()"><md-option ng-value="batch" ng-repeat="batch in ctrl.batches">{{ batch }}</md-option></md-select><md-button class="" aria-label="Home Page" ui-sref="newBatch">New Batch</md-button><md-button class="" aria-label="Samples Page">Rxn Selection</md-button><md-button class="" aria-label="Vials Page">Esterification</md-button><md-button class="" aria-label="Vials Page">FAME</md-button></div></md-toolbar><md-content layout-padding><md-table-container><table md-table md-row-select ng-model="ctrl.selected"><thead md-head md-order="query.order" md-on-reorder="ctrl.onReorder"><tr md-row><th md-column><span>Sample ID</span></th><th md-column md-numeric><span>Type</span></th><th md-column md-numeric>Species ID</th><th md-column md-numeric>RXN VIAL #</th><th md-column md-numeric>ESTERIFICATION</th><th md-column md-numeric>FAME</th></tr></thead><tbody md-body><tr md-row ng-repeat="sample in ctrl.samples" md-select="sample" md-select-id="{{sample}}" md-auto-select><td md-cell>{{sample.id}}</td><td md-cell>{{sample.type}}</td><td md-cell>{{sample.species_id}}</td><td md-cell>{{sample.rxn_vial_id}}</td><td md-cell>{{sample.esterification_complete === 1}}</td><td md-cell>{{sample.fame_complete === 1}}</td></tr></tbody></table></md-table-container><md-table-pagination md-limit="ctrl.query.limit" md-page="ctrl.query.page" md-total="{{ctrl.samples.count}}" md-on-paginate="onPaginate" md-page-select></md-table-pagination></md-content>');
}]);
})();

(function(module) {
try {
  module = angular.module('biofuels.templates');
} catch (e) {
  module = angular.module('biofuels.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('sections/login/login.tpl.html',
    '<div layout="row" class="login__container" layout-align="center center"><div flex-gt-xs="50" flex-gt-sm="40" flex-gt-md="30"><md-card><img ng-src="images/login-header-3.jpg" class="md-card-image" alt="image caption"><md-tabs md-selected="ctrl.selectedTab" md-center-tabs md-dynamic-height md-stretch-tabs="always"><md-tab id="tab1"><md-tab-label>Login</md-tab-label><md-tab-body><md-content layout-padding><div><form name="userForm" ng-submit="ctrl.loginUser()"><md-input-container class="md-block"><label>Email</label><input ng-model="ctrl.userLogin.email" required></md-input-container><md-input-container class="md-block"><label>Password</label><input type="password" ng-model="ctrl.userLogin.password" ng-keypress="ctrl.onEnter($event)" required></md-input-container></form></div><p ng-class="{ \'form-success\' : ctrl.formResponse,\n' +
    '\n' +
    '        \'form-error\' : ctrl.formError }">{{ ctrl.formResponse || ctrl.formError }}</p></md-content></md-tab-body></md-tab><md-tab id="tab2"><md-tab-label>Register</md-tab-label><md-tab-body><md-content layout-padding><div><form name="registerForm"><md-input-container class="md-block"><label>Full Name</label><input ng-model="ctrl.userRegister.fullName" name="fullName" required md-maxlength="40"><div ng-messages="registerForm.fullName.$error"><ng-message when="[\'required\', \'maxlength\']">This is required!</ng-message></div></md-input-container><md-input-container class="md-block"><label>Liberty Email</label><input type="email" ng-model="ctrl.userRegister.email" name="userEmail" ng-pattern="/^[\\w.]+@liberty.edu$/" required><div ng-messages="registerForm.userEmail.$error" ng-messages-multiple><div ng-message="required">This is required!</div><div ng-message="pattern">You must have a liberty email</div></div></md-input-container><md-input-container class="md-block"><label>Password</label><input type="password" name="password" ng-model="ctrl.userRegister.password" ng-pattern="/^[a-zA-Z]\\w{5,20}$/"><div ng-messages="registerForm.password.$error" ng-messages-multiple><div ng-message="required">This is required!</div><div ng-message="pattern">You need a more complex password</div></div></md-input-container></form></div><p ng-class="{ \'form-success\' : ctrl.registerFormResponse,\n' +
    '\n' +
    '        \'form-error\' : ctrl.registerFormError }">{{ ctrl.registerFormResponse || ctrl.registerFormError }}</p></md-content></md-tab-body></md-tab></md-tabs><md-card-actions layout="row" layout-align="end center"><md-button class="md-raised md-primary" ng-show="ctrl.selectedTab === 0" aria-label="Proceed" ng-click="ctrl.loginUser()" ng-disabled="!userForm.$valid">Login</md-button><md-button class="md-raised md-primary" ng-show="ctrl.selectedTab === 1" aria-label="Proceed" ng-click="ctrl.registerUser()" ng-disabled="!registerForm.$valid">Register</md-button></md-card-actions></md-card></div></div>');
}]);
})();

'use strict';

angular.module('biofuels.component.menu', [
  'biofuels.component.menu.controller',
  'biofuels.component.menu.directive'
]);

(function(module) {
try {
  module = angular.module('biofuels.templates');
} catch (e) {
  module = angular.module('biofuels.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('sections/customers/customers.tpl.html',
    '<div menu=""></div><md-toolbar class="md-accent"><div class="md-toolbar-tools"><md-button class="" aria-label="Home Page" ui-sref="createCustomer">New Customer</md-button><md-button class="" aria-label="Samples Page">Edit Customer</md-button></div></md-toolbar><md-content layout-padding><md-table-container><table md-table md-row-select ng-model="ctrl.selected"><thead md-head md-order="query.order" md-on-reorder="ctrl.onReorder"><tr md-row><th md-column><span>ID</span></th><th md-column><span>Customer Name</span></th><th md-column><span>Customer Code</span></th><th md-column><span>Contact Name #1</span></th><th md-column><span>Contact Name #2</span></th><th md-column><span>Billing Name</span></th><th md-column><span>Address</span></th><th md-column><span>Address 2</span></th><th md-column><span>City</span></th><th md-column><span>State</span></th><th md-column><span>Postal Code</span></th><th md-column><span>Phone Number</span></th><th md-column><span>email</span></th></tr></thead><tbody md-body><tr md-row ng-repeat="customer in ctrl.customers" md-select="customer" md-select-id="{{customer}}" md-auto-select><td md-cell>{{customer.id}}</td><td md-cell>{{customer.customer_name}}</td><td md-cell>{{customer.customer_code}}</td><td md-cell>{{customer.contact_name1}}</td><td md-cell>{{customer.contact_name2}}</td><td md-cell>{{customer.billing_name}}</td><td md-cell>{{customer.address_1}}</td><td md-cell>{{customer.address_2}}</td><td md-cell>{{customer.city}}</td><td md-cell>{{customer.state}}</td><td md-cell>{{customer.postal_code}}</td><td md-cell>{{customer.phone_number}}</td><td md-cell>{{customer.email}}</td></tr></tbody></table></md-table-container><md-table-pagination md-limit="ctrl.query.limit" md-page="ctrl.query.page" md-total="{{ctrl.desserts.count}}" md-on-paginate="onPaginate" md-page-select></md-table-pagination></md-content>');
}]);
})();

'use strict';

angular.module('biofuels.component.menu.directive', [
    'biofuels.component.menu.controller'
  ])
  .directive(
    'menu',
    function () {
      return {
        restrict: 'A',
        templateUrl: 'components/menu/menu.tpl.html',
        controller: 'MenuCtrl as menuCtrl'
      };
    }
  );


'use strict';

angular.module('biofuels.component.menu.controller', [
    'ngStorage'
  ])
  .controller(
    'MenuCtrl',
    function ($localStorage) {
      (function (vm) {
        vm.userProfile = $localStorage.userProfile;
      })(this);
    }
  );


(function(module) {
try {
  module = angular.module('biofuels.templates');
} catch (e) {
  module = angular.module('biofuels.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('sections/home/home.tpl.html',
    '<div menu=""></div><md-content layout-padding><div layout="row" layout-sm="column"><div flex-gt-sm="45"><canvas id="pie" class="chart chart-pie" chart-data="ctrl.data" chart-labels="ctrl.labels"></canvas></div><div flex-gt-sm="55"><canvas id="line1" class="chart chart-line" chart-data="ctrl.lineData" chart-labels="ctrl.lineLabels" chart-legend="true" chart-series="ctrl.lineSeries" chart-click="onClick"></canvas></div><div flex-gt-sm="45"><canvas id="pie2" class="chart chart-pie" chart-data="ctrl.data" chart-labels="ctrl.labels"></canvas></div></div><div layout="row"><div flex="35"><canvas id="line" class="chart chart-line" chart-data="ctrl.lineData" chart-labels="ctrl.lineLabels" chart-legend="true" chart-series="ctrl.lineSeries" chart-click="onClick"></canvas></div><div flex><canvas id="radar" class="chart chart-radar" chart-data="ctrl.radarData" chart-labels="ctrl.radarLabels"></canvas></div><div flex><canvas id="bar" class="chart chart-bar" chart-data="ctrl.barData" chart-labels="ctrl.barLabels" chart-series="ctrl.barSeries"></canvas></div></div></md-content>');
}]);
})();

'use strict';

angular.module('biofuels', [
    'ngMaterial',
    'ui.router',
    'chart.js',
    'md.data.table',
    'biofuels.component.menu',
    'biofuels.core.customer',
    'biofuels.core.resource',
    'biofuels.core.router',
    'biofuels.core.sample',
    'biofuels.core.user',
    'biofuels.core.vial',
    'biofuels.core.wrappers',
    'biofuels.sections.createCustomer',
    'biofuels.sections.customers',
    'biofuels.sections.createVials',
    'biofuels.sections.home',
    'biofuels.sections.login',
    'biofuels.sections.newBatch',
    'biofuels.sections.samples',
    'biofuels.sections.vials'
  ])
  .config(function($mdThemingProvider) {
    var greenDarkContrast = $mdThemingProvider.extendPalette('green', {
      'contrastDefaultColor': 'dark',
      'contrastLightColors': 'light'
    });
    // Register the new color palette map with the name <code>neonRed</code>
    $mdThemingProvider.definePalette('greenDark', greenDarkContrast);

    $mdThemingProvider.definePalette('amazingPaletteName', {
      '50': 'ffebee',
      '100': 'ffcdd2',
      '200': 'ef9a9a',
      '300': 'e57373',
      '400': 'ef5350',
      '500': 'f44336',
      '600': 'e53935',
      '700': 'd32f2f',
      '800': 'c62828',
      '900': 'b71c1c',
      'A100': 'ff8a80',
      'A200': 'ff5252',
      'A400': 'ff1744',
      'A700': 'd50000',
      'contrastDefaultColor': 'light',    // whether, by default, text (contrast)
                                          // on this palette should be dark or light
      'contrastDarkColors': ['50', '100', //hues which contrast should be 'dark' by default
        '200', '300', '400', 'A100'],
      'contrastLightColors': undefined    // could also specify this if default was 'dark'
    });

    $mdThemingProvider.theme('default')
      .primaryPalette('blue-grey')
      .accentPalette('greenDark')
      .backgroundPalette('grey');
  })
  .run(function ($log) {
    $log.debug('Welcome to Angular!');
  });

(function(module) {
try {
  module = angular.module('biofuels.templates');
} catch (e) {
  module = angular.module('biofuels.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('components/menu/menu.tpl.html',
    '<md-toolbar><div class="md-toolbar-tools"><a><img class="menu__logo" src="images/bio-logo.svg"></a><md-button class="md-primary" aria-label="Home Page" ui-sref="home">Home</md-button><md-button aria-label="Samples Page" ui-sref="samples">Samples</md-button><md-button aria-label="Vials Page" ui-sref="vials">Vials</md-button><md-button aria-label="Customers Page" ui-sref="customers">Customers</md-button><span flex></span><md-button>Hey, {{menuCtrl.userProfile.fullName}}</md-button><md-button class="md-raised" aria-label="Learn More">Logout</md-button></div></md-toolbar>');
}]);
})();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlY3Rpb25zL3ZpYWxzL2NyZWF0ZS12aWFscy9jcmVhdGUtdmlhbHMuanMiLCJzZWN0aW9ucy92aWFscy9jcmVhdGUtdmlhbHMvY3JlYXRlLXZpYWxzLWNvbnRyb2xsZXIuanMiLCJzZWN0aW9ucy9zYW1wbGVzL25ldy1iYXRjaC9uZXctYmF0Y2guanMiLCJzZWN0aW9ucy9zYW1wbGVzL25ldy1iYXRjaC9uZXctYmF0Y2gtY29udHJvbGxlci5qcyIsInNlY3Rpb25zL2N1c3RvbWVycy9jcmVhdGUtY3VzdG9tZXIvY3JlYXRlLWN1c3RvbWVyLmpzIiwic2VjdGlvbnMvY3VzdG9tZXJzL2NyZWF0ZS1jdXN0b21lci9jcmVhdGUtY3VzdG9tZXItY29udHJvbGxlci5qcyIsInNlY3Rpb25zL3ZpYWxzL3ZpYWxzLmpzIiwic2VjdGlvbnMvdmlhbHMvdmlhbHMtY29udHJvbGxlci5qcyIsInNlY3Rpb25zL3NhbXBsZXMvc2FtcGxlcy5qcyIsInNlY3Rpb25zL3NhbXBsZXMvc2FtcGxlcy1jb250cm9sbGVyLmpzIiwic2VjdGlvbnMvbG9naW4vbG9naW4uanMiLCJzZWN0aW9ucy9sb2dpbi9sb2dpbi1jb250cm9sbGVyLmpzIiwic2VjdGlvbnMvY3VzdG9tZXJzL2N1c3RvbWVycy5qcyIsInNlY3Rpb25zL2N1c3RvbWVycy9jdXN0b21lcnMtY29udHJvbGxlci5qcyIsInNlY3Rpb25zL2hvbWUvaG9tZS5qcyIsInNlY3Rpb25zL2hvbWUvaG9tZS1jb250cm9sbGVyLmpzIiwiY29yZS93cmFwcGVycy93cmFwcGVycy5qcyIsImNvcmUvd3JhcHBlcnMvdW5kZXJzY29yZS5qcyIsImNvcmUvdmlhbC92aWFsLmpzIiwiY29yZS92aWFsL3ZpYWwtc2VydmljZS5qcyIsImNvcmUvdXNlci91c2VyLmpzIiwiY29yZS91c2VyL3VzZXItc2VydmljZS5qcyIsImNvcmUvdGVtcGxhdGVzL3RlbXBsYXRlcy5qcyIsImNvcmUvc2FtcGxlL3NhbXBsZS5qcyIsImNvcmUvc2FtcGxlL3NhbXBsZS1zZXJ2aWNlLmpzIiwiY29yZS9yb3V0ZXIvcm91dGVyLmpzIiwiY29yZS9yb3V0ZXIvcm91dGVyLWNvbnN0YW50cy5qcyIsImNvcmUvcm91dGVyL3JvdXRlci1jb25maWcuanMiLCJzZWN0aW9ucy92aWFscy9jcmVhdGUtdmlhbHMvY3JlYXRlLXZpYWxzLnRwbC5qcyIsInNlY3Rpb25zL3NhbXBsZXMvbmV3LWJhdGNoL25ldy1iYXRjaC50cGwuanMiLCJjb3JlL2N1c3RvbWVyL2N1c3RvbWVyLmpzIiwiY29yZS9jdXN0b21lci9jdXN0b21lci1zZXJ2aWNlLmpzIiwic2VjdGlvbnMvY3VzdG9tZXJzL2NyZWF0ZS1jdXN0b21lci9jcmVhdGUtY3VzdG9tZXIudHBsLmpzIiwic2VjdGlvbnMvdmlhbHMvdmlhbHMudHBsLmpzIiwiY29yZS9yZXNvdXJjZS9yZXNvdXJjZS5qcyIsImNvcmUvcmVzb3VyY2UvcmVzb3VyY2Utc2VydmljZS5qcyIsInNlY3Rpb25zL3NhbXBsZXMvc2FtcGxlcy50cGwuanMiLCJzZWN0aW9ucy9sb2dpbi9sb2dpbi50cGwuanMiLCJjb21wb25lbnRzL21lbnUvbWVudS5qcyIsInNlY3Rpb25zL2N1c3RvbWVycy9jdXN0b21lcnMudHBsLmpzIiwiY29tcG9uZW50cy9tZW51L21lbnUtZGlyZWN0aXZlLmpzIiwiY29tcG9uZW50cy9tZW51L21lbnUtY29udHJvbGxlci5qcyIsInNlY3Rpb25zL2hvbWUvaG9tZS50cGwuanMiLCJjb3JlL2FwcC5qcyIsImNvbXBvbmVudHMvbWVudS9tZW51LnRwbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ05BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDN0ZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDTkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQy9FQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ05BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ2xEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ05BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ2xEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ05BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDakNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDTkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUM1REE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUNOQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDNUJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDTkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDekNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ0xBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUNWQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUNMQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ25EQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUNMQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQzVEQTtBQUNBO0FBQ0E7QUFDQTtBQ0hBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ0xBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQzVDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ05BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ2RBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUMvRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDWEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDWEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDTEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDM0RBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUNiQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUNYQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUNMQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQzVHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUNYQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ2ZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDTkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDWEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ2hCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUNkQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUNYQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUM5REE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImFwcC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmFuZ3VsYXIubW9kdWxlKCdiaW9mdWVscy5zZWN0aW9ucy5jcmVhdGVWaWFscycsIFtcbiAgJ2Jpb2Z1ZWxzLnNlY3Rpb25zLmNyZWF0ZVZpYWxzLmNvbnRyb2xsZXInXG5dKTtcblxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5hbmd1bGFyLm1vZHVsZSgnYmlvZnVlbHMuc2VjdGlvbnMuY3JlYXRlVmlhbHMuY29udHJvbGxlcicsIFtdKVxuICAuY29udHJvbGxlcignY3JlYXRlVmlhbHNDdHJsJyxcbiAgICBmdW5jdGlvbiAoJGxvZyxcbiAgICAgICAgICAgICAgdmlhbFNlcnZpY2UsXG4gICAgICAgICAgICAgICRzdGF0ZSxcbiAgICAgICAgICAgICAgUk9VVEVTKSB7XG4gICAgICAoZnVuY3Rpb24gKHZtKSB7XG4gICAgICAgICRsb2cuZGVidWcoJ1RoaXMgaXMgZnJvbSB0aGUgaG9tZSBwYWdlJyk7XG4gICAgICAgIHZtLnZpYWxEYXRhID0ge307XG4gICAgICAgIHZtLnZpYWxzID0gW107XG4gICAgICAgIHZtLmlkQ291bnRlciA9IDA7XG5cbiAgICAgICAgdm0udmlhbFR5cGVzID0gW3tcbiAgICAgICAgICBjb2RlOiAnUlhOJyxcbiAgICAgICAgICBkZXNjcmlwdGlvbjogJ1JFQUNUSU9OJ1xuICAgICAgICB9LCB7XG4gICAgICAgICAgY29kZTogJ0dDJyxcbiAgICAgICAgICBkZXNjcmlwdGlvbjogJ0dDJ1xuICAgICAgICB9LCB7XG4gICAgICAgICAgY29kZTogJ1NQSycsXG4gICAgICAgICAgZGVzY3JpcHRpb246ICdTUElLRUQnXG4gICAgICAgIH1dO1xuXG4gICAgICAgIHZtLmFkZFRvUXVldWUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgJGxvZy5kZWJ1ZygnQWRkZWQgdG8gUXVldWUnKTtcbiAgICAgICAgICBpZiAodm0uc2VsZWN0ZWRWaWFsVHlwZSA9PT0gJ1JYTicpIHtcbiAgICAgICAgICAgIHZtLnZpYWwgPSB7XG4gICAgICAgICAgICAgIHZpYWxJZDogdm0udmlhbERhdGEudmlhbElkLnRvU3RyaW5nKCksXG4gICAgICAgICAgICAgIHByZXBhcmF0aW9uRGF0ZTogdm0udmlhbERhdGEucHJlcGFyYXRpb25EYXRlLFxuICAgICAgICAgICAgICB2aWFsU3RhdHVzOiAwLFxuICAgICAgICAgICAgICBmYXR0eUFjaWRtYXNzOiBOdW1iZXIodm0udmlhbERhdGEuZmF0dHlBY2lkbWFzcyksXG4gICAgICAgICAgICAgIGMxNUlzdGRjb246IE51bWJlcih2bS52aWFsRGF0YS5jMTVJc3RkY29uKVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICB9IGVsc2UgaWYgKHZtLnNlbGVjdGVkVmlhbFR5cGUgPT09ICdHQycpIHtcbiAgICAgICAgICAgIHZtLnZpYWwgPSB7XG4gICAgICAgICAgICAgIHZpYWxJZDogdm0udmlhbERhdGEudmlhbElkLnRvU3RyaW5nKCksXG4gICAgICAgICAgICAgIHByZXBhcmF0aW9uRGF0ZTogdm0udmlhbERhdGEucHJlcGFyYXRpb25EYXRlLFxuICAgICAgICAgICAgICB2aWFsU3RhdHVzOiAwLFxuICAgICAgICAgICAgICBjMTNNYXNzOiBOdW1iZXIodm0udmlhbERhdGEuYzEzTWFzcyksXG4gICAgICAgICAgICAgIGMxM0lzdGRjb246IE51bWJlcih2bS52aWFsRGF0YS5jMTNJc3RkY29uKSxcbiAgICAgICAgICAgICAgYzE5SXN0ZGNvbjogTnVtYmVyKHZtLnZpYWxEYXRhLmMxOUlzdGRjb24pXG4gICAgICAgICAgfTtcbiAgICAgICAgICB9IGVsc2UgaWYgKHZtLnNlbGVjdGVkVmlhbFR5cGUgPT09ICdTUEsnKSB7XG4gICAgICAgICAgICB2bS52aWFsID0ge1xuICAgICAgICAgICAgICB2aWFsSWQ6IHZtLnZpYWxEYXRhLnZpYWxJZC50b1N0cmluZygpLFxuICAgICAgICAgICAgICBwcmVwYXJhdGlvbkRhdGU6IHZtLnZpYWxEYXRhLnByZXBhcmF0aW9uRGF0ZSxcbiAgICAgICAgICAgICAgdmlhbFN0YXR1czogMCxcbiAgICAgICAgICAgICAgYzE1TWFzczogTnVtYmVyKHZtLnZpYWxEYXRhLmMxNU1hc3MpLFxuICAgICAgICAgICAgICBNYXNzNDUwbWxzYW1wbGU6IE51bWJlcih2bS52aWFsRGF0YS5NYXNzNDUwbWxzYW1wbGUpXG4gICAgICAgICAgICB9O1xuICAgICAgICAgIH1cbiAgICAgICAgICB2bS52aWFscy5wdXNoKHZtLnZpYWwpO1xuXG4gICAgICAgICAgdm0udmlhbERhdGEudmlhbElkKys7XG4gICAgICAgIH07XG5cbiAgICAgICAgdm0ucmVtb3ZlRnJvbVF1ZXVlID0gZnVuY3Rpb24gKHZpYWwpIHtcbiAgICAgICAgICAkbG9nLmRlYnVnKHZpYWwpO1xuICAgICAgICAgIHZhciBpbmRleCA9IHZtLnZpYWxzLmluZGV4T2YodmlhbCk7XG4gICAgICAgICAgaWYgKGluZGV4ID4gLTEpIHtcbiAgICAgICAgICAgIHZtLnZpYWxzLnNwbGljZShpbmRleCwgMSk7XG4gICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIHZtLnNhdmVWaWFscyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAkbG9nLmRlYnVnKCdTYXZlZCB2aWFscycpO1xuXG4gICAgICAgICAgdm0uZm9ybUVycm9yID0gJyc7XG4gICAgICAgICAgdm0uZm9ybVJlc3BvbnNlID0gJyc7XG4gICAgICAgICAgdmlhbFNlcnZpY2UuY3JlYXRlVmlhbCh2bS5zZWxlY3RlZFZpYWxUeXBlLCB2bS52aWFscykudGhlbihmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgdm0uZm9ybVJlc3BvbnNlID0gJ1N1Y2Nlc3NmdWxseSBtYWRlIHZpYWxzISc7XG4gICAgICAgICAgICAkc3RhdGUuZ28oUk9VVEVTLlZJQUxTKTtcbiAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgICAgICB2bS5mb3JtRXJyb3IgPSBlcnIuZXJyb3I7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH07XG5cbiAgICAgICAgdm0uZGV0ZXJtaW5lQWRkQnV0dG9uU3RhdHVzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgIC8vIFJldHVybmluZyB0cnVlIGRpc2FibGVzIHRoZSBBREQgYnV0dG9uXG4gICAgICAgICAgaWYgKHZtLnNlbGVjdGVkVmlhbFR5cGUgPT09ICdSWE4nKSB7XG4gICAgICAgICAgICByZXR1cm4gISh2bS52aWFsRGF0YS52aWFsSWQgJiYgdm0udmlhbERhdGEucHJlcGFyYXRpb25EYXRlICYmIHZtLnZpYWxEYXRhLmZhdHR5QWNpZG1hc3MgJiYgdm0udmlhbERhdGEuYzE1SXN0ZGNvbik7XG4gICAgICAgICAgfSBlbHNlIGlmICh2bS5zZWxlY3RlZFZpYWxUeXBlID09PSAnR0MnKSB7XG4gICAgICAgICAgICByZXR1cm4gISh2bS52aWFsRGF0YS52aWFsSWQgJiYgdm0udmlhbERhdGEucHJlcGFyYXRpb25EYXRlICYmIHZtLnZpYWxEYXRhLmMxM01hc3MgJiYgdm0udmlhbERhdGEuYzEzSXN0ZGNvbiAmJiB2bS52aWFsRGF0YS5jMTlJc3RkY29uKTtcbiAgICAgICAgICB9IGVsc2UgaWYgKHZtLnNlbGVjdGVkVmlhbFR5cGUgPT09ICdTUEsnKSB7XG4gICAgICAgICAgICByZXR1cm4gISh2bS52aWFsRGF0YS52aWFsSWQgJiYgdm0udmlhbERhdGEucHJlcGFyYXRpb25EYXRlICYmIHZtLnZpYWxEYXRhLmMxNU1hc3MgJiYgdm0udmlhbERhdGEuTWFzczQ1MG1sc2FtcGxlICYmIHZtLnZpYWxEYXRhLmdjVmlhbElEKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH07XG5cbiAgICAgIH0pKHRoaXMpO1xuICAgIH0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5hbmd1bGFyLm1vZHVsZSgnYmlvZnVlbHMuc2VjdGlvbnMubmV3QmF0Y2gnLCBbXG4gICdiaW9mdWVscy5zZWN0aW9ucy5uZXdCYXRjaC5jb250cm9sbGVyJ1xuXSk7XG5cbiIsIid1c2Ugc3RyaWN0JztcblxuYW5ndWxhci5tb2R1bGUoJ2Jpb2Z1ZWxzLnNlY3Rpb25zLm5ld0JhdGNoLmNvbnRyb2xsZXInLCBbXG4gICdiaW9mdWVscy5jb3JlLmN1c3RvbWVyJyxcbiAgJ2Jpb2Z1ZWxzLmNvcmUuc2FtcGxlJ1xuXSlcbiAgLmNvbnRyb2xsZXIoJ25ld0JhdGNoQ3RybCcsXG4gICAgZnVuY3Rpb24gKCRsb2csXG4gICAgICAgICAgICAgICRtZERpYWxvZyxcbiAgICAgICAgICAgICAgY3VzdG9tZXJTZXJ2aWNlLFxuICAgICAgICAgICAgICBzYW1wbGVTZXJ2aWNlLFxuICAgICAgICAgICAgICBfXG4gICAgKSB7XG4gICAgICAoZnVuY3Rpb24gKHZtKSB7XG4gICAgICAgIGZ1bmN0aW9uIGdldEN1c3RvbWVyTmFtZXMgKCkge1xuICAgICAgICAgIGN1c3RvbWVyU2VydmljZS5nZXRDdXN0b21lcnMoKS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICB2bS5jdXN0b21lcnMgPSBkYXRhLmRhdGE7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICBnZXRDdXN0b21lck5hbWVzKCk7XG5cbiAgICAgICAgdm0uYmF0Y2hEYXRhID0ge307XG4gICAgICAgIHZtLnNhbXBsZXMgPSBbe1xuICAgICAgICAgIG5hbWU6ICdCcmFkbGV5J1xuICAgICAgICB9XTtcbiAgICAgICAgdm0ud29ya2luZ1NhbXBsZSA9IHt9O1xuICAgICAgICB2bS53b3JraW5nSW5kZXggPSAxO1xuXG4gICAgICAgIHZtLmFkZE5ld1NhbXBsZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICB2bS5zYW1wbGVzLnB1c2goYW5ndWxhci5jb3B5KHZtLndvcmtpbmdTYW1wbGUpKTtcbiAgICAgICAgICB2bS53b3JraW5nSW5kZXgrKztcbiAgICAgICAgICB2bS53b3JraW5nU2FtcGxlID0ge307XG4gICAgICAgIH07XG5cbiAgICAgICAgdm0uZGVsZXRlU2FtcGxlID0gZnVuY3Rpb24gKGluZGV4KSB7XG4gICAgICAgICAgdm0uc2FtcGxlcy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICAgIGlmICh2bS53b3JraW5nSW5kZXggPT09IGluZGV4KSB7XG4gICAgICAgICAgICB2bS53b3JraW5nU2FtcGxlID0ge307XG4gICAgICAgICAgfVxuICAgICAgICAgIHZtLndvcmtpbmdJbmRleCA9IHZtLnNhbXBsZXMubGVuZ3RoO1xuICAgICAgICB9O1xuXG4gICAgICAgIHZtLmNhbmNlbEVkaXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgdm0ud29ya2luZ1NhbXBsZSA9IHt9O1xuICAgICAgICAgIHZtLndvcmtpbmdJbmRleCA9IHZtLnNhbXBsZXMubGVuZ3RoO1xuICAgICAgICB9O1xuXG4gICAgICAgIHZtLmlzRWRpdGluZyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByZXR1cm4gdm0ud29ya2luZ0luZGV4IDwgdm0uc2FtcGxlcy5sZW5ndGg7XG4gICAgICAgIH07XG5cbiAgICAgICAgdm0uZWRpdFNhbXBsZSA9IGZ1bmN0aW9uIChpbmRleCkge1xuICAgICAgICAgIHZtLndvcmtpbmdJbmRleCA9IGluZGV4O1xuICAgICAgICAgIHZtLndvcmtpbmdTYW1wbGUgPSBhbmd1bGFyLmNvcHkodm0uc2FtcGxlc1tpbmRleF0pO1xuICAgICAgICB9O1xuXG4gICAgICAgIHZtLnNhdmVFZGl0ZWRTYW1wbGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgdm0uc2FtcGxlc1t2bS53b3JraW5nSW5kZXhdID0gYW5ndWxhci5jb3B5KHZtLndvcmtpbmdTYW1wbGUpO1xuICAgICAgICAgIHZtLndvcmtpbmdTYW1wbGUgPSB7fTtcbiAgICAgICAgICB2bS53b3JraW5nSW5kZXggPSB2bS5zYW1wbGVzLmxlbmd0aDtcbiAgICAgICAgfTtcblxuICAgICAgICB2bS5zYXZlQmF0Y2ggPSBmdW5jdGlvbiAoZXYpIHtcbiAgICAgICAgICB2YXIgY29uZmlybSA9ICRtZERpYWxvZy5jb25maXJtKClcbiAgICAgICAgICAgIC50aXRsZSgnQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIHNhdmU/JylcbiAgICAgICAgICAgIC50ZXh0Q29udGVudCgnRW5zdXJlIHlvdSBoYXZlIGVudGVyZWQgYWxsIHNhbXBsZXMuJylcbiAgICAgICAgICAgIC5hcmlhTGFiZWwoJ0VudGVyZWQgQWxsIFNhbXBsZXMnKVxuICAgICAgICAgICAgLnRhcmdldEV2ZW50KGV2KVxuICAgICAgICAgICAgLm9rKCdDcmVhdGUgdGhlIEJhdGNoJylcbiAgICAgICAgICAgIC5jYW5jZWwoJ0hvbGQgcGxlYXNlLicpO1xuICAgICAgICAgICRtZERpYWxvZy5zaG93KGNvbmZpcm0pLnRoZW4oZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgIHZtLmJhdGNoRGF0YS5zYW1wbGVzID0gYW5ndWxhci5mcm9tSnNvbihhbmd1bGFyLnRvSnNvbih2bS5zYW1wbGVzKSk7XG4gICAgICAgICAgICAgIHZtLmJhdGNoRGF0YS5jdXN0b21lcklkICs9ICcnO1xuICAgICAgICAgICAgICByZXR1cm4gdm0uYmF0Y2hEYXRhO1xuICAgICAgICAgIH0pLnRoZW4oc2FtcGxlU2VydmljZS5jcmVhdGVCYXRjaCk7XG4gICAgICAgIH07XG4gICAgICB9KSh0aGlzKTtcbiAgICB9KTtcbiIsIid1c2Ugc3RyaWN0JztcblxuYW5ndWxhci5tb2R1bGUoJ2Jpb2Z1ZWxzLnNlY3Rpb25zLmNyZWF0ZUN1c3RvbWVyJywgW1xuICAnYmlvZnVlbHMuc2VjdGlvbnMuY3JlYXRlQ3VzdG9tZXIuY29udHJvbGxlcidcbl0pO1xuXG4iLCIndXNlIHN0cmljdCc7XG5cbmFuZ3VsYXIubW9kdWxlKCdiaW9mdWVscy5zZWN0aW9ucy5jcmVhdGVDdXN0b21lci5jb250cm9sbGVyJywgW10pXG4gIC5jb250cm9sbGVyKCdjcmVhdGVDdXN0b21lckN0cmwnLFxuICAgIGZ1bmN0aW9uICgkbG9nLFxuICAgICAgICAgICAgICBjdXN0b21lclNlcnZpY2UsXG4gICAgICAgICAgICAgICRzdGF0ZSxcbiAgICAgICAgICAgICAgUk9VVEVTXG4gICAgKSB7XG4gICAgICAoZnVuY3Rpb24gKHZtKSB7XG4gICAgICAgICRsb2cuZGVidWcoJ1RoaXMgaXMgZnJvbSB0aGUgaG9tZSBwYWdlJyk7XG4gICAgICAgIHZtLmN1c3RvbWVyRGF0YSA9IHtcbiAgICAgICAgICBQT051bWJlcnM6IFtdLFxuICAgICAgICB9O1xuICAgICAgICB2bS5zdGF0ZXMgPSAoJ0FMIEFLIEFaIEFSIENBIENPIENUIERFIEZMIEdBIEhJIElEIElMIElOIElBIEtTIEtZIExBIE1FIE1EIE1BIE1JIE1OIE1TICcgK1xuICAgICAgICAnTU8gTVQgTkUgTlYgTkggTkogTk0gTlkgTkMgTkQgT0ggT0sgT1IgUEEgUkkgU0MgU0QgVE4gVFggVVQgVlQgVkEgV0EgV1YgV0kgJyArXG4gICAgICAgICdXWScpLnNwbGl0KCcgJykubWFwKGZ1bmN0aW9uKHN0YXRlKSB7XG4gICAgICAgICAgcmV0dXJuIHthYmJyZXY6IHN0YXRlfTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgdm0uYWRkVG9QT0xpc3QgPSBmdW5jdGlvbiAocG9OdW1iZXIpIHtcbiAgICAgICAgICBpZiAoIXZtLmN1c3RvbWVyRGF0YS5QT051bWJlcnMuaW5jbHVkZXMocG9OdW1iZXIpICYmIHBvTnVtYmVyKSB7XG4gICAgICAgICAgICB2bS5jdXN0b21lckRhdGEuUE9OdW1iZXJzLnB1c2gocG9OdW1iZXIpO1xuICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICB2bS5yZW1vdmVGcm9tUE9MaXN0ID0gZnVuY3Rpb24gKHBvTnVtYmVyKSB7XG4gICAgICAgICAgdmFyIGluZGV4ID0gdm0uY3VzdG9tZXJEYXRhLlBPTnVtYmVycy5pbmRleE9mKHBvTnVtYmVyKTtcbiAgICAgICAgICBpZiAoaW5kZXggPiAtMSkge1xuICAgICAgICAgICAgdm0uY3VzdG9tZXJEYXRhLlBPTnVtYmVycy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICB2bS5jcmVhdGVDdXN0b21lciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAkbG9nLmRlYnVnKCdDcmVhdGUgdGhpcyBjdXN0b21lcicpO1xuXG4gICAgICAgICAgdm0uZm9ybUVycm9yID0gJyc7XG4gICAgICAgICAgdm0uZm9ybVJlc3BvbnNlID0gJyc7XG4gICAgICAgICAgY3VzdG9tZXJTZXJ2aWNlLmNyZWF0ZUN1c3RvbWVyKHZtLmN1c3RvbWVyRGF0YS5uYW1lLCB2bS5jdXN0b21lckRhdGEuY29kZSwgdm0uY3VzdG9tZXJEYXRhLmNvbnRhY3ROYW1lMSwgdm0uY3VzdG9tZXJEYXRhLmNvbnRhY3ROYW1lMiwgdm0uY3VzdG9tZXJEYXRhLmJpbGxpbmdOYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2bS5jdXN0b21lckRhdGEuYWRkcmVzcywgdm0uY3VzdG9tZXJEYXRhLmFkZHJlc3MyLCB2bS5jdXN0b21lckRhdGEuY2l0eSwgdm0uY3VzdG9tZXJEYXRhLnN0YXRlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBOdW1iZXIodm0uY3VzdG9tZXJEYXRhLnBvc3RhbENvZGUpLCB2bS5jdXN0b21lckRhdGEucGhvbmVOdW1iZXIsIHZtLmN1c3RvbWVyRGF0YS5lbWFpbCkudGhlbihmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgdm0uZm9ybVJlc3BvbnNlID0gJ1N1Y2Nlc3NmdWxseSBtYWRlIGN1c3RvbWVyISc7XG4gICAgICAgICAgICAkc3RhdGUuZ28oUk9VVEVTLkNVU1RPTUVSUyk7XG4gICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikge1xuICAgICAgICAgICAgdm0uZm9ybUVycm9yID0gZXJyLmVycm9yO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuXG4gICAgICB9KSh0aGlzKTtcbiAgICB9KTtcbiIsIid1c2Ugc3RyaWN0JztcblxuYW5ndWxhci5tb2R1bGUoJ2Jpb2Z1ZWxzLnNlY3Rpb25zLnZpYWxzJywgW1xuICAnYmlvZnVlbHMuc2VjdGlvbnMudmlhbHMuY29udHJvbGxlcidcbl0pO1xuXG4iLCIndXNlIHN0cmljdCc7XG5cbmFuZ3VsYXIubW9kdWxlKCdiaW9mdWVscy5zZWN0aW9ucy52aWFscy5jb250cm9sbGVyJywgW10pXG4gIC5jb250cm9sbGVyKCd2aWFsc0N0cmwnLFxuICAgIGZ1bmN0aW9uICgkbG9nLFxuICAgICAgICAgICAgICB2aWFsU2VydmljZVxuICAgICkge1xuICAgICAgKGZ1bmN0aW9uICh2bSkge1xuICAgICAgICAkbG9nLmRlYnVnKCdUaGlzIGlzIGZyb20gdGhlIHZpYWxzIHBhZ2UnKTtcblxuICAgICAgICB2bS5zZWxlY3RlZCA9IFtdO1xuICAgICAgICB2bS5jdXN0b21lcnMgPSBbXTtcblxuICAgICAgICB2bS52aWFsVHlwZXMgPSBbe1xuICAgICAgICAgIGNvZGU6ICdSWE4nLFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiAnUkVBQ1RJT04nXG4gICAgICAgIH0sIHtcbiAgICAgICAgICBjb2RlOiAnR0MnLFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiAnR0MnXG4gICAgICAgIH0sIHtcbiAgICAgICAgICBjb2RlOiAnU1BLJyxcbiAgICAgICAgICBkZXNjcmlwdGlvbjogJ1NQSUtFRCdcbiAgICAgICAgfV07XG4gICAgICAgIHZtLnNlbGVjdGVkVmlhbFR5cGUgPSB2bS52aWFsVHlwZXNbMF0uY29kZTtcblxuICAgICAgICB2bS5jaGFuZ2VWaWFsVHlwZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAkbG9nLmRlYnVnKCdDaGFuZ2UgdmlhbCB0eXBlJyk7XG4gICAgICAgICAgZ2V0VmlhbHMoKTtcbiAgICAgICAgfTtcblxuICAgICAgICB2bS5jb252ZXJ0RGF0ZVN0cmluZyA9IGZ1bmN0aW9uIChkYXRlU3RyaW5nKSB7XG4gICAgICAgICAgdmFyIGRhdGUgPSBuZXcgRGF0ZShkYXRlU3RyaW5nKTtcbiAgICAgICAgICByZXR1cm4gZGF0ZS50b0xvY2FsZURhdGVTdHJpbmcoXCJlbi1VU1wiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGdldFZpYWxzICgpIHtcbiAgICAgICAgICB2bS5mb3JtRXJyb3IgPSAnJztcbiAgICAgICAgICB2bS5mb3JtUmVzcG9uc2UgPSAnJztcbiAgICAgICAgICB2aWFsU2VydmljZS5nZXRWaWFscyh2bS5zZWxlY3RlZFZpYWxUeXBlKS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICB2bS5mb3JtUmVzcG9uc2UgPSAnU3VjY2Vzc2Z1bGx5IGdvdCB2aWFsIGxpc3QhJztcbiAgICAgICAgICAgIHZtLnZpYWxzID0gZGF0YS5kYXRhO1xuICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgICAgIHZtLmZvcm1FcnJvciA9IGVyci5lcnJvcjtcbiAgICAgICAgICB9KTtcblxuICAgICAgICB9XG5cbiAgICAgICAgZ2V0VmlhbHMoKTtcbiAgICAgIH0pKHRoaXMpO1xuICAgIH0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5hbmd1bGFyLm1vZHVsZSgnYmlvZnVlbHMuc2VjdGlvbnMuc2FtcGxlcycsIFtcbiAgJ2Jpb2Z1ZWxzLnNlY3Rpb25zLnNhbXBsZXMuY29udHJvbGxlcidcbl0pO1xuXG4iLCIndXNlIHN0cmljdCc7XG5cbmFuZ3VsYXIubW9kdWxlKCdiaW9mdWVscy5zZWN0aW9ucy5zYW1wbGVzLmNvbnRyb2xsZXInLCBbXG5cbl0pXG4gIC5jb250cm9sbGVyKCdzYW1wbGVzQ3RybCcsXG4gICAgZnVuY3Rpb24gKCRsb2csXG4gICAgICAgICAgICAgIHNhbXBsZVNlcnZpY2UsXG4gICAgICAgICAgICAgIF9cbiAgICApIHtcbiAgICAgIChmdW5jdGlvbiAodm0pIHtcbiAgICAgICAgJGxvZy5kZWJ1ZygnVGhpcyBpcyBmcm9tIHRoZSBzYW1wbGVzIHBhZ2UnKTtcbiAgICAgICAgdm0uc2VsZWN0ZWQgPSBbXTtcblxuICAgICAgICAvL3ZtLnNlbGVjdGVkQmF0Y2ggPSB2bS5iYXRjaGVzWzBdO1xuXG4gICAgICAgIHNhbXBsZVNlcnZpY2UuZ2V0U2FtcGxlcygpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAkbG9nLmRlYnVnKGRhdGEpO1xuICAgICAgICAgIHZtLnNhbXBsZURhdGEgPSBkYXRhLmRhdGE7XG5cbiAgICAgICAgICB2bS5iYXRjaGVzID0gXy51bmlxKF8ucGx1Y2sodm0uc2FtcGxlRGF0YSwgJ2JhdGNoX2lkJykpO1xuXG4gICAgICAgICAgJGxvZy5kZWJ1Zyh2bS5iYXRjaGVzKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgdm0udXBkYXRlQmF0Y2hJZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICB2bS5zYW1wbGVzID0gXy5maWx0ZXIodm0uc2FtcGxlRGF0YSwgZnVuY3Rpb24oc2FtcGxlKSB7XG4gICAgICAgICAgICByZXR1cm4gc2FtcGxlLmJhdGNoX2lkID09PSB2bS5zZWxlY3RlZEJhdGNoO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgIH0pKHRoaXMpO1xuICAgIH0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5hbmd1bGFyLm1vZHVsZSgnYmlvZnVlbHMuc2VjdGlvbnMubG9naW4nLCBbXG4gICdiaW9mdWVscy5zZWN0aW9ucy5sb2dpbi5jb250cm9sbGVyJ1xuXSk7XG5cbiIsIid1c2Ugc3RyaWN0JztcblxuYW5ndWxhci5tb2R1bGUoJ2Jpb2Z1ZWxzLnNlY3Rpb25zLmxvZ2luLmNvbnRyb2xsZXInLCBbXG4gICduZ01lc3NhZ2VzJyxcbiAgJ25nU3RvcmFnZScsXG4gICdiaW9mdWVscy5jb3JlLnVzZXInLFxuICAnYmlvZnVlbHMuY29yZS5yb3V0ZXIuY29uc3RhbnRzJ1xuXSlcbiAgLmNvbnRyb2xsZXIoJ2xvZ2luQ3RybCcsXG4gIGZ1bmN0aW9uICgkbG9nLFxuICAgICAgICAgICAgdXNlclNlcnZpY2UsXG4gICAgICAgICAgICAkbG9jYWxTdG9yYWdlLFxuICAgICAgICAgICAgJHN0YXRlLFxuICAgICAgICAgICAgUk9VVEVTXG4gICkge1xuICAgIChmdW5jdGlvbiAodm0pIHtcbiAgICAgICRsb2cuZGVidWcoJ1RoaXMgaXMgZnJvbSB0aGUgbG9naW5zIHBhZ2UnKTtcblxuICAgICAgdm0uZGlzYWJsZUl0ID0gZmFsc2U7XG4gICAgICB2bS51c2VyTG9naW4gPSB7fTtcbiAgICAgIHZtLnVzZXJSZWdpc3RlciA9IHt9O1xuXG4gICAgICBpZiAoJGxvY2FsU3RvcmFnZS51c2VyUHJvZmlsZSAmJiAkbG9jYWxTdG9yYWdlLnVzZXJQcm9maWxlLmVtYWlsKSB7XG4gICAgICAgIHZtLnVzZXJMb2dpbi5lbWFpbCA9ICRsb2NhbFN0b3JhZ2UudXNlclByb2ZpbGUuZW1haWw7XG4gICAgICB9XG5cbiAgICAgIHZtLm9uRW50ZXIgPSBmdW5jdGlvbiAoZXYpIHtcbiAgICAgICAgaWYgKGV2LndoaWNoID09PSAxMykge1xuICAgICAgICAgIHZtLmxvZ2luVXNlcigpO1xuICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICB2bS5sb2dpblVzZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZtLmZvcm1FcnJvciA9ICcnO1xuICAgICAgICB2bS5mb3JtUmVzcG9uc2UgPSAnJztcbiAgICAgICAgdXNlclNlcnZpY2UubG9naW4odm0udXNlckxvZ2luLmVtYWlsLCB2bS51c2VyTG9naW4ucGFzc3dvcmQpLnRoZW4oZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHZtLmZvcm1SZXNwb25zZSA9ICdTdWNjZXNzZnVsbHkgbG9nZ2VkIGluISc7XG4gICAgICAgICAgJHN0YXRlLmdvKFJPVVRFUy5IT01FKTtcbiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikge1xuICAgICAgICAgIHZtLmZvcm1FcnJvciA9IGVyci5lcnJvcjtcbiAgICAgICAgfSk7XG4gICAgICB9O1xuXG4gICAgICB2bS5yZWdpc3RlclVzZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZtLnJlZ2lzdGVyRm9ybUVycm9yID0gJyc7XG4gICAgICAgIHZtLnJlZ2lzdGVyRm9ybVJlc3BvbnNlID0gJyc7XG4gICAgICAgIHVzZXJTZXJ2aWNlLnJlZ2lzdGVyKHZtLnVzZXJSZWdpc3Rlci5mdWxsTmFtZSxcbiAgICAgICAgICAgIHZtLnVzZXJSZWdpc3Rlci5lbWFpbCxcbiAgICAgICAgICAgIHZtLnVzZXJSZWdpc3Rlci5wYXNzd29yZCkudGhlbihmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgICB2bS5yZWdpc3RlckZvcm1SZXNwb25zZSA9ICdTdWNjZXNzZnVsbHkgcmVnaXN0ZXJlZCB1c2VyISc7XG4gICAgICAgICAgdm0udXNlckxvZ2luLmVtYWlsID0gdm0udXNlclJlZ2lzdGVyLmVtYWlsO1xuICAgICAgICAgIHZtLnVzZXJSZWdpc3RlciA9IHt9O1xuICAgICAgICAgIHZtLnNlbGVjdGVkVGFiID0gMDtcbiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikge1xuICAgICAgICAgIHZtLnJlZ2lzdGVyRm9ybUVycm9yID0gZXJyLmVycm9yO1xuICAgICAgICB9KTtcbiAgICAgIH07XG4gICAgfSkodGhpcyk7XG4gIH0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5hbmd1bGFyLm1vZHVsZSgnYmlvZnVlbHMuc2VjdGlvbnMuY3VzdG9tZXJzJywgW1xuICAnYmlvZnVlbHMuc2VjdGlvbnMuY3VzdG9tZXJzLmNvbnRyb2xsZXInXG5dKTtcblxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5hbmd1bGFyLm1vZHVsZSgnYmlvZnVlbHMuc2VjdGlvbnMuY3VzdG9tZXJzLmNvbnRyb2xsZXInLCBbXSlcbiAgLmNvbnRyb2xsZXIoJ2N1c3RvbWVyc0N0cmwnLFxuICAgIGZ1bmN0aW9uICgkbG9nLFxuICAgICAgICAgICAgICBjdXN0b21lclNlcnZpY2VcbiAgICApIHtcbiAgICAgIChmdW5jdGlvbiAodm0pIHtcbiAgICAgICAgJGxvZy5kZWJ1ZygnVGhpcyBpcyBmcm9tIHRoZSBjdXN0b21lcnMgcGFnZScpO1xuICAgICAgICB2bS5zZWxlY3RlZCA9IFtdO1xuICAgICAgICB2bS5jdXN0b21lcnMgPSBbXTtcblxuICAgICAgICBmdW5jdGlvbiBnZXRDdXN0b21lcnMgKCkge1xuICAgICAgICAgIHZtLmZvcm1FcnJvciA9ICcnO1xuICAgICAgICAgIHZtLmZvcm1SZXNwb25zZSA9ICcnO1xuICAgICAgICAgIGN1c3RvbWVyU2VydmljZS5nZXRDdXN0b21lcnMoKS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICB2bS5mb3JtUmVzcG9uc2UgPSAnU3VjY2Vzc2Z1bGx5IGdvdCBjdXN0b21lciBsaXN0ISc7XG4gICAgICAgICAgICB2bS5jdXN0b21lcnMgPSBkYXRhLmRhdGE7XG4gICAgICAgICAgICAkbG9nLmRlYnVnKHZtLmN1c3RvbWVycy5sZW5ndGgpO1xuICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgICAgIHZtLmZvcm1FcnJvciA9IGVyci5lcnJvcjtcbiAgICAgICAgICB9KTtcblxuICAgICAgICB9XG5cbiAgICAgICAgZ2V0Q3VzdG9tZXJzKCk7XG4gICAgICB9KSh0aGlzKTtcbiAgICB9KTtcbiIsIid1c2Ugc3RyaWN0JztcblxuYW5ndWxhci5tb2R1bGUoJ2Jpb2Z1ZWxzLnNlY3Rpb25zLmhvbWUnLCBbXG4gICdiaW9mdWVscy5zZWN0aW9ucy5ob21lLmNvbnRyb2xsZXInXG5dKTtcblxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5hbmd1bGFyLm1vZHVsZSgnYmlvZnVlbHMuc2VjdGlvbnMuaG9tZS5jb250cm9sbGVyJywgW1xuICAnbmdTdG9yYWdlJ1xuXSlcbiAgLmNvbnRyb2xsZXIoJ2hvbWVDdHJsJyxcbiAgZnVuY3Rpb24gKCRsb2csXG4gICAgICAgICAgICAkbG9jYWxTdG9yYWdlXG4gICkge1xuICAgIChmdW5jdGlvbiAodm0pIHtcbiAgICAgICRsb2cuZGVidWcoJ1RoaXMgaXMgZnJvbSB0aGUgaG9tZSBwYWdlJyk7XG5cbiAgICAgIHZtLnVzZXJQcm9maWxlID0gJGxvY2FsU3RvcmFnZS51c2VyUHJvZmlsZTtcbiAgICAgIHZtLmxhYmVscyA9IFsnRG93bmxvYWQgU2FsZXMnLCAnSW4tU3RvcmUgU2FsZXMnLCAnTWFpbC1PcmRlciBTYWxlcyddO1xuICAgICAgdm0uZGF0YSA9IFszMDAsIDUwMCwgMTAwXTtcblxuXG4gICAgICB2bS5saW5lTGFiZWxzID0gWydKYW51YXJ5JywgJ0ZlYnJ1YXJ5JywgJ01hcmNoJywgJ0FwcmlsJywgJ01heScsICdKdW5lJywgJ0p1bHknXTtcbiAgICAgIHZtLmxpbmVTZXJpZXMgPSBbJ1NlcmllcyBBJywgJ1NlcmllcyBCJ107XG4gICAgICB2bS5saW5lRGF0YSA9IFtcbiAgICAgICAgWzY1LCA1OSwgODAsIDgxLCA1NiwgNTUsIDQwXSxcbiAgICAgICAgWzI4LCA0OCwgNDAsIDE5LCA4NiwgMjcsIDkwXVxuICAgICAgXTtcblxuICAgICAgdm0ucmFkYXJMYWJlbHMgPVsnRWF0aW5nJywgJ0RyaW5raW5nJywgJ1NsZWVwaW5nJywgJ0Rlc2lnbmluZycsICdDb2RpbmcnLCAnQ3ljbGluZycsICdSdW5uaW5nJ107XG5cbiAgICAgIHZtLnJhZGFyRGF0YSA9IFtcbiAgICAgICAgWzY1LCA1OSwgOTAsIDgxLCA1NiwgNTUsIDQwXSxcbiAgICAgICAgWzI4LCA0OCwgNDAsIDE5LCA5NiwgMjcsIDEwMF1cbiAgICAgIF07XG5cblxuICAgICAgdm0uYmFyTGFiZWxzID0gWycyMDA2JywgJzIwMDcnLCAnMjAwOCcsICcyMDA5JywgJzIwMTAnLCAnMjAxMScsICcyMDEyJ107XG4gICAgICB2bS5iYXJTZXJpZXMgPSBbJ1NlcmllcyBBJywgJ1NlcmllcyBCJ107XG5cbiAgICAgIHZtLmJhckRhdGEgPSBbXG4gICAgICAgIFs2NSwgNTksIDgwLCA4MSwgNTYsIDU1LCA0MF0sXG4gICAgICAgIFsyOCwgNDgsIDQwLCAxOSwgODYsIDI3LCA5MF1cbiAgICAgIF07XG4gICAgfSkodGhpcyk7XG4gIH0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5hbmd1bGFyLm1vZHVsZSgnYmlvZnVlbHMuY29yZS53cmFwcGVycycsIFtcbiAgJ2Jpb2Z1ZWxzLmNvcmUud3JhcHBlcnMudW5kZXJzY29yZSdcbl0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5hbmd1bGFyLm1vZHVsZSgnYmlvZnVlbHMuY29yZS53cmFwcGVycy51bmRlcnNjb3JlJywgW10pXG4gIC5mYWN0b3J5KCdfJywgWyckd2luZG93JywgZnVuY3Rpb24oJHdpbmRvdykge1xuICAgIGlmICgkd2luZG93ICYmICdfJyBpbiAkd2luZG93KSB7XG4gICAgICByZXR1cm4gJHdpbmRvdy5fO1xuICAgIH1cblxuICAgIHJldHVybiB7fTtcbiAgfV0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5hbmd1bGFyLm1vZHVsZSgnYmlvZnVlbHMuY29yZS52aWFsJywgW1xuICAnYmlvZnVlbHMuY29yZS52aWFsLnNlcnZpY2UnXG5dKTtcbiIsIid1c2Ugc3RyaWN0JztcblxuYW5ndWxhci5tb2R1bGUoJ2Jpb2Z1ZWxzLmNvcmUudmlhbC5zZXJ2aWNlJywgW1xuICAgICdiaW9mdWVscy5jb3JlLnJlc291cmNlJ1xuICBdKVxuICAuZmFjdG9yeShcbiAgICAndmlhbFNlcnZpY2UnLFxuICAgIGZ1bmN0aW9uICgkbG9nLFxuICAgICAgICAgICAgICByZXNvdXJjZVNlcnZpY2UsXG4gICAgICAgICAgICAgICRxXG4gICAgKSB7XG4gICAgICBmdW5jdGlvbiBjcmVhdGVWaWFsICh2aWFsVHlwZSwgdmlhbHMpIHtcbiAgICAgICAgJGxvZy5kZWJ1ZygnQ3JlYXRpbmcgdmlhbHMnKTtcblxuICAgICAgICB2YXIgcGF5bG9hZCA9IHtcbiAgICAgICAgICB2aWFsX3R5cGU6IHZpYWxUeXBlLFxuICAgICAgICAgIHZpYWxzOiB2aWFsc1xuICAgICAgICB9O1xuXG4gICAgICAgIHJldHVybiByZXNvdXJjZVNlcnZpY2UudmlhbENyZWF0ZS5zYXZlKHBheWxvYWQpLiRwcm9taXNlLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAkbG9nLmRlYnVnKGRhdGEpO1xuICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgICAgJGxvZy5lcnJvcihlcnIpO1xuICAgICAgICAgIHJldHVybiAkcS5yZWplY3QoZXJyLmRhdGEpO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuXG4gICAgICBmdW5jdGlvbiBnZXRWaWFscyAodmlhbFR5cGUpIHtcbiAgICAgICAgJGxvZy5kZWJ1ZygnR2V0dGluZyB2aWFscycpO1xuXG4gICAgICAgIHZhciBxdWVyeSA9IHtcbiAgICAgICAgICB2aWFsX3R5cGU6IHZpYWxUeXBlXG4gICAgICAgIH07XG5cbiAgICAgICAgcmV0dXJuIHJlc291cmNlU2VydmljZS52aWFsTGlzdC5nZXQocXVlcnkpLiRwcm9taXNlLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAkbG9nLmRlYnVnKGRhdGEpO1xuICAgICAgICAgIHJldHVybiBkYXRhO1xuICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgICAgJGxvZy5lcnJvcihlcnIpO1xuICAgICAgICAgIHJldHVybiAkcS5yZWplY3QoZXJyLmRhdGEpO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgY3JlYXRlVmlhbDogY3JlYXRlVmlhbCxcbiAgICAgICAgZ2V0VmlhbHM6IGdldFZpYWxzXG4gICAgICB9O1xuICAgIH1cbiAgKTtcblxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5hbmd1bGFyLm1vZHVsZSgnYmlvZnVlbHMuY29yZS51c2VyJywgW1xuICAnYmlvZnVlbHMuY29yZS51c2VyLnNlcnZpY2UnXG5dKTtcbiIsIid1c2Ugc3RyaWN0JztcblxuYW5ndWxhci5tb2R1bGUoJ2Jpb2Z1ZWxzLmNvcmUudXNlci5zZXJ2aWNlJywgW1xuICAnbmdTdG9yYWdlJyxcbiAgJ2Jpb2Z1ZWxzLmNvcmUucmVzb3VyY2UnXG5dKVxuICAuZmFjdG9yeShcbiAgICAndXNlclNlcnZpY2UnLFxuICAgIGZ1bmN0aW9uICgkbG9nLFxuICAgICAgICAgICAgICByZXNvdXJjZVNlcnZpY2UsXG4gICAgICAgICAgICAgICRsb2NhbFN0b3JhZ2UsXG4gICAgICAgICAgICAgICRxXG4gICAgKSB7XG4gICAgICBmdW5jdGlvbiBsb2dpbiAoZW1haWwsIHBhc3N3b3JkKSB7XG4gICAgICAgICRsb2cuZGVidWcoJ0xvZ2dpbmcgeW91IGluIGZyb20gdGhlIHVzZXIgc2VydmljZScpO1xuXG4gICAgICAgIHZhciBwYXlsb2FkID0ge1xuICAgICAgICAgIGVtYWlsOiBlbWFpbCxcbiAgICAgICAgICBwYXNzd29yZDogcGFzc3dvcmRcbiAgICAgICAgfTtcblxuICAgICAgICByZXR1cm4gcmVzb3VyY2VTZXJ2aWNlLnVzZXJBdXRoLnNhdmUocGF5bG9hZCkuJHByb21pc2UudGhlbihmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICRsb2cuZGVidWcoZGF0YSk7XG4gICAgICAgICAgJGxvY2FsU3RvcmFnZS51c2VyUHJvZmlsZSA9IHtcbiAgICAgICAgICAgIGlkOiBkYXRhWyd1c2VyX2lkJ10sXG4gICAgICAgICAgICBmdWxsTmFtZTogZGF0YVsnZnVsbF9uYW1lJ10sXG4gICAgICAgICAgICBlbWFpbDogZGF0YVsnZW1haWwnXSxcbiAgICAgICAgICAgIHRva2VuOiBkYXRhWyd0b2tlbiddXG4gICAgICAgICAgfTtcbiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikge1xuICAgICAgICAgICRsb2cuZXJyb3IoZXJyKTtcbiAgICAgICAgICByZXR1cm4gJHEucmVqZWN0KGVyci5kYXRhKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG5cblxuICAgICAgZnVuY3Rpb24gcmVnaXN0ZXIgKGZ1bGxOYW1lLCBlbWFpbCwgcGFzc3dvcmQpIHtcbiAgICAgICAgJGxvZy5kZWJ1ZygnTG9nZ2luZyB5b3UgaW4gZnJvbSB0aGUgdXNlciBzZXJ2aWNlJyk7XG5cbiAgICAgICAgdmFyIHBheWxvYWQgPSB7XG4gICAgICAgICAgZnVsbF9uYW1lOiBmdWxsTmFtZSxcbiAgICAgICAgICBlbWFpbDogZW1haWwsXG4gICAgICAgICAgcGFzc3dvcmQ6IHBhc3N3b3JkXG4gICAgICAgIH07XG5cbiAgICAgICAgcmV0dXJuIHJlc291cmNlU2VydmljZS51c2VyUmVnaXN0ZXIuc2F2ZShwYXlsb2FkKS4kcHJvbWlzZS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgJGxvZy5kZWJ1ZyhkYXRhKTtcbiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikge1xuICAgICAgICAgICRsb2cuZXJyb3IoZXJyKTtcbiAgICAgICAgICByZXR1cm4gJHEucmVqZWN0KGVyci5kYXRhKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIGxvZ2luOiBsb2dpbixcbiAgICAgICAgcmVnaXN0ZXI6IHJlZ2lzdGVyXG4gICAgICB9O1xuICAgIH1cbiAgKTtcblxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5hbmd1bGFyLm1vZHVsZSgnYmlvZnVlbHMudGVtcGxhdGVzJywgW10pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5hbmd1bGFyLm1vZHVsZSgnYmlvZnVlbHMuY29yZS5zYW1wbGUnLCBbXG4gICdiaW9mdWVscy5jb3JlLnNhbXBsZS5zZXJ2aWNlJ1xuXSk7XG4iLCIndXNlIHN0cmljdCc7XG5cbmFuZ3VsYXIubW9kdWxlKCdiaW9mdWVscy5jb3JlLnNhbXBsZS5zZXJ2aWNlJywgW1xuICAgICdiaW9mdWVscy5jb3JlLnJlc291cmNlJ1xuICBdKVxuICAuZmFjdG9yeShcbiAgICAnc2FtcGxlU2VydmljZScsXG4gICAgZnVuY3Rpb24gKCRsb2csXG4gICAgICAgICAgICAgIHJlc291cmNlU2VydmljZSxcbiAgICAgICAgICAgICAgJHFcbiAgICApIHtcbiAgICAgIGZ1bmN0aW9uIGdldFNhbXBsZXMgKCkge1xuICAgICAgICAkbG9nLmRlYnVnKCdHZXR0aW5nIGN1c3RvbWVycycpO1xuXG4gICAgICAgIHZhciBxdWVyeSA9IHt9O1xuXG4gICAgICAgIHJldHVybiByZXNvdXJjZVNlcnZpY2Uuc2FtcGxlTGlzdC5nZXQocXVlcnkpLiRwcm9taXNlLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAkbG9nLmRlYnVnKGRhdGEpO1xuICAgICAgICAgIHJldHVybiBkYXRhO1xuICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgICAgJGxvZy5lcnJvcihlcnIpO1xuICAgICAgICAgIHJldHVybiAkcS5yZWplY3QoZXJyLmRhdGEpO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgZnVuY3Rpb24gY3JlYXRlQmF0Y2ggKGJhdGNoRGF0YSkge1xuICAgICAgICAkbG9nLmRlYnVnKCdDcmVhdGluZyBiYXRjaCcpO1xuICAgICAgICAkbG9nLmRlYnVnKGJhdGNoRGF0YSk7XG4gICAgICAgIHJldHVybiByZXNvdXJjZVNlcnZpY2UuYmF0Y2hDcmVhdGUuc2F2ZShiYXRjaERhdGEpLiRwcm9taXNlLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAkbG9nLmRlYnVnKGRhdGEpO1xuICAgICAgICAgIHJldHVybiBkYXRhO1xuICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgICAgJGxvZy5lcnJvcihlcnIpO1xuICAgICAgICAgIHJldHVybiAkcS5yZWplY3QoZXJyLmRhdGEpO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZ2V0U2FtcGxlczogZ2V0U2FtcGxlcyxcbiAgICAgICAgY3JlYXRlQmF0Y2g6IGNyZWF0ZUJhdGNoXG4gICAgICB9O1xuICAgIH1cbiAgKTtcblxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5hbmd1bGFyLm1vZHVsZSgnYmlvZnVlbHMuY29yZS5yb3V0ZXInLCBbXG4gICdiaW9mdWVscy5jb3JlLnJvdXRlci5jb25maWcnLFxuICAnYmlvZnVlbHMuY29yZS5yb3V0ZXIuY29uc3RhbnRzJ1xuXSk7XG4iLCIndXNlIHN0cmljdCc7XG5cbmFuZ3VsYXIubW9kdWxlKCdiaW9mdWVscy5jb3JlLnJvdXRlci5jb25zdGFudHMnLCBbXSlcbiAgLmNvbnN0YW50KFxuICAnUk9VVEVTJywge1xuICAgICdDUkVBVEVfQ1VTVE9NRVInOidjcmVhdGVDdXN0b21lcicsXG4gICAgJ0NSRUFURV9WSUFMUyc6J2NyZWF0ZVZpYWxzJyxcbiAgICAnQ1VTVE9NRVJTJzonY3VzdG9tZXJzJyxcbiAgICAnSE9NRSc6ICdob21lJyxcbiAgICAnTE9HSU4nOiAnbG9naW4nLFxuICAgICdORVdfQkFUQ0gnOiAnbmV3QmF0Y2gnLFxuICAgICdTQU1QTEVTJzonc2FtcGxlcycsXG4gICAgJ1ZJQUxTJzondmlhbHMnXG4gIH0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5hbmd1bGFyLm1vZHVsZSgnYmlvZnVlbHMuY29yZS5yb3V0ZXIuY29uZmlnJywgW1xuICAnYmlvZnVlbHMuY29yZS5yb3V0ZXIuY29uc3RhbnRzJyxcbiAgJ3VpLnJvdXRlcicsXG4gICdiaW9mdWVscy50ZW1wbGF0ZXMnXG5dKVxuICAuY29uZmlnKFxuICBmdW5jdGlvbiByb3V0ZXJDb25maWcoUk9VVEVTLCAkc3RhdGVQcm92aWRlciwgJHVybFJvdXRlclByb3ZpZGVyKSB7XG4gICAgdmFyIHN0YXRlcyA9IFtdO1xuXG4gICAgc3RhdGVzLnB1c2goe1xuICAgICAgbmFtZTogUk9VVEVTLkNSRUFURV9DVVNUT01FUixcbiAgICAgIHVybDogJy9jcmVhdGUtY3VzdG9tZXInLFxuICAgICAgdGVtcGxhdGVVcmw6ICdzZWN0aW9ucy9jdXN0b21lcnMvY3JlYXRlLWN1c3RvbWVyL2NyZWF0ZS1jdXN0b21lci50cGwuaHRtbCcsXG4gICAgICBjb250cm9sbGVyOiAnY3JlYXRlQ3VzdG9tZXJDdHJsIGFzIGN0cmwnXG4gICAgfSk7XG5cbiAgICBzdGF0ZXMucHVzaCh7XG4gICAgICBuYW1lOiBST1VURVMuQ1VTVE9NRVJTLFxuICAgICAgdXJsOiAnL2N1c3RvbWVycycsXG4gICAgICB0ZW1wbGF0ZVVybDogJ3NlY3Rpb25zL2N1c3RvbWVycy9jdXN0b21lcnMudHBsLmh0bWwnLFxuICAgICAgY29udHJvbGxlcjogJ2N1c3RvbWVyc0N0cmwgYXMgY3RybCdcbiAgICB9KTtcblxuICAgIC8qIEhvbWUgc2NyZWVuICovXG4gICAgc3RhdGVzLnB1c2goe1xuICAgICAgbmFtZTogUk9VVEVTLkhPTUUsXG4gICAgICB1cmw6ICcvaG9tZScsXG4gICAgICB0ZW1wbGF0ZVVybDogJ3NlY3Rpb25zL2hvbWUvaG9tZS50cGwuaHRtbCcsXG4gICAgICBjb250cm9sbGVyOiAnaG9tZUN0cmwgYXMgY3RybCdcbiAgICB9KTtcblxuICAgIHN0YXRlcy5wdXNoKHtcbiAgICAgIG5hbWU6IFJPVVRFUy5MT0dJTixcbiAgICAgIHVybDogJy9sb2dpbicsXG4gICAgICB0ZW1wbGF0ZVVybDogJ3NlY3Rpb25zL2xvZ2luL2xvZ2luLnRwbC5odG1sJyxcbiAgICAgIGNvbnRyb2xsZXI6ICdsb2dpbkN0cmwgYXMgY3RybCdcbiAgICB9KTtcblxuICAgIHN0YXRlcy5wdXNoKHtcbiAgICAgIG5hbWU6IFJPVVRFUy5ORVdfQkFUQ0gsXG4gICAgICB1cmw6ICcvbmV3LWJhdGNoJyxcbiAgICAgIHRlbXBsYXRlVXJsOiAnc2VjdGlvbnMvc2FtcGxlcy9uZXctYmF0Y2gvbmV3LWJhdGNoLnRwbC5odG1sJyxcbiAgICAgIGNvbnRyb2xsZXI6ICduZXdCYXRjaEN0cmwgYXMgY3RybCdcbiAgICB9KTtcblxuICAgIHN0YXRlcy5wdXNoKHtcbiAgICAgIG5hbWU6IFJPVVRFUy5TQU1QTEVTLFxuICAgICAgdXJsOiAnL3NhbXBsZXMnLFxuICAgICAgdGVtcGxhdGVVcmw6ICdzZWN0aW9ucy9zYW1wbGVzL3NhbXBsZXMudHBsLmh0bWwnLFxuICAgICAgY29udHJvbGxlcjogJ3NhbXBsZXNDdHJsIGFzIGN0cmwnXG4gICAgfSk7XG5cbiAgICBzdGF0ZXMucHVzaCh7XG4gICAgICBuYW1lOiBST1VURVMuQ1JFQVRFX1ZJQUxTLFxuICAgICAgdXJsOiAnL2NyZWF0ZS12aWFscycsXG4gICAgICB0ZW1wbGF0ZVVybDogJ3NlY3Rpb25zL3ZpYWxzL2NyZWF0ZS12aWFscy9jcmVhdGUtdmlhbHMudHBsLmh0bWwnLFxuICAgICAgY29udHJvbGxlcjogJ2NyZWF0ZVZpYWxzQ3RybCBhcyBjdHJsJ1xuICAgIH0pO1xuXG4gICAgc3RhdGVzLnB1c2goe1xuICAgICAgbmFtZTogUk9VVEVTLlZJQUxTLFxuICAgICAgdXJsOiAnL3ZpYWxzJyxcbiAgICAgIHRlbXBsYXRlVXJsOiAnc2VjdGlvbnMvdmlhbHMvdmlhbHMudHBsLmh0bWwnLFxuICAgICAgY29udHJvbGxlcjogJ3ZpYWxzQ3RybCBhcyBjdHJsJ1xuICAgIH0pO1xuXG4gICAgLyoqXG4gICAgICogVUkgcm91dGVzIGluaXRpYWxpemF0aW9uXG4gICAgICovXG4gICAgYW5ndWxhci5mb3JFYWNoKHN0YXRlcywgZnVuY3Rpb24gKHN0YXRlKSB7XG4gICAgICAkc3RhdGVQcm92aWRlci5zdGF0ZShzdGF0ZSk7XG4gICAgfSk7XG5cbiAgICAkdXJsUm91dGVyUHJvdmlkZXIub3RoZXJ3aXNlKCcvbG9naW4nKTtcblxuICB9XG4pO1xuIiwiKGZ1bmN0aW9uKG1vZHVsZSkge1xudHJ5IHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ2Jpb2Z1ZWxzLnRlbXBsYXRlcycpO1xufSBjYXRjaCAoZSkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgnYmlvZnVlbHMudGVtcGxhdGVzJywgW10pO1xufVxubW9kdWxlLnJ1bihbJyR0ZW1wbGF0ZUNhY2hlJywgZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpIHtcbiAgJHRlbXBsYXRlQ2FjaGUucHV0KCdzZWN0aW9ucy92aWFscy9jcmVhdGUtdmlhbHMvY3JlYXRlLXZpYWxzLnRwbC5odG1sJyxcbiAgICAnPGRpdiBtZW51PVwiXCI+PC9kaXY+PGRpdiBsYXlvdXQ9XCJyb3dcIiBsYXlvdXQtYWxpZ249XCJjZW50ZXJcIj48ZGl2IGZsZXg9XCI1MFwiPjxtZC1jYXJkPjxtZC1jYXJkLXRpdGxlPjxtZC1jYXJkLXRpdGxlLXRleHQ+PHNwYW4gY2xhc3M9XCJtZC1oZWFkbGluZVwiPkNyZWF0ZSBWaWFsPC9zcGFuPjwvbWQtY2FyZC10aXRsZS10ZXh0PjwvbWQtY2FyZC10aXRsZT48ZGl2IGxheW91dD1cImNvbHVtblwiIG5nLWNsb2FrIGNsYXNzPVwibWQtaW5saW5lLWZvcm1cIj48bWQtY29udGVudCBsYXlvdXQtcGFkZGluZz48ZGl2Pjxmb3JtIG5hbWU9XCJ2aWFsRm9ybVwiPjxkaXYgbGF5b3V0LWd0LXhzPVwicm93XCI+PG1kLWlucHV0LWNvbnRhaW5lcj48bGFiZWw+VmlhbCBUeXBlPC9sYWJlbD48bWQtc2VsZWN0IG5nLW1vZGVsPVwiY3RybC5zZWxlY3RlZFZpYWxUeXBlXCIgbmctZGlzYWJsZWQ9XCJjdHJsLnZpYWxzLmxlbmd0aCA+IDBcIj48bWQtb3B0aW9uIG5nLXJlcGVhdD1cInZpYWxUeXBlIGluIGN0cmwudmlhbFR5cGVzXCIgdmFsdWU9XCJ7e3ZpYWxUeXBlLmNvZGV9fVwiPnt7dmlhbFR5cGUuZGVzY3JpcHRpb259fTwvbWQtb3B0aW9uPjwvbWQtc2VsZWN0PjwvbWQtaW5wdXQtY29udGFpbmVyPjwvZGl2PjxkaXYgbGF5b3V0LWd0LXhzPVwicm93XCI+PG1kLWlucHV0LWNvbnRhaW5lciBuZy1zaG93PVwiY3RybC5zZWxlY3RlZFZpYWxUeXBlXCI+PGxhYmVsPlZpYWwgSUQ8L2xhYmVsPjxpbnB1dCBuZy1tb2RlbD1cImN0cmwudmlhbERhdGEudmlhbElkXCI+PC9tZC1pbnB1dC1jb250YWluZXI+PG1kLWRhdGVwaWNrZXIgbmctbW9kZWw9XCJjdHJsLnZpYWxEYXRhLnByZXBhcmF0aW9uRGF0ZVwiIG1kLXBsYWNlaG9sZGVyPVwiRW50ZXIgZGF0ZVwiIG5nLXNob3c9XCJjdHJsLnNlbGVjdGVkVmlhbFR5cGVcIj48L21kLWRhdGVwaWNrZXI+PC9kaXY+PGRpdiBsYXlvdXQtZ3QteHM9XCJyb3dcIiBuZy1zaG93PVwiY3RybC5zZWxlY3RlZFZpYWxUeXBlID09IFxcJ1JYTlxcJ1wiPjxtZC1pbnB1dC1jb250YWluZXI+PGxhYmVsPk1hc3Mgb2YgRmF0dHkgQWNpZDwvbGFiZWw+PGlucHV0IG5nLW1vZGVsPVwiY3RybC52aWFsRGF0YS5mYXR0eUFjaWRtYXNzXCI+PC9tZC1pbnB1dC1jb250YWluZXI+PG1kLWlucHV0LWNvbnRhaW5lcj48bGFiZWw+Q29uY2VudHJhdGlvbiBvZiBDLTE1IEZBIElTVEQ8L2xhYmVsPjxpbnB1dCBuZy1tb2RlbD1cImN0cmwudmlhbERhdGEuYzE1SXN0ZGNvblwiPjwvbWQtaW5wdXQtY29udGFpbmVyPjwvZGl2PjxkaXYgbGF5b3V0LWd0LXhzPVwicm93XCIgbmctc2hvdz1cImN0cmwuc2VsZWN0ZWRWaWFsVHlwZSA9PSBcXCdHQ1xcJ1wiPjxtZC1pbnB1dC1jb250YWluZXI+PGxhYmVsPk1hc3Mgb2YgRkFNRSBJU1REPC9sYWJlbD48aW5wdXQgbmctbW9kZWw9XCJjdHJsLnZpYWxEYXRhLmMxM01hc3NcIj48L21kLWlucHV0LWNvbnRhaW5lcj48bWQtaW5wdXQtY29udGFpbmVyPjxsYWJlbD5Db25jZW50cmF0aW9uIG9mIEMtMTMgSVNURDwvbGFiZWw+PGlucHV0IG5nLW1vZGVsPVwiY3RybC52aWFsRGF0YS5jMTNJc3RkY29uXCI+PC9tZC1pbnB1dC1jb250YWluZXI+PG1kLWlucHV0LWNvbnRhaW5lcj48bGFiZWw+Q29uY2VudHJhdGlvbiBvZiBDLTE5IElTVEQ8L2xhYmVsPjxpbnB1dCBuZy1tb2RlbD1cImN0cmwudmlhbERhdGEuYzE5SXN0ZGNvblwiPjwvbWQtaW5wdXQtY29udGFpbmVyPjwvZGl2PjxkaXYgbGF5b3V0LWd0LXhzPVwicm93XCIgbmctc2hvdz1cImN0cmwuc2VsZWN0ZWRWaWFsVHlwZSA9PSBcXCdTUEtcXCdcIj48bWQtaW5wdXQtY29udGFpbmVyPjxsYWJlbD5NYXNzIG9mIEMtMTUgSVNURDwvbGFiZWw+PGlucHV0IG5nLW1vZGVsPVwiY3RybC52aWFsRGF0YS5jMTVNYXNzXCI+PC9tZC1pbnB1dC1jb250YWluZXI+PG1kLWlucHV0LWNvbnRhaW5lcj48bGFiZWw+TWFzcyBvZiBTYW1wbGUgQWRkZWQ8L2xhYmVsPjxpbnB1dCBuZy1tb2RlbD1cImN0cmwudmlhbERhdGEuTWFzczQ1MG1sc2FtcGxlXCI+PC9tZC1pbnB1dC1jb250YWluZXI+PG1kLWlucHV0LWNvbnRhaW5lcj48bGFiZWw+R0MgVmlhbCBJRDwvbGFiZWw+PGlucHV0IG5nLW1vZGVsPVwiY3RybC52aWFsRGF0YS5nY1ZpYWxJRFwiPjwvbWQtaW5wdXQtY29udGFpbmVyPjwvZGl2PjwvZm9ybT48L2Rpdj48L21kLWNvbnRlbnQ+PG1kLWNhcmQtYWN0aW9ucyBsYXlvdXQ9XCJjb2x1bW5cIiBsYXlvdXQtYWxpZ249XCJlbmQtZW5kXCI+PG1kLWJ1dHRvbiBjbGFzcz1cIm1kLXJhaXNlZCBtZC1wcmltYXJ5XCIgbmctY2xpY2s9XCJjdHJsLmFkZFRvUXVldWUoKVwiIG5nLWRpc2FibGVkPVwiY3RybC5kZXRlcm1pbmVBZGRCdXR0b25TdGF0dXMoKVwiPkFkZDwvbWQtYnV0dG9uPjwvbWQtY2FyZC1hY3Rpb25zPjwvZGl2PjwvbWQtY2FyZD48L2Rpdj48ZGl2IGZsZXg9XCIyNVwiIG5nLXNob3c9XCJjdHJsLnZpYWxzLmxlbmd0aCA+IDBcIj48bWQtY2FyZD48bWQtY2FyZC10aXRsZT48bWQtY2FyZC10aXRsZS10ZXh0PjxzcGFuIGNsYXNzPVwibWQtaGVhZGxpbmVcIj5WaWFsczwvc3Bhbj48L21kLWNhcmQtdGl0bGUtdGV4dD48L21kLWNhcmQtdGl0bGU+PGRpdiBsYXlvdXQ9XCJjb2x1bW5cIiBuZy1jbG9hayBjbGFzcz1cIm1kLWlubGluZS1mb3JtXCI+PG1kLWNvbnRlbnQgbGF5b3V0LXBhZGRpbmc+PGRpdj48bWQtbGlzdC1pdGVtIG5nLXJlcGVhdD1cInZpYWwgaW4gY3RybC52aWFscyB0cmFjayBieSAkaW5kZXhcIj48cD57eyBjdHJsLnNlbGVjdGVkVmlhbFR5cGV9fS17eyB2aWFsLnZpYWxJZH19PC9wPjxtZC1idXR0b24gY2xhc3M9XCJtZC1yYWlzZWRcIiBuZy1jbGljaz1cImN0cmwucmVtb3ZlRnJvbVF1ZXVlKHZpYWwpXCI+REVMRVRFPC9tZC1idXR0b24+PC9tZC1saXN0LWl0ZW0+PC9kaXY+PC9tZC1jb250ZW50PjxtZC1jYXJkLWFjdGlvbnMgbGF5b3V0PVwiY29sdW1uXCIgbGF5b3V0LWFsaWduPVwiY2VudGVyLWNlbnRlclwiPjxtZC1idXR0b24gY2xhc3M9XCJtZC1yYWlzZWQgbWQtcHJpbWFyeVwiIG5nLWNsaWNrPVwiY3RybC5zYXZlVmlhbHMoKVwiPlNhdmUgVmlhbHM8L21kLWJ1dHRvbj48L21kLWNhcmQtYWN0aW9ucz48L2Rpdj48L21kLWNhcmQ+PC9kaXY+PC9kaXY+Jyk7XG59XSk7XG59KSgpO1xuIiwiKGZ1bmN0aW9uKG1vZHVsZSkge1xudHJ5IHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ2Jpb2Z1ZWxzLnRlbXBsYXRlcycpO1xufSBjYXRjaCAoZSkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgnYmlvZnVlbHMudGVtcGxhdGVzJywgW10pO1xufVxubW9kdWxlLnJ1bihbJyR0ZW1wbGF0ZUNhY2hlJywgZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpIHtcbiAgJHRlbXBsYXRlQ2FjaGUucHV0KCdzZWN0aW9ucy9zYW1wbGVzL25ldy1iYXRjaC9uZXctYmF0Y2gudHBsLmh0bWwnLFxuICAgICc8ZGl2IG1lbnU9XCJcIj48L2Rpdj48ZGl2IGZsZXggbGF5b3V0PVwicm93XCIgbGF5b3V0LWFsaWduPVwiY2VudGVyIHN0YXJ0XCI+PGRpdiBmbGV4PVwiMzBcIj48bWQtY2FyZD48bWQtY2FyZC1oZWFkZXI+PG1kLWNhcmQtaGVhZGVyLXRleHQ+PHNwYW4gY2xhc3M9XCJtZC10aXRsZVwiPkJhdGNoPC9zcGFuPiA8c3BhbiBjbGFzcz1cIm1kLXN1YmhlYWRcIj5IZWFkZXI8L3NwYW4+PC9tZC1jYXJkLWhlYWRlci10ZXh0PjwvbWQtY2FyZC1oZWFkZXI+PG1kLWNhcmQtY29udGVudD48Zm9ybSBuYW1lPVwidXNlckZvcm1cIiBjbGFzcz1cIm1kLWlubGluZS1mb3JtXCI+PGRpdiBsYXlvdXQ9XCJyb3dcIiBmbGV4PjxtZC1pbnB1dC1jb250YWluZXIgY2xhc3M9XCJtZC1ibG9ja1wiIGZsZXg+PGxhYmVsPkN1c3RvbWVyPC9sYWJlbD48bWQtc2VsZWN0IG5nLW1vZGVsPVwiY3RybC5iYXRjaERhdGEuY3VzdG9tZXJJZFwiPjxtZC1vcHRpb24gbmctcmVwZWF0PVwiY3VzdG9tZXIgaW4gY3RybC5jdXN0b21lcnNcIiBuZy12YWx1ZT1cImN1c3RvbWVyLmlkXCI+e3tjdXN0b21lci5jdXN0b21lcl9jb2RlfX08L21kLW9wdGlvbj48L21kLXNlbGVjdD48L21kLWlucHV0LWNvbnRhaW5lcj48bWQtZGF0ZXBpY2tlciBjbGFzcz1cImRhdGUtcGlja2VyXCIgbmctbW9kZWw9XCJjdHJsLmJhdGNoRGF0YS5zaGlwcGVkRGF0ZVwiIG1kLXBsYWNlaG9sZGVyPVwiU2hpcHBlZCBEYXRlXCI+PC9tZC1kYXRlcGlja2VyPjwvZGl2PjxkaXYgbGF5b3V0PVwicm93XCIgZmxleD48bWQtaW5wdXQtY29udGFpbmVyIGNsYXNzPVwibWQtYmxvY2tcIiBmbGV4PjxsYWJlbD5TYW1wbGUgUHVycG9zZTwvbGFiZWw+PGlucHV0IHR5cGU9XCJ0ZXh0XCIgbmctbW9kZWw9XCJjdHJsLmJhdGNoRGF0YS5wdXJwb3NlXCI+PC9tZC1pbnB1dC1jb250YWluZXI+PG1kLWRhdGVwaWNrZXIgY2xhc3M9XCJkYXRlLXBpY2tlclwiIG5nLW1vZGVsPVwiY3RybC5iYXRjaERhdGEucmVjZWl2ZWREYXRlXCIgbWQtcGxhY2Vob2xkZXI9XCJSZWNlaXZlZCBEYXRlXCI+PC9tZC1kYXRlcGlja2VyPjwvZGl2PjxkaXYgbGF5b3V0PVwicm93XCIgZmxleD48bWQtaW5wdXQtY29udGFpbmVyIGNsYXNzPVwibWQtYmxvY2tcIiBmbGV4PjxsYWJlbD5TdG9yYWdlIExvY2F0aW9uPC9sYWJlbD48aW5wdXQgdHlwZT1cInRleHRcIiBuZy1tb2RlbD1cImN0cmwuYmF0Y2hEYXRhLnN0b3JhZ2VMb2NhdGlvblwiPjwvbWQtaW5wdXQtY29udGFpbmVyPjwvZGl2PjwvZm9ybT48L21kLWNhcmQtY29udGVudD48L21kLWNhcmQ+PC9kaXY+PGRpdiBmbGV4PVwiNDBcIj48bWQtY2FyZD48bWQtY2FyZC1oZWFkZXI+PG1kLWNhcmQtaGVhZGVyLXRleHQ+PHNwYW4gY2xhc3M9XCJtZC10aXRsZVwiPlNhbXBsZTwvc3Bhbj4gPHNwYW4gY2xhc3M9XCJtZC1zdWJoZWFkXCI+TnVtYmVyIDE8L3NwYW4+PC9tZC1jYXJkLWhlYWRlci10ZXh0PjwvbWQtY2FyZC1oZWFkZXI+PG1kLWNhcmQtY29udGVudD48Zm9ybSBuYW1lPVwidXNlckZvcm1cIiBjbGFzcz1cIm1kLWlubGluZS1mb3JtXCI+PGRpdiBsYXlvdXQ9XCJyb3dcIiBmbGV4PjxtZC1pbnB1dC1jb250YWluZXIgY2xhc3M9XCJtZC1ibG9ja1wiIGZsZXg+PGxhYmVsPlR5cGU8L2xhYmVsPjxtZC1zZWxlY3QgbmctbW9kZWw9XCJjdHJsLndvcmtpbmdTYW1wbGUudHlwZVwiPjxtZC1vcHRpb24+UG93ZGVyPC9tZC1vcHRpb24+PG1kLW9wdGlvbj5GaWx0ZXI8L21kLW9wdGlvbj48bWQtb3B0aW9uPk90aGVyPC9tZC1vcHRpb24+PC9tZC1zZWxlY3Q+PC9tZC1pbnB1dC1jb250YWluZXI+PG1kLWlucHV0LWNvbnRhaW5lciBjbGFzcz1cIm1kLWJsb2NrXCIgZmxleD48bGFiZWw+TmFtZTwvbGFiZWw+PGlucHV0IHR5cGU9XCJ0ZXh0XCIgbmctbW9kZWw9XCJjdHJsLndvcmtpbmdTYW1wbGUubmFtZVwiPjwvbWQtaW5wdXQtY29udGFpbmVyPjwvZGl2PjxkaXYgbGF5b3V0PVwicm93XCIgZmxleD48bWQtaW5wdXQtY29udGFpbmVyIGNsYXNzPVwibWQtYmxvY2tcIiBmbGV4PjxsYWJlbD5TcGVjaWVzIElEPC9sYWJlbD48aW5wdXQgdHlwZT1cInRleHRcIiBuZy1tb2RlbD1cImN0cmwud29ya2luZ1NhbXBsZS5zcGVjaWVzSWRcIj48L21kLWlucHV0LWNvbnRhaW5lcj48bWQtZGF0ZXBpY2tlciBjbGFzcz1cImRhdGUtcGlja2VyXCIgbmctbW9kZWw9XCJjdHJsLndvcmtpbmdTYW1wbGUuY29sbGVjdGlvbkRhdGVcIiBsYXlvdXQtYWxpZ249XCJlbmQgZW5kXCIgbWQtcGxhY2Vob2xkZXI9XCJDb2xsZWN0aW9uIERhdGVcIj48L21kLWRhdGVwaWNrZXI+PC9kaXY+PGRpdiBsYXlvdXQ9XCJyb3dcIiBmbGV4PjxtZC1pbnB1dC1jb250YWluZXIgY2xhc3M9XCJtZC1ibG9ja1wiIGZsZXg+PGxhYmVsPkNvbnRhaW5lciBUeXBlPC9sYWJlbD48bWQtc2VsZWN0IG5nLW1vZGVsPVwiY3RybC53b3JraW5nU2FtcGxlLmNvbnRhaW5lclR5cGVcIj48bWQtb3B0aW9uPkdsYXNzPC9tZC1vcHRpb24+PG1kLW9wdGlvbj5Db250YWluZXIgMjwvbWQtb3B0aW9uPjxtZC1vcHRpb24+Q29udGFpbmVyIDM8L21kLW9wdGlvbj48bWQtb3B0aW9uIHZhbHVlPVwib3RoZXJcIj5PdGhlcjwvbWQtb3B0aW9uPjwvbWQtc2VsZWN0PjwvbWQtaW5wdXQtY29udGFpbmVyPjxtZC1pbnB1dC1jb250YWluZXIgY2xhc3M9XCJtZC1ibG9ja1wiIGZsZXggbmctaWY9XCJjdHJsLndvcmtpbmdTYW1wbGUuY29udGFpbmVyPT09XFwnb3RoZXJcXCdcIj48bGFiZWw+Q29udGFpbmVyIFR5cGU8L2xhYmVsPjxpbnB1dCB0eXBlPVwidGV4dFwiIG5nLW1vZGVsPVwiY3RybC53b3JraW5nU2FtcGxlLmVudGVyZWRDb250YWluZXJcIj48L21kLWlucHV0LWNvbnRhaW5lcj48bWQtaW5wdXQtY29udGFpbmVyIGNsYXNzPVwibWQtYmxvY2tcIiBuZy1pZj1cImN0cmwud29ya2luZ1NhbXBsZS50eXBlID09PSBcXCdQb3dkZXJcXCdcIj48bGFiZWw+UmVwbGljYXRlczwvbGFiZWw+PG1kLXNlbGVjdCBuZy1tb2RlbD1cImN0cmwud29ya2luZ1NhbXBsZS5yZXBsaWNhdGVzXCI+PG1kLW9wdGlvbj4wPC9tZC1vcHRpb24+PG1kLW9wdGlvbj4xPC9tZC1vcHRpb24+PG1kLW9wdGlvbj4yPC9tZC1vcHRpb24+PG1kLW9wdGlvbj4zPC9tZC1vcHRpb24+PG1kLW9wdGlvbj40PC9tZC1vcHRpb24+PG1kLW9wdGlvbj41PC9tZC1vcHRpb24+PC9tZC1zZWxlY3Q+PC9tZC1pbnB1dC1jb250YWluZXI+PC9kaXY+PGRpdiBsYXlvdXQ9XCJyb3dcIiBmbGV4PjxtZC1pbnB1dC1jb250YWluZXIgY2xhc3M9XCJtZC1ibG9ja1wiIGZsZXg+PGxhYmVsPkRlc2NyaXB0aW9uPC9sYWJlbD48dGV4dGFyZWEgbmctbW9kZWw9XCJjdHJsLndvcmtpbmdTYW1wbGUuZGVzY3JpcHRpb25cIiBtZC1tYXhsZW5ndGg9XCIxNTBcIiByb3dzPVwiNVwiIG1kLXNlbGVjdC1vbi1mb2N1cyBmbGV4PjwvdGV4dGFyZWE+PC9tZC1pbnB1dC1jb250YWluZXI+PC9kaXY+PC9mb3JtPjwvbWQtY2FyZC1jb250ZW50PjxtZC1jYXJkLWFjdGlvbnMgbGF5b3V0PVwicm93XCIgbGF5b3V0LWFsaWduPVwiZW5kIGNlbnRlclwiPjxtZC1idXR0b24gY2xhc3M9XCJtZC1wcmltYXJ5XCIgbmctaWY9XCIhY3RybC5pc0VkaXRpbmcoKVwiIG5nLWNsaWNrPVwiY3RybC5hZGROZXdTYW1wbGUoKVwiPkFkZCBTYW1wbGU8L21kLWJ1dHRvbj48bWQtYnV0dG9uIGNsYXNzPVwibWQtcHJpbWFyeVwiIG5nLWlmPVwiY3RybC5pc0VkaXRpbmcoKVwiIG5nLWNsaWNrPVwiY3RybC5jYW5jZWxFZGl0KClcIj5DYW5jZWw8L21kLWJ1dHRvbj48bWQtYnV0dG9uIGNsYXNzPVwibWQtcHJpbWFyeVwiIG5nLWlmPVwiY3RybC5pc0VkaXRpbmcoKVwiIG5nLWNsaWNrPVwiY3RybC5zYXZlRWRpdGVkU2FtcGxlKClcIj5TYXZlIFNhbXBsZTwvbWQtYnV0dG9uPjwvbWQtY2FyZC1hY3Rpb25zPjwvbWQtY2FyZD48L2Rpdj48ZGl2IGZsZXg9XCIzMFwiPjxtZC1jYXJkPjxtZC1jYXJkLWhlYWRlcj48bWQtY2FyZC1oZWFkZXItdGV4dD48c3BhbiBjbGFzcz1cIm1kLXRpdGxlXCI+U2FtcGxlczwvc3Bhbj4gPHNwYW4gY2xhc3M9XCJtZC1zdWJoZWFkXCI+QWRkZWQ8L3NwYW4+PC9tZC1jYXJkLWhlYWRlci10ZXh0PjwvbWQtY2FyZC1oZWFkZXI+PG1kLWNhcmQtY29udGVudD48cCBuZy1pZj1cIiFjdHJsLnNhbXBsZXMubGVuZ3RoIHx8IGN0cmwuc2FtcGxlcy5sZW5ndGggPT09IDBcIj5BZGQgc2FtcGxlcyB0byBzZWUgdGhlbSBvdmVyIGhlcmUuPC9wPjxtZC1saXN0IG5nLWlmPVwiY3RybC5zYW1wbGVzLmxlbmd0aCAmJiBjdHJsLnNhbXBsZXMubGVuZ3RoID4gMFwiIG5nLWNsb2FrPjxtZC1saXN0LWl0ZW0gY2xhc3M9XCJzZWNvbmRhcnktYnV0dG9uLXBhZGRpbmdcIiBuZy1jbGljaz1cImN0cmwuZWRpdFNhbXBsZSgkaW5kZXgpXCIgbmctcmVwZWF0PVwic2FtcGxlIGluIGN0cmwuc2FtcGxlc1wiPjxwPnt7c2FtcGxlLm5hbWV9fTwvcD48bWQtYnV0dG9uIGNsYXNzPVwibWQtc2Vjb25kYXJ5XCIgbmctY2xpY2s9XCJjdHJsLmRlbGV0ZVNhbXBsZSgkaW5kZXgpXCI+RGVsZXRlPC9tZC1idXR0b24+PC9tZC1saXN0LWl0ZW0+PC9tZC1saXN0PjwvbWQtY2FyZC1jb250ZW50PjxtZC1jYXJkLWFjdGlvbnMgbGF5b3V0PVwicm93XCIgbGF5b3V0LWFsaWduPVwiZW5kIGNlbnRlclwiPjxtZC1idXR0b24gY2xhc3M9XCJtZC1wcmltYXJ5XCIgbmctY2xpY2s9XCJjdHJsLnNhdmVCYXRjaCgkZXZlbnQpXCI+Q3JlYXRlIEJhdGNoICsgU2FtcGxlczwvbWQtYnV0dG9uPjwvbWQtY2FyZC1hY3Rpb25zPjwvbWQtY2FyZD48L2Rpdj48L2Rpdj4nKTtcbn1dKTtcbn0pKCk7XG4iLCIndXNlIHN0cmljdCc7XG5cbmFuZ3VsYXIubW9kdWxlKCdiaW9mdWVscy5jb3JlLmN1c3RvbWVyJywgW1xuICAnYmlvZnVlbHMuY29yZS5jdXN0b21lci5zZXJ2aWNlJ1xuXSk7XG4iLCIndXNlIHN0cmljdCc7XG5cbmFuZ3VsYXIubW9kdWxlKCdiaW9mdWVscy5jb3JlLmN1c3RvbWVyLnNlcnZpY2UnLCBbXG4gICAgJ2Jpb2Z1ZWxzLmNvcmUucmVzb3VyY2UnXG4gIF0pXG4gIC5mYWN0b3J5KFxuICAgICdjdXN0b21lclNlcnZpY2UnLFxuICAgIGZ1bmN0aW9uICgkbG9nLFxuICAgICAgICAgICAgICByZXNvdXJjZVNlcnZpY2UsXG4gICAgICAgICAgICAgICRxXG4gICAgKSB7XG4gICAgICBmdW5jdGlvbiBjcmVhdGVDdXN0b21lciAoY3VzdE5hbWUsIGN1c3RDb2RlLCBjb250YWN0TmFtZTEsIGNvbnRhY3ROYW1lMiwgYmlsbGluZ05hbWUsIGFkZHJlc3MxLCBhZGRyZXNzMiwgY2l0eSwgc3RhdGUsIHBvc3RhbENvZGUsIHBob25lTnVtYmVyLCBlbWFpbCkge1xuICAgICAgICAkbG9nLmRlYnVnKCdDcmVhdGluZyBjdXN0b21lcicpO1xuXG4gICAgICAgIHZhciBwYXlsb2FkID0ge1xuICAgICAgICAgIGN1c3RvbWVyX25hbWU6IGN1c3ROYW1lLFxuICAgICAgICAgIGN1c3RvbWVyX2NvZGU6IGN1c3RDb2RlLFxuICAgICAgICAgIGNvbnRhY3RfbmFtZTE6IGNvbnRhY3ROYW1lMSxcbiAgICAgICAgICBjb250YWN0X25hbWUyOiBjb250YWN0TmFtZTIsXG4gICAgICAgICAgYmlsbGluZ19uYW1lOiBiaWxsaW5nTmFtZSxcbiAgICAgICAgICBhZGRyZXNzXzE6IGFkZHJlc3MxLFxuICAgICAgICAgIGFkZHJlc3NfMjogYWRkcmVzczIsXG4gICAgICAgICAgY2l0eTogY2l0eSxcbiAgICAgICAgICBzdGF0ZTogc3RhdGUsXG4gICAgICAgICAgcG9zdGFsX2NvZGU6IHBvc3RhbENvZGUsXG4gICAgICAgICAgcGhvbmVfbnVtYmVyOiBwaG9uZU51bWJlcixcbiAgICAgICAgICBlbWFpbDogZW1haWxcbiAgICAgICAgfTtcblxuICAgICAgICByZXR1cm4gcmVzb3VyY2VTZXJ2aWNlLmN1c3RvbWVyQ3JlYXRlLnNhdmUocGF5bG9hZCkuJHByb21pc2UudGhlbihmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICRsb2cuZGVidWcoZGF0YSk7XG4gICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgICAkbG9nLmVycm9yKGVycik7XG4gICAgICAgICAgcmV0dXJuICRxLnJlamVjdChlcnIuZGF0YSk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG5cbiAgICAgIGZ1bmN0aW9uIGdldEN1c3RvbWVycyAoKSB7XG4gICAgICAgICRsb2cuZGVidWcoJ0dldHRpbmcgY3VzdG9tZXJzJyk7XG5cbiAgICAgICAgdmFyIHF1ZXJ5ID0ge307XG5cbiAgICAgICAgcmV0dXJuIHJlc291cmNlU2VydmljZS5jdXN0b21lckxpc3QuZ2V0KHF1ZXJ5KS4kcHJvbWlzZS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgJGxvZy5kZWJ1ZyhkYXRhKTtcbiAgICAgICAgICByZXR1cm4gZGF0YTtcbiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikge1xuICAgICAgICAgICRsb2cuZXJyb3IoZXJyKTtcbiAgICAgICAgICByZXR1cm4gJHEucmVqZWN0KGVyci5kYXRhKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIGNyZWF0ZUN1c3RvbWVyOiBjcmVhdGVDdXN0b21lcixcbiAgICAgICAgZ2V0Q3VzdG9tZXJzOiBnZXRDdXN0b21lcnNcbiAgICAgIH07XG4gICAgfVxuICApO1xuXG4iLCIoZnVuY3Rpb24obW9kdWxlKSB7XG50cnkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgnYmlvZnVlbHMudGVtcGxhdGVzJyk7XG59IGNhdGNoIChlKSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdiaW9mdWVscy50ZW1wbGF0ZXMnLCBbXSk7XG59XG5tb2R1bGUucnVuKFsnJHRlbXBsYXRlQ2FjaGUnLCBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSkge1xuICAkdGVtcGxhdGVDYWNoZS5wdXQoJ3NlY3Rpb25zL2N1c3RvbWVycy9jcmVhdGUtY3VzdG9tZXIvY3JlYXRlLWN1c3RvbWVyLnRwbC5odG1sJyxcbiAgICAnPGRpdiBtZW51PVwiXCI+PC9kaXY+PGRpdiBsYXlvdXQ9XCJyb3dcIiBsYXlvdXQtYWxpZ249XCJjZW50ZXIgY2VudGVyXCI+PGRpdiBmbGV4LXhzPVwiOTBcIiBmbGV4LXNtPVwiNzVcIiBmbGV4LW1kPVwiNzVcIiBmbGV4LWd0LW1kPVwiNTBcIj48bWQtY2FyZD48bWQtY2FyZC10aXRsZT48bWQtY2FyZC10aXRsZS10ZXh0PjxzcGFuIGNsYXNzPVwibWQtaGVhZGxpbmVcIj5DcmVhdGUgQ3VzdG9tZXI8L3NwYW4+PC9tZC1jYXJkLXRpdGxlLXRleHQ+PC9tZC1jYXJkLXRpdGxlPjxkaXYgbGF5b3V0PVwiY29sdW1uXCIgbmctY2xvYWsgY2xhc3M9XCJtZC1pbmxpbmUtZm9ybVwiPjxtZC1jb250ZW50IGxheW91dC1wYWRkaW5nPjxkaXY+PGZvcm0gbmFtZT1cInVzZXJGb3JtXCI+PGRpdiBsYXlvdXQtZ3QteHM9XCJyb3dcIj48bWQtaW5wdXQtY29udGFpbmVyIGNsYXNzPVwibWQtYmxvY2tcIiBmbGV4LWd0LXhzPjxsYWJlbD5DdXN0b21lciBOYW1lPC9sYWJlbD48aW5wdXQgbmctbW9kZWw9XCJjdHJsLmN1c3RvbWVyRGF0YS5uYW1lXCI+PC9tZC1pbnB1dC1jb250YWluZXI+PG1kLWlucHV0LWNvbnRhaW5lciBjbGFzcz1cIm1kLWJsb2NrXCI+PGxhYmVsPkNvZGU8L2xhYmVsPjxpbnB1dCBuZy1tb2RlbD1cImN0cmwuY3VzdG9tZXJEYXRhLmNvZGVcIiByZXF1aXJlZCBtZC1tYXhsZW5ndGg9XCI0XCI+PC9tZC1pbnB1dC1jb250YWluZXI+PC9kaXY+PGRpdiBsYXlvdXQtZ3QteHM9XCJyb3dcIj48bWQtaW5wdXQtY29udGFpbmVyIGNsYXNzPVwibWQtYmxvY2tcIiBmbGV4LWd0LXhzPjxsYWJlbD5Db250YWN0IE5hbWUgIzE8L2xhYmVsPjxpbnB1dCBuZy1tb2RlbD1cImN0cmwuY3VzdG9tZXJEYXRhLmNvbnRhY3ROYW1lMVwiPjwvbWQtaW5wdXQtY29udGFpbmVyPjxtZC1pbnB1dC1jb250YWluZXIgY2xhc3M9XCJtZC1ibG9ja1wiIGZsZXgtZ3QteHM+PGxhYmVsPkNvbnRhY3QgTmFtZSAjMjwvbGFiZWw+PGlucHV0IG5nLW1vZGVsPVwiY3RybC5jdXN0b21lckRhdGEuY29udGFjdE5hbWUyXCI+PC9tZC1pbnB1dC1jb250YWluZXI+PG1kLWlucHV0LWNvbnRhaW5lciBjbGFzcz1cIm1kLWJsb2NrXCIgZmxleC1ndC14cz48bGFiZWw+TmFtZSBmb3IgQmlsbGluZzwvbGFiZWw+PGlucHV0IG5nLW1vZGVsPVwiY3RybC5jdXN0b21lckRhdGEuYmlsbGluZ05hbWVcIj48L21kLWlucHV0LWNvbnRhaW5lcj48L2Rpdj48ZGl2IGxheW91dC1ndC14cz1cInJvd1wiPjxtZC1pbnB1dC1jb250YWluZXIgY2xhc3M9XCJtZC1ibG9ja1wiIGZsZXgtZ3QteHM+PGxhYmVsPlNoaXAgdG8gQWRkcmVzczwvbGFiZWw+PGlucHV0IG5nLW1vZGVsPVwiY3RybC5jdXN0b21lckRhdGEuYWRkcmVzc1wiPjwvbWQtaW5wdXQtY29udGFpbmVyPjxtZC1pbnB1dC1jb250YWluZXIgY2xhc3M9XCJtZC1ibG9ja1wiIGZsZXgtZ3QteHM+PGlucHV0IG5nLW1vZGVsPVwiY3RybC5jdXN0b21lckRhdGEuYWRkcmVzczJcIiBwbGFjZWhvbGRlcj1cIkFkZHJlc3MgMlwiPjwvbWQtaW5wdXQtY29udGFpbmVyPjwvZGl2PjxkaXYgbGF5b3V0LWd0LXhzPVwicm93XCI+PG1kLWlucHV0LWNvbnRhaW5lciBjbGFzcz1cIm1kLWJsb2NrXCIgZmxleC1ndC14cz48bGFiZWw+Q2l0eTwvbGFiZWw+PGlucHV0IG5nLW1vZGVsPVwiY3RybC5jdXN0b21lckRhdGEuY2l0eVwiPjwvbWQtaW5wdXQtY29udGFpbmVyPjxtZC1pbnB1dC1jb250YWluZXIgY2xhc3M9XCJtZC1ibG9ja1wiIGZsZXgtZ3QteHM+PGxhYmVsPlN0YXRlPC9sYWJlbD48bWQtc2VsZWN0IG5nLW1vZGVsPVwiY3RybC5jdXN0b21lckRhdGEuc3RhdGVcIj48bWQtb3B0aW9uIG5nLXJlcGVhdD1cInN0YXRlIGluIGN0cmwuc3RhdGVzXCIgdmFsdWU9XCJ7e3N0YXRlLmFiYnJldn19XCI+e3tzdGF0ZS5hYmJyZXZ9fTwvbWQtb3B0aW9uPjwvbWQtc2VsZWN0PjwvbWQtaW5wdXQtY29udGFpbmVyPjxtZC1pbnB1dC1jb250YWluZXIgY2xhc3M9XCJtZC1ibG9ja1wiIGZsZXgtZ3QteHM+PGxhYmVsPlBvc3RhbCBDb2RlPC9sYWJlbD48aW5wdXQgbmFtZT1cInBvc3RhbENvZGVcIiBuZy1tb2RlbD1cImN0cmwuY3VzdG9tZXJEYXRhLnBvc3RhbENvZGVcIiByZXF1aXJlZCBuZy1wYXR0ZXJuPVwiL15bMC05XXs1fSQvXCIgbWQtbWF4bGVuZ3RoPVwiNVwiPjxkaXYgbmctbWVzc2FnZXM9XCJ1c2VyRm9ybS5wb3N0YWxDb2RlLiRlcnJvclwiIHJvbGU9XCJhbGVydFwiIG11bHRpcGxlPVwibXVsdGlwbGVcIj48ZGl2IG5nLW1lc3NhZ2U9XCJyZXF1aXJlZFwiIGNsYXNzPVwibXktbWVzc2FnZVwiPllvdSBtdXN0IHN1cHBseSBhIHBvc3RhbCBjb2RlLjwvZGl2PjxkaXYgbmctbWVzc2FnZT1cInBhdHRlcm5cIiBjbGFzcz1cIm15LW1lc3NhZ2VcIj5UaGF0IGRvZXNuXFwndCBsb29rIGxpa2UgYSB2YWxpZCBwb3N0YWwgY29kZS48L2Rpdj48ZGl2IG5nLW1lc3NhZ2U9XCJtZC1tYXhsZW5ndGhcIiBjbGFzcz1cIm15LW1lc3NhZ2VcIj5Eb25cXCd0IHVzZSB0aGUgbG9uZyB2ZXJzaW9uIHNpbGx5Li4ud2UgZG9uXFwndCBuZWVkIHRvIGJlIHRoYXQgc3BlY2lmaWMuPC9kaXY+PC9kaXY+PC9tZC1pbnB1dC1jb250YWluZXI+PC9kaXY+PGRpdiBsYXlvdXQtZ3QteHM9XCJyb3dcIj48bWQtaW5wdXQtY29udGFpbmVyIGNsYXNzPVwibWQtYmxvY2tcIiBmbGV4LWd0LXhzPjxsYWJlbD5FbWFpbDwvbGFiZWw+PGlucHV0IG5nLW1vZGVsPVwiY3RybC5jdXN0b21lckRhdGEuZW1haWxcIj48L21kLWlucHV0LWNvbnRhaW5lcj48bWQtaW5wdXQtY29udGFpbmVyIGNsYXNzPVwibWQtYmxvY2tcIiBmbGV4LWd0LXhzPjxsYWJlbD5QaG9uZSBOdW1iZXI8L2xhYmVsPjxpbnB1dCBuZy1tb2RlbD1cImN0cmwuY3VzdG9tZXJEYXRhLnBob25lTnVtYmVyXCI+PC9tZC1pbnB1dC1jb250YWluZXI+PC9kaXY+PGRpdiBsYXlvdXQtZ3QteHM9XCJyb3dcIj48bWQtaW5wdXQtY29udGFpbmVyIGNsYXNzPVwibWQtYmxvY2tcIiBmbGV4LWd0LXhzPjxsYWJlbD5QdXJjaGFzZSBPcmRlciBOdW1iZXI8L2xhYmVsPjxpbnB1dCBuZy1tb2RlbD1cImN0cmwuY3VzdG9tZXJEYXRhLlBPTnVtYmVyXCI+PC9tZC1pbnB1dC1jb250YWluZXI+PG1kLWlucHV0LWNvbnRhaW5lciBjbGFzcz1cIm1kLWJsb2NrXCI+PG1kLWJ1dHRvbiBjbGFzcz1cIm1kLXJhaXNlZFwiIG5nLWNsaWNrPVwiY3RybC5hZGRUb1BPTGlzdChjdHJsLmN1c3RvbWVyRGF0YS5QT051bWJlcilcIiBuZy1kaXNhYmxlZD1cIiFjdHJsLmN1c3RvbWVyRGF0YS5QT051bWJlclwiPkFERDwvbWQtYnV0dG9uPjwvbWQtaW5wdXQtY29udGFpbmVyPjwvZGl2PjxkaXY+PG1kLWxpc3QtaXRlbSBuZy1yZXBlYXQ9XCJwb051bWJlciBpbiBjdHJsLmN1c3RvbWVyRGF0YS5QT051bWJlcnMgdHJhY2sgYnkgJGluZGV4XCI+PHA+e3sgcG9OdW1iZXIgfX08L3A+PG1kLWJ1dHRvbiBjbGFzcz1cIm1kLXJhaXNlZFwiIG5nLWNsaWNrPVwiY3RybC5yZW1vdmVGcm9tUE9MaXN0KHBvTnVtYmVyKVwiPkRFTEVURTwvbWQtYnV0dG9uPjwvbWQtbGlzdC1pdGVtPjwvZGl2PjwvZm9ybT48L2Rpdj48L21kLWNvbnRlbnQ+PG1kLWNhcmQtYWN0aW9ucyBsYXlvdXQ9XCJyb3dcIiBsYXlvdXQtYWxpZ249XCJlbmQtY2VudGVyXCI+PG1kLWJ1dHRvbiBjbGFzcz1cIm1kLXJhaXNlZCBtZC1wcmltYXJ5XCIgbmctY2xpY2s9XCJjdHJsLmNyZWF0ZUN1c3RvbWVyKClcIiBuZy1kaXNhYmxlZD1cIiEoY3RybC5jdXN0b21lckRhdGEubmFtZSAmJiBjdHJsLmN1c3RvbWVyRGF0YS5jb2RlICYmXFxuJyArXG4gICAgJyAgICAgICAgICBjdHJsLmN1c3RvbWVyRGF0YS5jb250YWN0TmFtZTEgJiYgY3RybC5jdXN0b21lckRhdGEuYmlsbGluZ05hbWUgJiYgY3RybC5jdXN0b21lckRhdGEuYWRkcmVzcyAmJiBjdHJsLmN1c3RvbWVyRGF0YS5jaXR5ICYmIGN0cmwuY3VzdG9tZXJEYXRhLnN0YXRlXFxuJyArXG4gICAgJyAgICAgICAgICAmJiBjdHJsLmN1c3RvbWVyRGF0YS5wb3N0YWxDb2RlICYmIGN0cmwuY3VzdG9tZXJEYXRhLmVtYWlsICYmIGN0cmwuY3VzdG9tZXJEYXRhLnBob25lTnVtYmVyICYmIGN0cmwuY3VzdG9tZXJEYXRhLlBPTnVtYmVycy5sZW5ndGggPiAwKVwiPkNyZWF0ZSBDdXN0b21lcjwvbWQtYnV0dG9uPjwvbWQtY2FyZC1hY3Rpb25zPjwvZGl2PjwvbWQtY2FyZD48L2Rpdj48L2Rpdj4nKTtcbn1dKTtcbn0pKCk7XG4iLCIoZnVuY3Rpb24obW9kdWxlKSB7XG50cnkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgnYmlvZnVlbHMudGVtcGxhdGVzJyk7XG59IGNhdGNoIChlKSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdiaW9mdWVscy50ZW1wbGF0ZXMnLCBbXSk7XG59XG5tb2R1bGUucnVuKFsnJHRlbXBsYXRlQ2FjaGUnLCBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSkge1xuICAkdGVtcGxhdGVDYWNoZS5wdXQoJ3NlY3Rpb25zL3ZpYWxzL3ZpYWxzLnRwbC5odG1sJyxcbiAgICAnPGRpdiBtZW51PVwiXCI+PC9kaXY+PG1kLXRvb2xiYXIgY2xhc3M9XCJtZC1hY2NlbnRcIj48ZGl2IGNsYXNzPVwibWQtdG9vbGJhci10b29sc1wiPjxtZC1zZWxlY3QgbmctbW9kZWw9XCJjdHJsLnNlbGVjdGVkVmlhbFR5cGVcIiBhcmlhLWxhYmVsPVwiVmlhbCBTZWxlY3Rpb25cIiBuZy1jaGFuZ2U9XCJjdHJsLmNoYW5nZVZpYWxUeXBlKClcIj48bWQtb3B0aW9uIG5nLXJlcGVhdD1cInZpYWxUeXBlIGluIGN0cmwudmlhbFR5cGVzXCIgdmFsdWU9XCJ7e3ZpYWxUeXBlLmNvZGV9fVwiPnt7dmlhbFR5cGUuZGVzY3JpcHRpb259fTwvbWQtb3B0aW9uPjwvbWQtc2VsZWN0PjxtZC1idXR0b24gY2xhc3M9XCJcIiBhcmlhLWxhYmVsPVwiQ3JlYXRlIFZpYWxzXCIgdWktc3JlZj1cImNyZWF0ZVZpYWxzXCI+Q3JlYXRlIFZpYWxzPC9tZC1idXR0b24+PG1kLWJ1dHRvbiBjbGFzcz1cIlwiIGFyaWEtbGFiZWw9XCJFZGl0IFZpYWxzXCI+RWRpdCBWaWFsczwvbWQtYnV0dG9uPjwvZGl2PjwvbWQtdG9vbGJhcj48bWQtY29udGVudCBsYXlvdXQtcGFkZGluZz48bWQtdGFibGUtY29udGFpbmVyPjx0YWJsZSBtZC10YWJsZSBtZC1yb3ctc2VsZWN0IG5nLW1vZGVsPVwiY3RybC5zZWxlY3RlZFwiPjx0aGVhZCBtZC1oZWFkIG1kLW9yZGVyPVwicXVlcnkub3JkZXJcIiBtZC1vbi1yZW9yZGVyPVwiY3RybC5vblJlb3JkZXJcIj48dHIgbWQtcm93Pjx0aCBtZC1jb2x1bW4+PHNwYW4+VmlhbCBJRDwvc3Bhbj48L3RoPjx0aCBtZC1jb2x1bW4+PHNwYW4+U2FtcGxlIElEPC9zcGFuPjwvdGg+PHRoIG1kLWNvbHVtbj48c3Bhbj5EYXkgUHJlcGFyZWQ8L3NwYW4+PC90aD48dGggbWQtY29sdW1uPjxzcGFuPlN0YXR1czwvc3Bhbj48L3RoPjx0aCBtZC1jb2x1bW4gbmctc2hvdz1cImN0cmwuc2VsZWN0ZWRWaWFsVHlwZSA9PSBcXCdSWE5cXCdcIj48c3Bhbj5GQSBNYXNzPC9zcGFuPjwvdGg+PHRoIG1kLWNvbHVtbiBuZy1zaG93PVwiY3RybC5zZWxlY3RlZFZpYWxUeXBlID09IFxcJ1JYTlxcJ1wiPjxzcGFuPkMxNSBJU1REIENvbmNlbnRyYXRpb248L3NwYW4+PC90aD48dGggbWQtY29sdW1uIG5nLXNob3c9XCJjdHJsLnNlbGVjdGVkVmlhbFR5cGUgPT0gXFwnR0NcXCdcIj48c3Bhbj5DMTMgTWFzczwvc3Bhbj48L3RoPjx0aCBtZC1jb2x1bW4gbmctc2hvdz1cImN0cmwuc2VsZWN0ZWRWaWFsVHlwZSA9PSBcXCdHQ1xcJ1wiPjxzcGFuPkMxMyBJU1REIENvbmNlbnRyYXRpb248L3NwYW4+PC90aD48dGggbWQtY29sdW1uIG5nLXNob3c9XCJjdHJsLnNlbGVjdGVkVmlhbFR5cGUgPT0gXFwnR0NcXCdcIj48c3Bhbj5DMTkgSVNURCBDb25jZW50cmF0aW9uPC9zcGFuPjwvdGg+PHRoIG1kLWNvbHVtbiBuZy1zaG93PVwiY3RybC5zZWxlY3RlZFZpYWxUeXBlID09IFxcJ1NQS1xcJ1wiPjxzcGFuPkdDIFZpYWwgSUQ8L3NwYW4+PC90aD48dGggbWQtY29sdW1uIG5nLXNob3c9XCJjdHJsLnNlbGVjdGVkVmlhbFR5cGUgPT0gXFwnU1BLXFwnXCI+PHNwYW4+QzE1IElTVEQgQ29uY2VudHJhdGlvbjwvc3Bhbj48L3RoPjx0aCBtZC1jb2x1bW4gbmctc2hvdz1cImN0cmwuc2VsZWN0ZWRWaWFsVHlwZSA9PSBcXCdTUEtcXCdcIj48c3Bhbj5TYW1wbGUgTWFzczwvc3Bhbj48L3RoPjwvdHI+PC90aGVhZD48dGJvZHkgbWQtYm9keT48dHIgbWQtcm93IG5nLXJlcGVhdD1cInZpYWwgaW4gY3RybC52aWFsc1wiIG1kLXNlbGVjdD1cInZpYWxcIiBtZC1zZWxlY3QtaWQ9XCJ7e3ZpYWx9fVwiIG1kLWF1dG8tc2VsZWN0Pjx0ZCBtZC1jZWxsPnt7dmlhbC52aWFsX2lkfX08L3RkPjx0ZCBtZC1jZWxsPnt7dmlhbC5pZH19PC90ZD48dGQgbWQtY2VsbD57e2N0cmwuY29udmVydERhdGVTdHJpbmcodmlhbC5kYXRlX3ByZXBhcmVkKX19PC90ZD48dGQgbWQtY2VsbD57e3ZpYWwuc3RhdHVzfX08L3RkPjx0ZCBtZC1jZWxsIG5nLXNob3c9XCJjdHJsLnNlbGVjdGVkVmlhbFR5cGUgPT0gXFwnUlhOXFwnXCI+e3t2aWFsLmZhdHR5X2FjaWRfbWFzc319PC90ZD48dGQgbWQtY2VsbCBuZy1zaG93PVwiY3RybC5zZWxlY3RlZFZpYWxUeXBlID09IFxcJ1JYTlxcJ1wiPnt7dmlhbC5jMTVfaXN0ZF9jb25jZW50cmF0aW9ufX08L3RkPjx0ZCBtZC1jZWxsIG5nLXNob3c9XCJjdHJsLnNlbGVjdGVkVmlhbFR5cGUgPT0gXFwnR0NcXCdcIj57e3ZpYWwuYzEzX21hc3N9fTwvdGQ+PHRkIG1kLWNlbGwgbmctc2hvdz1cImN0cmwuc2VsZWN0ZWRWaWFsVHlwZSA9PSBcXCdHQ1xcJ1wiPnt7dmlhbC5jMTNfaXN0ZF9jb25jZW50cmF0aW9ufX08L3RkPjx0ZCBtZC1jZWxsIG5nLXNob3c9XCJjdHJsLnNlbGVjdGVkVmlhbFR5cGUgPT0gXFwnR0NcXCdcIj57e3ZpYWwuYzE5X2lzdGRfY29uY2VudHJhdGlvbn19PC90ZD48dGQgbWQtY2VsbCBuZy1zaG93PVwiY3RybC5zZWxlY3RlZFZpYWxUeXBlID09IFxcJ1NQS1xcJ1wiPnt7dmlhbC5nY192aWFsX2lkfX08L3RkPjx0ZCBtZC1jZWxsIG5nLXNob3c9XCJjdHJsLnNlbGVjdGVkVmlhbFR5cGUgPT0gXFwnU1BLXFwnXCI+e3t2aWFsLmMxNV9tYXNzfX08L3RkPjx0ZCBtZC1jZWxsIG5nLXNob3c9XCJjdHJsLnNlbGVjdGVkVmlhbFR5cGUgPT0gXFwnU1BLXFwnXCI+e3t2aWFsLk1hc3NfNDUwbWxfc2FtcGxlfX08L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPjwvbWQtdGFibGUtY29udGFpbmVyPjxtZC10YWJsZS1wYWdpbmF0aW9uIG1kLWxpbWl0PVwiY3RybC5xdWVyeS5saW1pdFwiIG1kLXBhZ2U9XCJjdHJsLnF1ZXJ5LnBhZ2VcIiBtZC10b3RhbD1cInt7Y3RybC5kZXNzZXJ0cy5jb3VudH19XCIgbWQtb24tcGFnaW5hdGU9XCJvblBhZ2luYXRlXCIgbWQtcGFnZS1zZWxlY3Q+PC9tZC10YWJsZS1wYWdpbmF0aW9uPjwvbWQtY29udGVudD4nKTtcbn1dKTtcbn0pKCk7XG4iLCIndXNlIHN0cmljdCc7XG5cbmFuZ3VsYXIubW9kdWxlKCdiaW9mdWVscy5jb3JlLnJlc291cmNlJywgW1xuICAnYmlvZnVlbHMuY29yZS5yZXNvdXJjZS5zZXJ2aWNlJ1xuXSk7XG4iLCIndXNlIHN0cmljdCc7XG5cbmFuZ3VsYXIubW9kdWxlKCdiaW9mdWVscy5jb3JlLnJlc291cmNlLnNlcnZpY2UnLCBbXG4gICduZ1Jlc291cmNlJ1xuXSlcbiAgLmZhY3RvcnkoXG4gICAgJ3Jlc291cmNlU2VydmljZScsXG4gICAgZnVuY3Rpb24gKCRyZXNvdXJjZSwgJGxvY2FsU3RvcmFnZSkge1xuICAgICAgdmFyIHRva2VuID0gJyc7XG4gICAgICBpZiAoJGxvY2FsU3RvcmFnZVxuICAgICAgICAmJiAkbG9jYWxTdG9yYWdlLnVzZXJQcm9maWxlXG4gICAgICAgICYmICRsb2NhbFN0b3JhZ2UudXNlclByb2ZpbGUudG9rZW4pIHtcbiAgICAgICAgICB0b2tlbiA9ICRsb2NhbFN0b3JhZ2UudXNlclByb2ZpbGUudG9rZW47XG4gICAgICB9XG4gICAgICB2YXIgdXJsID0gJ2h0dHBzOi8vYmlvZnVlbHMtY3NpczQ3MS5yaGNsb3VkLmNvbSc7XG5cbiAgICAgIHZhciB1c2VyQXV0aCA9ICRyZXNvdXJjZSh1cmwgKyAnL2FwaS92MS91c2VyL2F1dGgnLCB7fSwge1xuICAgICAgICAnc2F2ZSc6IHtcbiAgICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgdmFyIHVzZXJSZWdpc3RlciA9ICRyZXNvdXJjZSh1cmwgKyAnL2FwaS92MS91c2VyL2NyZWF0ZScsIHt9LCB7XG4gICAgICAgICdzYXZlJzoge1xuICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICB2YXIgY3VzdG9tZXJMaXN0ID0gJHJlc291cmNlKHVybCArICcvYXBpL3YxL2N1c3RvbWVyL2xpc3QnLCB7fSwge1xuICAgICAgICAnZ2V0Jzoge1xuICAgICAgICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgJ0F1dGhvcml6YXRpb24nOiAnQmVhcmVyICcgKyB0b2tlbixcbiAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICB2YXIgY3VzdG9tZXJDcmVhdGUgPSAkcmVzb3VyY2UodXJsICsgJy9hcGkvdjEvY3VzdG9tZXIvY3JlYXRlJywge30sIHtcbiAgICAgICAgJ3NhdmUnOiB7XG4gICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgJ0F1dGhvcml6YXRpb24nOiAnQmVhcmVyICcgKyB0b2tlbixcbiAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICB2YXIgdmlhbExpc3QgPSAkcmVzb3VyY2UodXJsICsgJy9hcGkvdjEvdmlhbC9saXN0Jywge30sIHtcbiAgICAgICAgJ2dldCc6IHtcbiAgICAgICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICdBdXRob3JpemF0aW9uJzogJ0JlYXJlciAnICsgdG9rZW4sXG4gICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgdmFyIHZpYWxDcmVhdGUgPSAkcmVzb3VyY2UodXJsICsgJy9hcGkvdjEvdmlhbC9jcmVhdGUnLCB7fSwge1xuICAgICAgICAnc2F2ZSc6IHtcbiAgICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAnQXV0aG9yaXphdGlvbic6ICdCZWFyZXIgJyArIHRva2VuLFxuICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIHZhciBzYW1wbGVMaXN0ID0gJHJlc291cmNlKHVybCArICcvYXBpL3YxL3NhbXBsZS9saXN0Jywge30sIHtcbiAgICAgICAgJ3NhdmUnOiB7XG4gICAgICAgICAgbWV0aG9kOiAnR0VUJyxcbiAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAnQXV0aG9yaXphdGlvbic6ICdCZWFyZXIgJyArIHRva2VuLFxuICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIHZhciBiYXRjaENyZWF0ZSA9ICRyZXNvdXJjZSh1cmwgKyAnL2FwaS92MS9iYXRjaC9jcmVhdGUnLCB7fSwge1xuICAgICAgICAnc2F2ZSc6IHtcbiAgICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAnQXV0aG9yaXphdGlvbic6ICdCZWFyZXIgJyArIHRva2VuLFxuICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG5cblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdXNlckF1dGg6IHVzZXJBdXRoLFxuICAgICAgICB1c2VyUmVnaXN0ZXI6IHVzZXJSZWdpc3RlcixcbiAgICAgICAgY3VzdG9tZXJMaXN0OiBjdXN0b21lckxpc3QsXG4gICAgICAgIGN1c3RvbWVyQ3JlYXRlOiBjdXN0b21lckNyZWF0ZSxcbiAgICAgICAgdmlhbExpc3Q6IHZpYWxMaXN0LFxuICAgICAgICB2aWFsQ3JlYXRlOiB2aWFsQ3JlYXRlLFxuICAgICAgICBzYW1wbGVMaXN0OiBzYW1wbGVMaXN0LFxuICAgICAgICBiYXRjaENyZWF0ZTogYmF0Y2hDcmVhdGVcbiAgICAgIH07XG4gICAgfVxuICApO1xuXG4iLCIoZnVuY3Rpb24obW9kdWxlKSB7XG50cnkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgnYmlvZnVlbHMudGVtcGxhdGVzJyk7XG59IGNhdGNoIChlKSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdiaW9mdWVscy50ZW1wbGF0ZXMnLCBbXSk7XG59XG5tb2R1bGUucnVuKFsnJHRlbXBsYXRlQ2FjaGUnLCBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSkge1xuICAkdGVtcGxhdGVDYWNoZS5wdXQoJ3NlY3Rpb25zL3NhbXBsZXMvc2FtcGxlcy50cGwuaHRtbCcsXG4gICAgJzxkaXYgbWVudT1cIlwiPjwvZGl2PjxtZC10b29sYmFyIGNsYXNzPVwibWQtYWNjZW50XCI+PGRpdiBjbGFzcz1cIm1kLXRvb2xiYXItdG9vbHNcIj48bWQtc2VsZWN0IG5nLW1vZGVsPVwiY3RybC5zZWxlY3RlZEJhdGNoXCIgcGxhY2Vob2xkZXI9XCJTZWxlY3QgYSBiYXRjaFwiIG5nLWNoYW5nZT1cImN0cmwudXBkYXRlQmF0Y2hJZCgpXCI+PG1kLW9wdGlvbiBuZy12YWx1ZT1cImJhdGNoXCIgbmctcmVwZWF0PVwiYmF0Y2ggaW4gY3RybC5iYXRjaGVzXCI+e3sgYmF0Y2ggfX08L21kLW9wdGlvbj48L21kLXNlbGVjdD48bWQtYnV0dG9uIGNsYXNzPVwiXCIgYXJpYS1sYWJlbD1cIkhvbWUgUGFnZVwiIHVpLXNyZWY9XCJuZXdCYXRjaFwiPk5ldyBCYXRjaDwvbWQtYnV0dG9uPjxtZC1idXR0b24gY2xhc3M9XCJcIiBhcmlhLWxhYmVsPVwiU2FtcGxlcyBQYWdlXCI+UnhuIFNlbGVjdGlvbjwvbWQtYnV0dG9uPjxtZC1idXR0b24gY2xhc3M9XCJcIiBhcmlhLWxhYmVsPVwiVmlhbHMgUGFnZVwiPkVzdGVyaWZpY2F0aW9uPC9tZC1idXR0b24+PG1kLWJ1dHRvbiBjbGFzcz1cIlwiIGFyaWEtbGFiZWw9XCJWaWFscyBQYWdlXCI+RkFNRTwvbWQtYnV0dG9uPjwvZGl2PjwvbWQtdG9vbGJhcj48bWQtY29udGVudCBsYXlvdXQtcGFkZGluZz48bWQtdGFibGUtY29udGFpbmVyPjx0YWJsZSBtZC10YWJsZSBtZC1yb3ctc2VsZWN0IG5nLW1vZGVsPVwiY3RybC5zZWxlY3RlZFwiPjx0aGVhZCBtZC1oZWFkIG1kLW9yZGVyPVwicXVlcnkub3JkZXJcIiBtZC1vbi1yZW9yZGVyPVwiY3RybC5vblJlb3JkZXJcIj48dHIgbWQtcm93Pjx0aCBtZC1jb2x1bW4+PHNwYW4+U2FtcGxlIElEPC9zcGFuPjwvdGg+PHRoIG1kLWNvbHVtbiBtZC1udW1lcmljPjxzcGFuPlR5cGU8L3NwYW4+PC90aD48dGggbWQtY29sdW1uIG1kLW51bWVyaWM+U3BlY2llcyBJRDwvdGg+PHRoIG1kLWNvbHVtbiBtZC1udW1lcmljPlJYTiBWSUFMICM8L3RoPjx0aCBtZC1jb2x1bW4gbWQtbnVtZXJpYz5FU1RFUklGSUNBVElPTjwvdGg+PHRoIG1kLWNvbHVtbiBtZC1udW1lcmljPkZBTUU8L3RoPjwvdHI+PC90aGVhZD48dGJvZHkgbWQtYm9keT48dHIgbWQtcm93IG5nLXJlcGVhdD1cInNhbXBsZSBpbiBjdHJsLnNhbXBsZXNcIiBtZC1zZWxlY3Q9XCJzYW1wbGVcIiBtZC1zZWxlY3QtaWQ9XCJ7e3NhbXBsZX19XCIgbWQtYXV0by1zZWxlY3Q+PHRkIG1kLWNlbGw+e3tzYW1wbGUuaWR9fTwvdGQ+PHRkIG1kLWNlbGw+e3tzYW1wbGUudHlwZX19PC90ZD48dGQgbWQtY2VsbD57e3NhbXBsZS5zcGVjaWVzX2lkfX08L3RkPjx0ZCBtZC1jZWxsPnt7c2FtcGxlLnJ4bl92aWFsX2lkfX08L3RkPjx0ZCBtZC1jZWxsPnt7c2FtcGxlLmVzdGVyaWZpY2F0aW9uX2NvbXBsZXRlID09PSAxfX08L3RkPjx0ZCBtZC1jZWxsPnt7c2FtcGxlLmZhbWVfY29tcGxldGUgPT09IDF9fTwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+PC9tZC10YWJsZS1jb250YWluZXI+PG1kLXRhYmxlLXBhZ2luYXRpb24gbWQtbGltaXQ9XCJjdHJsLnF1ZXJ5LmxpbWl0XCIgbWQtcGFnZT1cImN0cmwucXVlcnkucGFnZVwiIG1kLXRvdGFsPVwie3tjdHJsLnNhbXBsZXMuY291bnR9fVwiIG1kLW9uLXBhZ2luYXRlPVwib25QYWdpbmF0ZVwiIG1kLXBhZ2Utc2VsZWN0PjwvbWQtdGFibGUtcGFnaW5hdGlvbj48L21kLWNvbnRlbnQ+Jyk7XG59XSk7XG59KSgpO1xuIiwiKGZ1bmN0aW9uKG1vZHVsZSkge1xudHJ5IHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ2Jpb2Z1ZWxzLnRlbXBsYXRlcycpO1xufSBjYXRjaCAoZSkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgnYmlvZnVlbHMudGVtcGxhdGVzJywgW10pO1xufVxubW9kdWxlLnJ1bihbJyR0ZW1wbGF0ZUNhY2hlJywgZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpIHtcbiAgJHRlbXBsYXRlQ2FjaGUucHV0KCdzZWN0aW9ucy9sb2dpbi9sb2dpbi50cGwuaHRtbCcsXG4gICAgJzxkaXYgbGF5b3V0PVwicm93XCIgY2xhc3M9XCJsb2dpbl9fY29udGFpbmVyXCIgbGF5b3V0LWFsaWduPVwiY2VudGVyIGNlbnRlclwiPjxkaXYgZmxleC1ndC14cz1cIjUwXCIgZmxleC1ndC1zbT1cIjQwXCIgZmxleC1ndC1tZD1cIjMwXCI+PG1kLWNhcmQ+PGltZyBuZy1zcmM9XCJpbWFnZXMvbG9naW4taGVhZGVyLTMuanBnXCIgY2xhc3M9XCJtZC1jYXJkLWltYWdlXCIgYWx0PVwiaW1hZ2UgY2FwdGlvblwiPjxtZC10YWJzIG1kLXNlbGVjdGVkPVwiY3RybC5zZWxlY3RlZFRhYlwiIG1kLWNlbnRlci10YWJzIG1kLWR5bmFtaWMtaGVpZ2h0IG1kLXN0cmV0Y2gtdGFicz1cImFsd2F5c1wiPjxtZC10YWIgaWQ9XCJ0YWIxXCI+PG1kLXRhYi1sYWJlbD5Mb2dpbjwvbWQtdGFiLWxhYmVsPjxtZC10YWItYm9keT48bWQtY29udGVudCBsYXlvdXQtcGFkZGluZz48ZGl2Pjxmb3JtIG5hbWU9XCJ1c2VyRm9ybVwiIG5nLXN1Ym1pdD1cImN0cmwubG9naW5Vc2VyKClcIj48bWQtaW5wdXQtY29udGFpbmVyIGNsYXNzPVwibWQtYmxvY2tcIj48bGFiZWw+RW1haWw8L2xhYmVsPjxpbnB1dCBuZy1tb2RlbD1cImN0cmwudXNlckxvZ2luLmVtYWlsXCIgcmVxdWlyZWQ+PC9tZC1pbnB1dC1jb250YWluZXI+PG1kLWlucHV0LWNvbnRhaW5lciBjbGFzcz1cIm1kLWJsb2NrXCI+PGxhYmVsPlBhc3N3b3JkPC9sYWJlbD48aW5wdXQgdHlwZT1cInBhc3N3b3JkXCIgbmctbW9kZWw9XCJjdHJsLnVzZXJMb2dpbi5wYXNzd29yZFwiIG5nLWtleXByZXNzPVwiY3RybC5vbkVudGVyKCRldmVudClcIiByZXF1aXJlZD48L21kLWlucHV0LWNvbnRhaW5lcj48L2Zvcm0+PC9kaXY+PHAgbmctY2xhc3M9XCJ7IFxcJ2Zvcm0tc3VjY2Vzc1xcJyA6IGN0cmwuZm9ybVJlc3BvbnNlLFxcbicgK1xuICAgICdcXG4nICtcbiAgICAnICAgICAgICBcXCdmb3JtLWVycm9yXFwnIDogY3RybC5mb3JtRXJyb3IgfVwiPnt7IGN0cmwuZm9ybVJlc3BvbnNlIHx8IGN0cmwuZm9ybUVycm9yIH19PC9wPjwvbWQtY29udGVudD48L21kLXRhYi1ib2R5PjwvbWQtdGFiPjxtZC10YWIgaWQ9XCJ0YWIyXCI+PG1kLXRhYi1sYWJlbD5SZWdpc3RlcjwvbWQtdGFiLWxhYmVsPjxtZC10YWItYm9keT48bWQtY29udGVudCBsYXlvdXQtcGFkZGluZz48ZGl2Pjxmb3JtIG5hbWU9XCJyZWdpc3RlckZvcm1cIj48bWQtaW5wdXQtY29udGFpbmVyIGNsYXNzPVwibWQtYmxvY2tcIj48bGFiZWw+RnVsbCBOYW1lPC9sYWJlbD48aW5wdXQgbmctbW9kZWw9XCJjdHJsLnVzZXJSZWdpc3Rlci5mdWxsTmFtZVwiIG5hbWU9XCJmdWxsTmFtZVwiIHJlcXVpcmVkIG1kLW1heGxlbmd0aD1cIjQwXCI+PGRpdiBuZy1tZXNzYWdlcz1cInJlZ2lzdGVyRm9ybS5mdWxsTmFtZS4kZXJyb3JcIj48bmctbWVzc2FnZSB3aGVuPVwiW1xcJ3JlcXVpcmVkXFwnLCBcXCdtYXhsZW5ndGhcXCddXCI+VGhpcyBpcyByZXF1aXJlZCE8L25nLW1lc3NhZ2U+PC9kaXY+PC9tZC1pbnB1dC1jb250YWluZXI+PG1kLWlucHV0LWNvbnRhaW5lciBjbGFzcz1cIm1kLWJsb2NrXCI+PGxhYmVsPkxpYmVydHkgRW1haWw8L2xhYmVsPjxpbnB1dCB0eXBlPVwiZW1haWxcIiBuZy1tb2RlbD1cImN0cmwudXNlclJlZ2lzdGVyLmVtYWlsXCIgbmFtZT1cInVzZXJFbWFpbFwiIG5nLXBhdHRlcm49XCIvXltcXFxcdy5dK0BsaWJlcnR5LmVkdSQvXCIgcmVxdWlyZWQ+PGRpdiBuZy1tZXNzYWdlcz1cInJlZ2lzdGVyRm9ybS51c2VyRW1haWwuJGVycm9yXCIgbmctbWVzc2FnZXMtbXVsdGlwbGU+PGRpdiBuZy1tZXNzYWdlPVwicmVxdWlyZWRcIj5UaGlzIGlzIHJlcXVpcmVkITwvZGl2PjxkaXYgbmctbWVzc2FnZT1cInBhdHRlcm5cIj5Zb3UgbXVzdCBoYXZlIGEgbGliZXJ0eSBlbWFpbDwvZGl2PjwvZGl2PjwvbWQtaW5wdXQtY29udGFpbmVyPjxtZC1pbnB1dC1jb250YWluZXIgY2xhc3M9XCJtZC1ibG9ja1wiPjxsYWJlbD5QYXNzd29yZDwvbGFiZWw+PGlucHV0IHR5cGU9XCJwYXNzd29yZFwiIG5hbWU9XCJwYXNzd29yZFwiIG5nLW1vZGVsPVwiY3RybC51c2VyUmVnaXN0ZXIucGFzc3dvcmRcIiBuZy1wYXR0ZXJuPVwiL15bYS16QS1aXVxcXFx3ezUsMjB9JC9cIj48ZGl2IG5nLW1lc3NhZ2VzPVwicmVnaXN0ZXJGb3JtLnBhc3N3b3JkLiRlcnJvclwiIG5nLW1lc3NhZ2VzLW11bHRpcGxlPjxkaXYgbmctbWVzc2FnZT1cInJlcXVpcmVkXCI+VGhpcyBpcyByZXF1aXJlZCE8L2Rpdj48ZGl2IG5nLW1lc3NhZ2U9XCJwYXR0ZXJuXCI+WW91IG5lZWQgYSBtb3JlIGNvbXBsZXggcGFzc3dvcmQ8L2Rpdj48L2Rpdj48L21kLWlucHV0LWNvbnRhaW5lcj48L2Zvcm0+PC9kaXY+PHAgbmctY2xhc3M9XCJ7IFxcJ2Zvcm0tc3VjY2Vzc1xcJyA6IGN0cmwucmVnaXN0ZXJGb3JtUmVzcG9uc2UsXFxuJyArXG4gICAgJ1xcbicgK1xuICAgICcgICAgICAgIFxcJ2Zvcm0tZXJyb3JcXCcgOiBjdHJsLnJlZ2lzdGVyRm9ybUVycm9yIH1cIj57eyBjdHJsLnJlZ2lzdGVyRm9ybVJlc3BvbnNlIHx8IGN0cmwucmVnaXN0ZXJGb3JtRXJyb3IgfX08L3A+PC9tZC1jb250ZW50PjwvbWQtdGFiLWJvZHk+PC9tZC10YWI+PC9tZC10YWJzPjxtZC1jYXJkLWFjdGlvbnMgbGF5b3V0PVwicm93XCIgbGF5b3V0LWFsaWduPVwiZW5kIGNlbnRlclwiPjxtZC1idXR0b24gY2xhc3M9XCJtZC1yYWlzZWQgbWQtcHJpbWFyeVwiIG5nLXNob3c9XCJjdHJsLnNlbGVjdGVkVGFiID09PSAwXCIgYXJpYS1sYWJlbD1cIlByb2NlZWRcIiBuZy1jbGljaz1cImN0cmwubG9naW5Vc2VyKClcIiBuZy1kaXNhYmxlZD1cIiF1c2VyRm9ybS4kdmFsaWRcIj5Mb2dpbjwvbWQtYnV0dG9uPjxtZC1idXR0b24gY2xhc3M9XCJtZC1yYWlzZWQgbWQtcHJpbWFyeVwiIG5nLXNob3c9XCJjdHJsLnNlbGVjdGVkVGFiID09PSAxXCIgYXJpYS1sYWJlbD1cIlByb2NlZWRcIiBuZy1jbGljaz1cImN0cmwucmVnaXN0ZXJVc2VyKClcIiBuZy1kaXNhYmxlZD1cIiFyZWdpc3RlckZvcm0uJHZhbGlkXCI+UmVnaXN0ZXI8L21kLWJ1dHRvbj48L21kLWNhcmQtYWN0aW9ucz48L21kLWNhcmQ+PC9kaXY+PC9kaXY+Jyk7XG59XSk7XG59KSgpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5hbmd1bGFyLm1vZHVsZSgnYmlvZnVlbHMuY29tcG9uZW50Lm1lbnUnLCBbXG4gICdiaW9mdWVscy5jb21wb25lbnQubWVudS5jb250cm9sbGVyJyxcbiAgJ2Jpb2Z1ZWxzLmNvbXBvbmVudC5tZW51LmRpcmVjdGl2ZSdcbl0pO1xuIiwiKGZ1bmN0aW9uKG1vZHVsZSkge1xudHJ5IHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ2Jpb2Z1ZWxzLnRlbXBsYXRlcycpO1xufSBjYXRjaCAoZSkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgnYmlvZnVlbHMudGVtcGxhdGVzJywgW10pO1xufVxubW9kdWxlLnJ1bihbJyR0ZW1wbGF0ZUNhY2hlJywgZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpIHtcbiAgJHRlbXBsYXRlQ2FjaGUucHV0KCdzZWN0aW9ucy9jdXN0b21lcnMvY3VzdG9tZXJzLnRwbC5odG1sJyxcbiAgICAnPGRpdiBtZW51PVwiXCI+PC9kaXY+PG1kLXRvb2xiYXIgY2xhc3M9XCJtZC1hY2NlbnRcIj48ZGl2IGNsYXNzPVwibWQtdG9vbGJhci10b29sc1wiPjxtZC1idXR0b24gY2xhc3M9XCJcIiBhcmlhLWxhYmVsPVwiSG9tZSBQYWdlXCIgdWktc3JlZj1cImNyZWF0ZUN1c3RvbWVyXCI+TmV3IEN1c3RvbWVyPC9tZC1idXR0b24+PG1kLWJ1dHRvbiBjbGFzcz1cIlwiIGFyaWEtbGFiZWw9XCJTYW1wbGVzIFBhZ2VcIj5FZGl0IEN1c3RvbWVyPC9tZC1idXR0b24+PC9kaXY+PC9tZC10b29sYmFyPjxtZC1jb250ZW50IGxheW91dC1wYWRkaW5nPjxtZC10YWJsZS1jb250YWluZXI+PHRhYmxlIG1kLXRhYmxlIG1kLXJvdy1zZWxlY3QgbmctbW9kZWw9XCJjdHJsLnNlbGVjdGVkXCI+PHRoZWFkIG1kLWhlYWQgbWQtb3JkZXI9XCJxdWVyeS5vcmRlclwiIG1kLW9uLXJlb3JkZXI9XCJjdHJsLm9uUmVvcmRlclwiPjx0ciBtZC1yb3c+PHRoIG1kLWNvbHVtbj48c3Bhbj5JRDwvc3Bhbj48L3RoPjx0aCBtZC1jb2x1bW4+PHNwYW4+Q3VzdG9tZXIgTmFtZTwvc3Bhbj48L3RoPjx0aCBtZC1jb2x1bW4+PHNwYW4+Q3VzdG9tZXIgQ29kZTwvc3Bhbj48L3RoPjx0aCBtZC1jb2x1bW4+PHNwYW4+Q29udGFjdCBOYW1lICMxPC9zcGFuPjwvdGg+PHRoIG1kLWNvbHVtbj48c3Bhbj5Db250YWN0IE5hbWUgIzI8L3NwYW4+PC90aD48dGggbWQtY29sdW1uPjxzcGFuPkJpbGxpbmcgTmFtZTwvc3Bhbj48L3RoPjx0aCBtZC1jb2x1bW4+PHNwYW4+QWRkcmVzczwvc3Bhbj48L3RoPjx0aCBtZC1jb2x1bW4+PHNwYW4+QWRkcmVzcyAyPC9zcGFuPjwvdGg+PHRoIG1kLWNvbHVtbj48c3Bhbj5DaXR5PC9zcGFuPjwvdGg+PHRoIG1kLWNvbHVtbj48c3Bhbj5TdGF0ZTwvc3Bhbj48L3RoPjx0aCBtZC1jb2x1bW4+PHNwYW4+UG9zdGFsIENvZGU8L3NwYW4+PC90aD48dGggbWQtY29sdW1uPjxzcGFuPlBob25lIE51bWJlcjwvc3Bhbj48L3RoPjx0aCBtZC1jb2x1bW4+PHNwYW4+ZW1haWw8L3NwYW4+PC90aD48L3RyPjwvdGhlYWQ+PHRib2R5IG1kLWJvZHk+PHRyIG1kLXJvdyBuZy1yZXBlYXQ9XCJjdXN0b21lciBpbiBjdHJsLmN1c3RvbWVyc1wiIG1kLXNlbGVjdD1cImN1c3RvbWVyXCIgbWQtc2VsZWN0LWlkPVwie3tjdXN0b21lcn19XCIgbWQtYXV0by1zZWxlY3Q+PHRkIG1kLWNlbGw+e3tjdXN0b21lci5pZH19PC90ZD48dGQgbWQtY2VsbD57e2N1c3RvbWVyLmN1c3RvbWVyX25hbWV9fTwvdGQ+PHRkIG1kLWNlbGw+e3tjdXN0b21lci5jdXN0b21lcl9jb2RlfX08L3RkPjx0ZCBtZC1jZWxsPnt7Y3VzdG9tZXIuY29udGFjdF9uYW1lMX19PC90ZD48dGQgbWQtY2VsbD57e2N1c3RvbWVyLmNvbnRhY3RfbmFtZTJ9fTwvdGQ+PHRkIG1kLWNlbGw+e3tjdXN0b21lci5iaWxsaW5nX25hbWV9fTwvdGQ+PHRkIG1kLWNlbGw+e3tjdXN0b21lci5hZGRyZXNzXzF9fTwvdGQ+PHRkIG1kLWNlbGw+e3tjdXN0b21lci5hZGRyZXNzXzJ9fTwvdGQ+PHRkIG1kLWNlbGw+e3tjdXN0b21lci5jaXR5fX08L3RkPjx0ZCBtZC1jZWxsPnt7Y3VzdG9tZXIuc3RhdGV9fTwvdGQ+PHRkIG1kLWNlbGw+e3tjdXN0b21lci5wb3N0YWxfY29kZX19PC90ZD48dGQgbWQtY2VsbD57e2N1c3RvbWVyLnBob25lX251bWJlcn19PC90ZD48dGQgbWQtY2VsbD57e2N1c3RvbWVyLmVtYWlsfX08L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPjwvbWQtdGFibGUtY29udGFpbmVyPjxtZC10YWJsZS1wYWdpbmF0aW9uIG1kLWxpbWl0PVwiY3RybC5xdWVyeS5saW1pdFwiIG1kLXBhZ2U9XCJjdHJsLnF1ZXJ5LnBhZ2VcIiBtZC10b3RhbD1cInt7Y3RybC5kZXNzZXJ0cy5jb3VudH19XCIgbWQtb24tcGFnaW5hdGU9XCJvblBhZ2luYXRlXCIgbWQtcGFnZS1zZWxlY3Q+PC9tZC10YWJsZS1wYWdpbmF0aW9uPjwvbWQtY29udGVudD4nKTtcbn1dKTtcbn0pKCk7XG4iLCIndXNlIHN0cmljdCc7XG5cbmFuZ3VsYXIubW9kdWxlKCdiaW9mdWVscy5jb21wb25lbnQubWVudS5kaXJlY3RpdmUnLCBbXG4gICAgJ2Jpb2Z1ZWxzLmNvbXBvbmVudC5tZW51LmNvbnRyb2xsZXInXG4gIF0pXG4gIC5kaXJlY3RpdmUoXG4gICAgJ21lbnUnLFxuICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHJlc3RyaWN0OiAnQScsXG4gICAgICAgIHRlbXBsYXRlVXJsOiAnY29tcG9uZW50cy9tZW51L21lbnUudHBsLmh0bWwnLFxuICAgICAgICBjb250cm9sbGVyOiAnTWVudUN0cmwgYXMgbWVudUN0cmwnXG4gICAgICB9O1xuICAgIH1cbiAgKTtcblxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5hbmd1bGFyLm1vZHVsZSgnYmlvZnVlbHMuY29tcG9uZW50Lm1lbnUuY29udHJvbGxlcicsIFtcbiAgICAnbmdTdG9yYWdlJ1xuICBdKVxuICAuY29udHJvbGxlcihcbiAgICAnTWVudUN0cmwnLFxuICAgIGZ1bmN0aW9uICgkbG9jYWxTdG9yYWdlKSB7XG4gICAgICAoZnVuY3Rpb24gKHZtKSB7XG4gICAgICAgIHZtLnVzZXJQcm9maWxlID0gJGxvY2FsU3RvcmFnZS51c2VyUHJvZmlsZTtcbiAgICAgIH0pKHRoaXMpO1xuICAgIH1cbiAgKTtcblxuIiwiKGZ1bmN0aW9uKG1vZHVsZSkge1xudHJ5IHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ2Jpb2Z1ZWxzLnRlbXBsYXRlcycpO1xufSBjYXRjaCAoZSkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgnYmlvZnVlbHMudGVtcGxhdGVzJywgW10pO1xufVxubW9kdWxlLnJ1bihbJyR0ZW1wbGF0ZUNhY2hlJywgZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpIHtcbiAgJHRlbXBsYXRlQ2FjaGUucHV0KCdzZWN0aW9ucy9ob21lL2hvbWUudHBsLmh0bWwnLFxuICAgICc8ZGl2IG1lbnU9XCJcIj48L2Rpdj48bWQtY29udGVudCBsYXlvdXQtcGFkZGluZz48ZGl2IGxheW91dD1cInJvd1wiIGxheW91dC1zbT1cImNvbHVtblwiPjxkaXYgZmxleC1ndC1zbT1cIjQ1XCI+PGNhbnZhcyBpZD1cInBpZVwiIGNsYXNzPVwiY2hhcnQgY2hhcnQtcGllXCIgY2hhcnQtZGF0YT1cImN0cmwuZGF0YVwiIGNoYXJ0LWxhYmVscz1cImN0cmwubGFiZWxzXCI+PC9jYW52YXM+PC9kaXY+PGRpdiBmbGV4LWd0LXNtPVwiNTVcIj48Y2FudmFzIGlkPVwibGluZTFcIiBjbGFzcz1cImNoYXJ0IGNoYXJ0LWxpbmVcIiBjaGFydC1kYXRhPVwiY3RybC5saW5lRGF0YVwiIGNoYXJ0LWxhYmVscz1cImN0cmwubGluZUxhYmVsc1wiIGNoYXJ0LWxlZ2VuZD1cInRydWVcIiBjaGFydC1zZXJpZXM9XCJjdHJsLmxpbmVTZXJpZXNcIiBjaGFydC1jbGljaz1cIm9uQ2xpY2tcIj48L2NhbnZhcz48L2Rpdj48ZGl2IGZsZXgtZ3Qtc209XCI0NVwiPjxjYW52YXMgaWQ9XCJwaWUyXCIgY2xhc3M9XCJjaGFydCBjaGFydC1waWVcIiBjaGFydC1kYXRhPVwiY3RybC5kYXRhXCIgY2hhcnQtbGFiZWxzPVwiY3RybC5sYWJlbHNcIj48L2NhbnZhcz48L2Rpdj48L2Rpdj48ZGl2IGxheW91dD1cInJvd1wiPjxkaXYgZmxleD1cIjM1XCI+PGNhbnZhcyBpZD1cImxpbmVcIiBjbGFzcz1cImNoYXJ0IGNoYXJ0LWxpbmVcIiBjaGFydC1kYXRhPVwiY3RybC5saW5lRGF0YVwiIGNoYXJ0LWxhYmVscz1cImN0cmwubGluZUxhYmVsc1wiIGNoYXJ0LWxlZ2VuZD1cInRydWVcIiBjaGFydC1zZXJpZXM9XCJjdHJsLmxpbmVTZXJpZXNcIiBjaGFydC1jbGljaz1cIm9uQ2xpY2tcIj48L2NhbnZhcz48L2Rpdj48ZGl2IGZsZXg+PGNhbnZhcyBpZD1cInJhZGFyXCIgY2xhc3M9XCJjaGFydCBjaGFydC1yYWRhclwiIGNoYXJ0LWRhdGE9XCJjdHJsLnJhZGFyRGF0YVwiIGNoYXJ0LWxhYmVscz1cImN0cmwucmFkYXJMYWJlbHNcIj48L2NhbnZhcz48L2Rpdj48ZGl2IGZsZXg+PGNhbnZhcyBpZD1cImJhclwiIGNsYXNzPVwiY2hhcnQgY2hhcnQtYmFyXCIgY2hhcnQtZGF0YT1cImN0cmwuYmFyRGF0YVwiIGNoYXJ0LWxhYmVscz1cImN0cmwuYmFyTGFiZWxzXCIgY2hhcnQtc2VyaWVzPVwiY3RybC5iYXJTZXJpZXNcIj48L2NhbnZhcz48L2Rpdj48L2Rpdj48L21kLWNvbnRlbnQ+Jyk7XG59XSk7XG59KSgpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5hbmd1bGFyLm1vZHVsZSgnYmlvZnVlbHMnLCBbXG4gICAgJ25nTWF0ZXJpYWwnLFxuICAgICd1aS5yb3V0ZXInLFxuICAgICdjaGFydC5qcycsXG4gICAgJ21kLmRhdGEudGFibGUnLFxuICAgICdiaW9mdWVscy5jb21wb25lbnQubWVudScsXG4gICAgJ2Jpb2Z1ZWxzLmNvcmUuY3VzdG9tZXInLFxuICAgICdiaW9mdWVscy5jb3JlLnJlc291cmNlJyxcbiAgICAnYmlvZnVlbHMuY29yZS5yb3V0ZXInLFxuICAgICdiaW9mdWVscy5jb3JlLnNhbXBsZScsXG4gICAgJ2Jpb2Z1ZWxzLmNvcmUudXNlcicsXG4gICAgJ2Jpb2Z1ZWxzLmNvcmUudmlhbCcsXG4gICAgJ2Jpb2Z1ZWxzLmNvcmUud3JhcHBlcnMnLFxuICAgICdiaW9mdWVscy5zZWN0aW9ucy5jcmVhdGVDdXN0b21lcicsXG4gICAgJ2Jpb2Z1ZWxzLnNlY3Rpb25zLmN1c3RvbWVycycsXG4gICAgJ2Jpb2Z1ZWxzLnNlY3Rpb25zLmNyZWF0ZVZpYWxzJyxcbiAgICAnYmlvZnVlbHMuc2VjdGlvbnMuaG9tZScsXG4gICAgJ2Jpb2Z1ZWxzLnNlY3Rpb25zLmxvZ2luJyxcbiAgICAnYmlvZnVlbHMuc2VjdGlvbnMubmV3QmF0Y2gnLFxuICAgICdiaW9mdWVscy5zZWN0aW9ucy5zYW1wbGVzJyxcbiAgICAnYmlvZnVlbHMuc2VjdGlvbnMudmlhbHMnXG4gIF0pXG4gIC5jb25maWcoZnVuY3Rpb24oJG1kVGhlbWluZ1Byb3ZpZGVyKSB7XG4gICAgdmFyIGdyZWVuRGFya0NvbnRyYXN0ID0gJG1kVGhlbWluZ1Byb3ZpZGVyLmV4dGVuZFBhbGV0dGUoJ2dyZWVuJywge1xuICAgICAgJ2NvbnRyYXN0RGVmYXVsdENvbG9yJzogJ2RhcmsnLFxuICAgICAgJ2NvbnRyYXN0TGlnaHRDb2xvcnMnOiAnbGlnaHQnXG4gICAgfSk7XG4gICAgLy8gUmVnaXN0ZXIgdGhlIG5ldyBjb2xvciBwYWxldHRlIG1hcCB3aXRoIHRoZSBuYW1lIDxjb2RlPm5lb25SZWQ8L2NvZGU+XG4gICAgJG1kVGhlbWluZ1Byb3ZpZGVyLmRlZmluZVBhbGV0dGUoJ2dyZWVuRGFyaycsIGdyZWVuRGFya0NvbnRyYXN0KTtcblxuICAgICRtZFRoZW1pbmdQcm92aWRlci5kZWZpbmVQYWxldHRlKCdhbWF6aW5nUGFsZXR0ZU5hbWUnLCB7XG4gICAgICAnNTAnOiAnZmZlYmVlJyxcbiAgICAgICcxMDAnOiAnZmZjZGQyJyxcbiAgICAgICcyMDAnOiAnZWY5YTlhJyxcbiAgICAgICczMDAnOiAnZTU3MzczJyxcbiAgICAgICc0MDAnOiAnZWY1MzUwJyxcbiAgICAgICc1MDAnOiAnZjQ0MzM2JyxcbiAgICAgICc2MDAnOiAnZTUzOTM1JyxcbiAgICAgICc3MDAnOiAnZDMyZjJmJyxcbiAgICAgICc4MDAnOiAnYzYyODI4JyxcbiAgICAgICc5MDAnOiAnYjcxYzFjJyxcbiAgICAgICdBMTAwJzogJ2ZmOGE4MCcsXG4gICAgICAnQTIwMCc6ICdmZjUyNTInLFxuICAgICAgJ0E0MDAnOiAnZmYxNzQ0JyxcbiAgICAgICdBNzAwJzogJ2Q1MDAwMCcsXG4gICAgICAnY29udHJhc3REZWZhdWx0Q29sb3InOiAnbGlnaHQnLCAgICAvLyB3aGV0aGVyLCBieSBkZWZhdWx0LCB0ZXh0IChjb250cmFzdClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIG9uIHRoaXMgcGFsZXR0ZSBzaG91bGQgYmUgZGFyayBvciBsaWdodFxuICAgICAgJ2NvbnRyYXN0RGFya0NvbG9ycyc6IFsnNTAnLCAnMTAwJywgLy9odWVzIHdoaWNoIGNvbnRyYXN0IHNob3VsZCBiZSAnZGFyaycgYnkgZGVmYXVsdFxuICAgICAgICAnMjAwJywgJzMwMCcsICc0MDAnLCAnQTEwMCddLFxuICAgICAgJ2NvbnRyYXN0TGlnaHRDb2xvcnMnOiB1bmRlZmluZWQgICAgLy8gY291bGQgYWxzbyBzcGVjaWZ5IHRoaXMgaWYgZGVmYXVsdCB3YXMgJ2RhcmsnXG4gICAgfSk7XG5cbiAgICAkbWRUaGVtaW5nUHJvdmlkZXIudGhlbWUoJ2RlZmF1bHQnKVxuICAgICAgLnByaW1hcnlQYWxldHRlKCdibHVlLWdyZXknKVxuICAgICAgLmFjY2VudFBhbGV0dGUoJ2dyZWVuRGFyaycpXG4gICAgICAuYmFja2dyb3VuZFBhbGV0dGUoJ2dyZXknKTtcbiAgfSlcbiAgLnJ1bihmdW5jdGlvbiAoJGxvZykge1xuICAgICRsb2cuZGVidWcoJ1dlbGNvbWUgdG8gQW5ndWxhciEnKTtcbiAgfSk7XG4iLCIoZnVuY3Rpb24obW9kdWxlKSB7XG50cnkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgnYmlvZnVlbHMudGVtcGxhdGVzJyk7XG59IGNhdGNoIChlKSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdiaW9mdWVscy50ZW1wbGF0ZXMnLCBbXSk7XG59XG5tb2R1bGUucnVuKFsnJHRlbXBsYXRlQ2FjaGUnLCBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSkge1xuICAkdGVtcGxhdGVDYWNoZS5wdXQoJ2NvbXBvbmVudHMvbWVudS9tZW51LnRwbC5odG1sJyxcbiAgICAnPG1kLXRvb2xiYXI+PGRpdiBjbGFzcz1cIm1kLXRvb2xiYXItdG9vbHNcIj48YT48aW1nIGNsYXNzPVwibWVudV9fbG9nb1wiIHNyYz1cImltYWdlcy9iaW8tbG9nby5zdmdcIj48L2E+PG1kLWJ1dHRvbiBjbGFzcz1cIm1kLXByaW1hcnlcIiBhcmlhLWxhYmVsPVwiSG9tZSBQYWdlXCIgdWktc3JlZj1cImhvbWVcIj5Ib21lPC9tZC1idXR0b24+PG1kLWJ1dHRvbiBhcmlhLWxhYmVsPVwiU2FtcGxlcyBQYWdlXCIgdWktc3JlZj1cInNhbXBsZXNcIj5TYW1wbGVzPC9tZC1idXR0b24+PG1kLWJ1dHRvbiBhcmlhLWxhYmVsPVwiVmlhbHMgUGFnZVwiIHVpLXNyZWY9XCJ2aWFsc1wiPlZpYWxzPC9tZC1idXR0b24+PG1kLWJ1dHRvbiBhcmlhLWxhYmVsPVwiQ3VzdG9tZXJzIFBhZ2VcIiB1aS1zcmVmPVwiY3VzdG9tZXJzXCI+Q3VzdG9tZXJzPC9tZC1idXR0b24+PHNwYW4gZmxleD48L3NwYW4+PG1kLWJ1dHRvbj5IZXksIHt7bWVudUN0cmwudXNlclByb2ZpbGUuZnVsbE5hbWV9fTwvbWQtYnV0dG9uPjxtZC1idXR0b24gY2xhc3M9XCJtZC1yYWlzZWRcIiBhcmlhLWxhYmVsPVwiTGVhcm4gTW9yZVwiPkxvZ291dDwvbWQtYnV0dG9uPjwvZGl2PjwvbWQtdG9vbGJhcj4nKTtcbn1dKTtcbn0pKCk7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
