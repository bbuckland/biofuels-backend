'use strict';

angular.module('biofuels.sections.newBatch', [
  'biofuels.sections.newBatch.controller'
]);


'use strict';

angular.module('biofuels.sections.newBatch.controller', [
  'biofuels.core.customer',
  'biofuels.core.sample'
])
  .controller('newBatchCtrl',
    function ($log,
              $mdDialog,
              customerService,
              sampleService,
              _
    ) {
      (function (vm) {
        function getCustomerNames () {
          customerService.getCustomers().then(function (data) {
            vm.customers = data.data;
          });
        }

        getCustomerNames();

        vm.batchData = {};
        vm.samples = [{
          name: 'Bradley'
        }];
        vm.workingSample = {};
        vm.workingIndex = 1;

        vm.addNewSample = function () {
          vm.samples.push(angular.copy(vm.workingSample));
          vm.workingIndex++;
          vm.workingSample = {};
        };

        vm.deleteSample = function (index) {
          vm.samples.splice(index, 1);
          if (vm.workingIndex === index) {
            vm.workingSample = {};
          }
          vm.workingIndex = vm.samples.length;
        };

        vm.cancelEdit = function () {
          vm.workingSample = {};
          vm.workingIndex = vm.samples.length;
        };

        vm.isEditing = function () {
          return vm.workingIndex < vm.samples.length;
        };

        vm.editSample = function (index) {
          vm.workingIndex = index;
          vm.workingSample = angular.copy(vm.samples[index]);
        };

        vm.saveEditedSample = function () {
          vm.samples[vm.workingIndex] = angular.copy(vm.workingSample);
          vm.workingSample = {};
          vm.workingIndex = vm.samples.length;
        };

        vm.saveBatch = function (ev) {
          var confirm = $mdDialog.confirm()
            .title('Are you sure you want to save?')
            .textContent('Ensure you have entered all samples.')
            .ariaLabel('Entered All Samples')
            .targetEvent(ev)
            .ok('Create the Batch')
            .cancel('Hold please.');
          $mdDialog.show(confirm).then(function() {
              vm.batchData.samples = angular.fromJson(angular.toJson(vm.samples));
              vm.batchData.customerId += '';
              return vm.batchData;
          }).then(sampleService.createBatch);
        };
      })(this);
    });

'use strict';

angular.module('biofuels.sections.createVials', [
  'biofuels.sections.createVials.controller'
]);


'use strict';

angular.module('biofuels.sections.createVials.controller', [])
  .controller('createVialsCtrl',
    function ($log,
              vialService,
              $state,
              ROUTES) {
      (function (vm) {
        $log.debug('This is from the home page');
        vm.vialData = {};
        vm.vials = [];
        vm.idCounter = 0;

        vm.vialTypes = [{
          code: 'RXN',
          description: 'REACTION'
        }, {
          code: 'GC',
          description: 'GC'
        }, {
          code: 'SPK',
          description: 'SPIKED'
        }];

        vm.addToQueue = function () {
          $log.debug('Added to Queue');
          if (vm.selectedVialType === 'RXN') {
            vm.vial = {
              vialId: vm.vialData.vialId.toString(),
              preparationDate: vm.vialData.preparationDate,
              vialStatus: 0,
              fattyAcidmass: Number(vm.vialData.fattyAcidmass),
              c15Istdcon: Number(vm.vialData.c15Istdcon)
            };
          } else if (vm.selectedVialType === 'GC') {
            vm.vial = {
              vialId: vm.vialData.vialId.toString(),
              preparationDate: vm.vialData.preparationDate,
              vialStatus: 0,
              c13Mass: Number(vm.vialData.c13Mass),
              c13Istdcon: Number(vm.vialData.c13Istdcon),
              c19Istdcon: Number(vm.vialData.c19Istdcon)
          };
          } else if (vm.selectedVialType === 'SPK') {
            vm.vial = {
              vialId: vm.vialData.vialId.toString(),
              preparationDate: vm.vialData.preparationDate,
              vialStatus: 0,
              c15Mass: Number(vm.vialData.c15Mass),
              Mass450mlsample: Number(vm.vialData.Mass450mlsample)
            };
          }
          vm.vials.push(vm.vial);

          vm.vialData.vialId++;
        };

        vm.removeFromQueue = function (vial) {
          $log.debug(vial);
          var index = vm.vials.indexOf(vial);
          if (index > -1) {
            vm.vials.splice(index, 1);
          }
        };

        vm.saveVials = function () {
          $log.debug('Saved vials');

          vm.formError = '';
          vm.formResponse = '';
          vialService.createVial(vm.selectedVialType, vm.vials).then(function (data) {
            vm.formResponse = 'Successfully made vials!';
            $state.go(ROUTES.VIALS);
          }).catch(function (err) {
            vm.formError = err.error;
          });
        };

        vm.determineAddButtonStatus = function () {
          // Returning true disables the ADD button
          if (vm.selectedVialType === 'RXN') {
            return !(vm.vialData.vialId && vm.vialData.preparationDate && vm.vialData.fattyAcidmass && vm.vialData.c15Istdcon);
          } else if (vm.selectedVialType === 'GC') {
            return !(vm.vialData.vialId && vm.vialData.preparationDate && vm.vialData.c13Mass && vm.vialData.c13Istdcon && vm.vialData.c19Istdcon);
          } else if (vm.selectedVialType === 'SPK') {
            return !(vm.vialData.vialId && vm.vialData.preparationDate && vm.vialData.c15Mass && vm.vialData.Mass450mlsample && vm.vialData.gcVialID);
          }
          return true;
        };

      })(this);
    });

'use strict';

angular.module('biofuels.sections.createCustomer', [
  'biofuels.sections.createCustomer.controller'
]);


'use strict';

angular.module('biofuels.sections.createCustomer.controller', [])
  .controller('createCustomerCtrl',
    function ($log,
              customerService,
              $state,
              ROUTES
    ) {
      (function (vm) {
        $log.debug('This is from the home page');
        vm.customerData = {
          PONumbers: [],
        };
        vm.states = ('AL AK AZ AR CA CO CT DE FL GA HI ID IL IN IA KS KY LA ME MD MA MI MN MS ' +
        'MO MT NE NV NH NJ NM NY NC ND OH OK OR PA RI SC SD TN TX UT VT VA WA WV WI ' +
        'WY').split(' ').map(function(state) {
          return {abbrev: state};
        });

        vm.addToPOList = function (poNumber) {
          if (!vm.customerData.PONumbers.includes(poNumber) && poNumber) {
            vm.customerData.PONumbers.push(poNumber);
          }
        };

        vm.removeFromPOList = function (poNumber) {
          var index = vm.customerData.PONumbers.indexOf(poNumber);
          if (index > -1) {
            vm.customerData.PONumbers.splice(index, 1);
          }
        };

        vm.createCustomer = function () {
          $log.debug('Create this customer');

          vm.formError = '';
          vm.formResponse = '';
          customerService.createCustomer(vm.customerData.name, vm.customerData.code, vm.customerData.contactName1, vm.customerData.contactName2, vm.customerData.billingName,
                                         vm.customerData.address, vm.customerData.address2, vm.customerData.city, vm.customerData.state,
                                         Number(vm.customerData.postalCode), vm.customerData.phoneNumber, vm.customerData.email).then(function (data) {
            vm.formResponse = 'Successfully made customer!';
            $state.go(ROUTES.CUSTOMERS);
          }).catch(function (err) {
            vm.formError = err.error;
          });
        };

      })(this);
    });

'use strict';

angular.module('biofuels.sections.samples', [
  'biofuels.sections.samples.controller'
]);


'use strict';

angular.module('biofuels.sections.samples.controller', [

])
  .controller('samplesCtrl',
    function ($log,
              sampleService,
              _
    ) {
      (function (vm) {
        $log.debug('This is from the samples page');
        vm.selected = [];

        //vm.selectedBatch = vm.batches[0];

        sampleService.getSamples().then(function (data) {
          $log.debug(data);
          vm.sampleData = data.data;

          vm.batches = _.uniq(_.pluck(vm.sampleData, 'batch_id'));

          $log.debug(vm.batches);
        });

        vm.updateBatchId = function () {
          vm.samples = _.filter(vm.sampleData, function(sample) {
            return sample.batch_id === vm.selectedBatch;
          });
        }

      })(this);
    });

'use strict';

angular.module('biofuels.sections.vials', [
  'biofuels.sections.vials.controller'
]);


'use strict';

angular.module('biofuels.sections.vials.controller', [])
  .controller('vialsCtrl',
    function ($log,
              vialService
    ) {
      (function (vm) {
        $log.debug('This is from the vials page');

        vm.selected = [];
        vm.customers = [];

        vm.vialTypes = [{
          code: 'RXN',
          description: 'REACTION'
        }, {
          code: 'GC',
          description: 'GC'
        }, {
          code: 'SPK',
          description: 'SPIKED'
        }];
        vm.selectedVialType = vm.vialTypes[0].code;

        vm.changeVialType = function () {
          $log.debug('Change vial type');
          getVials();
        };

        vm.convertDateString = function (dateString) {
          var date = new Date(dateString);
          return date.toLocaleDateString("en-US");
        }

        function getVials () {
          vm.formError = '';
          vm.formResponse = '';
          vialService.getVials(vm.selectedVialType).then(function (data) {
            vm.formResponse = 'Successfully got vial list!';
            vm.vials = data.data;
          }).catch(function (err) {
            vm.formError = err.error;
          });

        }

        getVials();
      })(this);
    });

'use strict';

angular.module('biofuels.sections.login', [
  'biofuels.sections.login.controller'
]);


'use strict';

angular.module('biofuels.sections.login.controller', [
  'ngMessages',
  'ngStorage',
  'biofuels.core.user',
  'biofuels.core.router.constants'
])
  .controller('loginCtrl',
  function ($log,
            userService,
            $localStorage,
            $state,
            ROUTES
  ) {
    (function (vm) {
      $log.debug('This is from the logins page');

      vm.disableIt = false;
      vm.userLogin = {};
      vm.userRegister = {};

      if ($localStorage.userProfile && $localStorage.userProfile.email) {
        vm.userLogin.email = $localStorage.userProfile.email;
      }

      vm.onEnter = function (ev) {
        if (ev.which === 13) {
          vm.loginUser();
        }
      };

      vm.loginUser = function () {
        vm.formError = '';
        vm.formResponse = '';
        userService.login(vm.userLogin.email, vm.userLogin.password).then(function () {
          vm.formResponse = 'Successfully logged in!';
          $state.go(ROUTES.HOME);
        }).catch(function (err) {
          vm.formError = err.error;
        });
      };

      vm.registerUser = function () {
        vm.registerFormError = '';
        vm.registerFormResponse = '';
        userService.register(vm.userRegister.fullName,
            vm.userRegister.email,
            vm.userRegister.password).then(function () {

          vm.registerFormResponse = 'Successfully registered user!';
          vm.userLogin.email = vm.userRegister.email;
          vm.userRegister = {};
          vm.selectedTab = 0;
        }).catch(function (err) {
          vm.registerFormError = err.error;
        });
      };
    })(this);
  });

'use strict';

angular.module('biofuels.sections.home', [
  'biofuels.sections.home.controller'
]);


'use strict';

angular.module('biofuels.sections.home.controller', [
  'ngStorage'
])
  .controller('homeCtrl',
  function ($log,
            $localStorage
  ) {
    (function (vm) {
      $log.debug('This is from the home page');

      vm.userProfile = $localStorage.userProfile;
      vm.labels = ['Download Sales', 'In-Store Sales', 'Mail-Order Sales'];
      vm.data = [300, 500, 100];


      vm.lineLabels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];
      vm.lineSeries = ['Series A', 'Series B'];
      vm.lineData = [
        [65, 59, 80, 81, 56, 55, 40],
        [28, 48, 40, 19, 86, 27, 90]
      ];

      vm.radarLabels =['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'];

      vm.radarData = [
        [65, 59, 90, 81, 56, 55, 40],
        [28, 48, 40, 19, 96, 27, 100]
      ];


      vm.barLabels = ['2006', '2007', '2008', '2009', '2010', '2011', '2012'];
      vm.barSeries = ['Series A', 'Series B'];

      vm.barData = [
        [65, 59, 80, 81, 56, 55, 40],
        [28, 48, 40, 19, 86, 27, 90]
      ];
    })(this);
  });

'use strict';

angular.module('biofuels.sections.customers', [
  'biofuels.sections.customers.controller'
]);


'use strict';

angular.module('biofuels.sections.customers.controller', [])
  .controller('customersCtrl',
    function ($log,
              customerService
    ) {
      (function (vm) {
        $log.debug('This is from the customers page');
        vm.selected = [];
        vm.customers = [];

        function getCustomers () {
          vm.formError = '';
          vm.formResponse = '';
          customerService.getCustomers().then(function (data) {
            vm.formResponse = 'Successfully got customer list!';
            vm.customers = data.data;
            $log.debug(vm.customers.length);
          }).catch(function (err) {
            vm.formError = err.error;
          });

        }

        getCustomers();
      })(this);
    });

'use strict';

angular.module('biofuels.core.wrappers', [
  'biofuels.core.wrappers.underscore'
]);

'use strict';

angular.module('biofuels.core.wrappers.underscore', [])
  .factory('_', ['$window', function($window) {
    if ($window && '_' in $window) {
      return $window._;
    }

    return {};
  }]);

'use strict';

angular.module('biofuels.core.vial', [
  'biofuels.core.vial.service'
]);

'use strict';

angular.module('biofuels.core.vial.service', [
    'biofuels.core.resource'
  ])
  .factory(
    'vialService',
    function ($log,
              resourceService,
              $q
    ) {
      function createVial (vialType, vials) {
        $log.debug('Creating vials');

        var payload = {
          vial_type: vialType,
          vials: vials
        };

        return resourceService.vialCreate.save(payload).$promise.then(function (data) {
          $log.debug(data);
        }).catch(function (err) {
          $log.error(err);
          return $q.reject(err.data);
        });
      }


      function getVials (vialType) {
        $log.debug('Getting vials');

        var query = {
          vial_type: vialType
        };

        return resourceService.vialList.get(query).$promise.then(function (data) {
          $log.debug(data);
          return data;
        }).catch(function (err) {
          $log.error(err);
          return $q.reject(err.data);
        });
      }

      return {
        createVial: createVial,
        getVials: getVials
      };
    }
  );


'use strict';

angular.module('biofuels.core.user', [
  'biofuels.core.user.service'
]);

'use strict';

angular.module('biofuels.core.user.service', [
  'ngStorage',
  'biofuels.core.resource'
])
  .factory(
    'userService',
    function ($log,
              resourceService,
              $localStorage,
              $q
    ) {
      function login (email, password) {
        $log.debug('Logging you in from the user service');

        var payload = {
          email: email,
          password: password
        };

        return resourceService.userAuth.save(payload).$promise.then(function (data) {
          $log.debug(data);
          $localStorage.userProfile = {
            id: data['user_id'],
            fullName: data['full_name'],
            email: data['email'],
            token: data['token']
          };
        }).catch(function (err) {
          $log.error(err);
          return $q.reject(err.data);
        });
      }


      function register (fullName, email, password) {
        $log.debug('Logging you in from the user service');

        var payload = {
          full_name: fullName,
          email: email,
          password: password
        };

        return resourceService.userRegister.save(payload).$promise.then(function (data) {
          $log.debug(data);
        }).catch(function (err) {
          $log.error(err);
          return $q.reject(err.data);
        });
      }

      return {
        login: login,
        register: register
      };
    }
  );


'use strict';

angular.module('biofuels.templates', []);

'use strict';

angular.module('biofuels.core.sample', [
  'biofuels.core.sample.service'
]);

'use strict';

angular.module('biofuels.core.sample.service', [
    'biofuels.core.resource'
  ])
  .factory(
    'sampleService',
    function ($log,
              resourceService,
              $q
    ) {
      function getSamples () {
        $log.debug('Getting customers');

        var query = {};

        return resourceService.sampleList.get(query).$promise.then(function (data) {
          $log.debug(data);
          return data;
        }).catch(function (err) {
          $log.error(err);
          return $q.reject(err.data);
        });
      }

      function createBatch (batchData) {
        $log.debug('Creating batch');
        $log.debug(batchData);
        return resourceService.batchCreate.save(batchData).$promise.then(function (data) {
          $log.debug(data);
          return data;
        }).catch(function (err) {
          $log.error(err);
          return $q.reject(err.data);
        });
      }

      return {
        getSamples: getSamples,
        createBatch: createBatch
      };
    }
  );


'use strict';

angular.module('biofuels.core.resource', [
  'biofuels.core.resource.service'
]);

'use strict';

angular.module('biofuels.core.resource.service', [
  'ngResource'
])
  .factory(
    'resourceService',
    function ($resource, $localStorage) {
      var userProfile = $localStorage.userProfile;
      var url = 'https://biofuels-csis471.rhcloud.com';

      var userAuth = $resource(url + '/api/v1/user/auth', {}, {
        'save': {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          }
        }
      });

      var userRegister = $resource(url + '/api/v1/user/create', {}, {
        'save': {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          }
        }
      });

      var customerList = $resource(url + '/api/v1/customer/list', {}, {
        'get': {
          method: 'GET',
          headers: {
            'Authorization': 'Bearer ' + userProfile.token,
            'Content-Type': 'application/json'
          }
        }
      });

      var customerCreate = $resource(url + '/api/v1/customer/create', {}, {
        'save': {
          method: 'POST',
          headers: {
            'Authorization': 'Bearer ' + userProfile.token,
            'Content-Type': 'application/json'
          }
        }
      });

      var vialList = $resource(url + '/api/v1/vial/list', {}, {
        'get': {
          method: 'GET',
          headers: {
            'Authorization': 'Bearer ' + userProfile.token,
            'Content-Type': 'application/json'
          }
        }
      });

      var vialCreate = $resource(url + '/api/v1/vial/create', {}, {
        'save': {
          method: 'POST',
          headers: {
            'Authorization': 'Bearer ' + userProfile.token,
            'Content-Type': 'application/json'
          }
        }
      });

      var sampleList = $resource(url + '/api/v1/sample/list', {}, {
        'save': {
          method: 'GET',
          headers: {
            'Authorization': 'Bearer ' + userProfile.token,
            'Content-Type': 'application/json'
          }
        }
      });

      var batchCreate = $resource(url + '/api/v1/batch/create', {}, {
        'save': {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          }
        }
      });


      return {
        userAuth: userAuth,
        userRegister: userRegister,
        customerList: customerList,
        customerCreate: customerCreate,
        vialList: vialList,
        vialCreate: vialCreate,
        sampleList: sampleList,
        batchCreate: batchCreate
      };
    }
  );


(function(module) {
try {
  module = angular.module('biofuels.templates');
} catch (e) {
  module = angular.module('biofuels.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('sections/samples/new-batch/new-batch.tpl.html',
    '<div menu=""></div><div flex layout="row" layout-align="center start"><div flex="30"><md-card><md-card-header><md-card-header-text><span class="md-title">Batch</span> <span class="md-subhead">Header</span></md-card-header-text></md-card-header><md-card-content><form name="userForm" class="md-inline-form"><div layout="row" flex><md-input-container class="md-block" flex><label>Customer</label><md-select ng-model="ctrl.batchData.customerId"><md-option ng-repeat="customer in ctrl.customers" ng-value="customer.id">{{customer.customer_code}}</md-option></md-select></md-input-container><md-datepicker class="date-picker" ng-model="ctrl.batchData.shippedDate" md-placeholder="Shipped Date"></md-datepicker></div><div layout="row" flex><md-input-container class="md-block" flex><label>Sample Purpose</label><input type="text" ng-model="ctrl.batchData.purpose"></md-input-container><md-datepicker class="date-picker" ng-model="ctrl.batchData.receivedDate" md-placeholder="Received Date"></md-datepicker></div><div layout="row" flex><md-input-container class="md-block" flex><label>Storage Location</label><input type="text" ng-model="ctrl.batchData.storageLocation"></md-input-container></div></form></md-card-content></md-card></div><div flex="40"><md-card><md-card-header><md-card-header-text><span class="md-title">Sample</span> <span class="md-subhead">Number 1</span></md-card-header-text></md-card-header><md-card-content><form name="userForm" class="md-inline-form"><div layout="row" flex><md-input-container class="md-block" flex><label>Type</label><md-select ng-model="ctrl.workingSample.type"><md-option>Powder</md-option><md-option>Filter</md-option><md-option>Other</md-option></md-select></md-input-container><md-input-container class="md-block" flex><label>Name</label><input type="text" ng-model="ctrl.workingSample.name"></md-input-container></div><div layout="row" flex><md-input-container class="md-block" flex><label>Species ID</label><input type="text" ng-model="ctrl.workingSample.speciesId"></md-input-container><md-datepicker class="date-picker" ng-model="ctrl.workingSample.collectionDate" layout-align="end end" md-placeholder="Collection Date"></md-datepicker></div><div layout="row" flex><md-input-container class="md-block" flex><label>Container Type</label><md-select ng-model="ctrl.workingSample.containerType"><md-option>Glass</md-option><md-option>Container 2</md-option><md-option>Container 3</md-option><md-option value="other">Other</md-option></md-select></md-input-container><md-input-container class="md-block" flex ng-if="ctrl.workingSample.container===\'other\'"><label>Container Type</label><input type="text" ng-model="ctrl.workingSample.enteredContainer"></md-input-container><md-input-container class="md-block" ng-if="ctrl.workingSample.type === \'Powder\'"><label>Replicates</label><md-select ng-model="ctrl.workingSample.replicates"><md-option>0</md-option><md-option>1</md-option><md-option>2</md-option><md-option>3</md-option><md-option>4</md-option><md-option>5</md-option></md-select></md-input-container></div><div layout="row" flex><md-input-container class="md-block" flex><label>Description</label><textarea ng-model="ctrl.workingSample.description" md-maxlength="150" rows="5" md-select-on-focus flex></textarea></md-input-container></div></form></md-card-content><md-card-actions layout="row" layout-align="end center"><md-button class="md-primary" ng-if="!ctrl.isEditing()" ng-click="ctrl.addNewSample()">Add Sample</md-button><md-button class="md-primary" ng-if="ctrl.isEditing()" ng-click="ctrl.cancelEdit()">Cancel</md-button><md-button class="md-primary" ng-if="ctrl.isEditing()" ng-click="ctrl.saveEditedSample()">Save Sample</md-button></md-card-actions></md-card></div><div flex="30"><md-card><md-card-header><md-card-header-text><span class="md-title">Samples</span> <span class="md-subhead">Added</span></md-card-header-text></md-card-header><md-card-content><p ng-if="!ctrl.samples.length || ctrl.samples.length === 0">Add samples to see them over here.</p><md-list ng-if="ctrl.samples.length && ctrl.samples.length > 0" ng-cloak><md-list-item class="secondary-button-padding" ng-click="ctrl.editSample($index)" ng-repeat="sample in ctrl.samples"><p>{{sample.name}}</p><md-button class="md-secondary" ng-click="ctrl.deleteSample($index)">Delete</md-button></md-list-item></md-list></md-card-content><md-card-actions layout="row" layout-align="end center"><md-button class="md-primary" ng-click="ctrl.saveBatch($event)">Create Batch + Samples</md-button></md-card-actions></md-card></div></div>');
}]);
})();

'use strict';

angular.module('biofuels.core.router', [
  'biofuels.core.router.config',
  'biofuels.core.router.constants'
]);

(function(module) {
try {
  module = angular.module('biofuels.templates');
} catch (e) {
  module = angular.module('biofuels.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('sections/vials/create-vials/create-vials.tpl.html',
    '<div menu=""></div><div layout="row" layout-align="center"><div flex="50"><md-card><md-card-title><md-card-title-text><span class="md-headline">Create Vial</span></md-card-title-text></md-card-title><div layout="column" ng-cloak class="md-inline-form"><md-content layout-padding><div><form name="vialForm"><div layout-gt-xs="row"><md-input-container><label>Vial Type</label><md-select ng-model="ctrl.selectedVialType" ng-disabled="ctrl.vials.length > 0"><md-option ng-repeat="vialType in ctrl.vialTypes" value="{{vialType.code}}">{{vialType.description}}</md-option></md-select></md-input-container></div><div layout-gt-xs="row"><md-input-container ng-show="ctrl.selectedVialType"><label>Vial ID</label><input ng-model="ctrl.vialData.vialId"></md-input-container><md-datepicker ng-model="ctrl.vialData.preparationDate" md-placeholder="Enter date" ng-show="ctrl.selectedVialType"></md-datepicker></div><div layout-gt-xs="row" ng-show="ctrl.selectedVialType == \'RXN\'"><md-input-container><label>Mass of Fatty Acid</label><input ng-model="ctrl.vialData.fattyAcidmass"></md-input-container><md-input-container><label>Concentration of C-15 FA ISTD</label><input ng-model="ctrl.vialData.c15Istdcon"></md-input-container></div><div layout-gt-xs="row" ng-show="ctrl.selectedVialType == \'GC\'"><md-input-container><label>Mass of FAME ISTD</label><input ng-model="ctrl.vialData.c13Mass"></md-input-container><md-input-container><label>Concentration of C-13 ISTD</label><input ng-model="ctrl.vialData.c13Istdcon"></md-input-container><md-input-container><label>Concentration of C-19 ISTD</label><input ng-model="ctrl.vialData.c19Istdcon"></md-input-container></div><div layout-gt-xs="row" ng-show="ctrl.selectedVialType == \'SPK\'"><md-input-container><label>Mass of C-15 ISTD</label><input ng-model="ctrl.vialData.c15Mass"></md-input-container><md-input-container><label>Mass of Sample Added</label><input ng-model="ctrl.vialData.Mass450mlsample"></md-input-container><md-input-container><label>GC Vial ID</label><input ng-model="ctrl.vialData.gcVialID"></md-input-container></div></form></div></md-content><md-card-actions layout="column" layout-align="end-end"><md-button class="md-raised md-primary" ng-click="ctrl.addToQueue()" ng-disabled="ctrl.determineAddButtonStatus()">Add</md-button></md-card-actions></div></md-card></div><div flex="25" ng-show="ctrl.vials.length > 0"><md-card><md-card-title><md-card-title-text><span class="md-headline">Vials</span></md-card-title-text></md-card-title><div layout="column" ng-cloak class="md-inline-form"><md-content layout-padding><div><md-list-item ng-repeat="vial in ctrl.vials track by $index"><p>{{ ctrl.selectedVialType}}-{{ vial.vialId}}</p><md-button class="md-raised" ng-click="ctrl.removeFromQueue(vial)">DELETE</md-button></md-list-item></div></md-content><md-card-actions layout="column" layout-align="center-center"><md-button class="md-raised md-primary" ng-click="ctrl.saveVials()">Save Vials</md-button></md-card-actions></div></md-card></div></div>');
}]);
})();

'use strict';

angular.module('biofuels.core.router.constants', [])
  .constant(
  'ROUTES', {
    'CREATE_CUSTOMER':'createCustomer',
    'CREATE_VIALS':'createVials',
    'CUSTOMERS':'customers',
    'HOME': 'home',
    'LOGIN': 'login',
    'NEW_BATCH': 'newBatch',
    'SAMPLES':'samples',
    'VIALS':'vials'
  });

'use strict';

angular.module('biofuels.core.router.config', [
  'biofuels.core.router.constants',
  'ui.router',
  'biofuels.templates'
])
  .config(
  function routerConfig(ROUTES, $stateProvider, $urlRouterProvider) {
    var states = [];

    states.push({
      name: ROUTES.CREATE_CUSTOMER,
      url: '/create-customer',
      templateUrl: 'sections/customers/create-customer/create-customer.tpl.html',
      controller: 'createCustomerCtrl as ctrl'
    });

    states.push({
      name: ROUTES.CUSTOMERS,
      url: '/customers',
      templateUrl: 'sections/customers/customers.tpl.html',
      controller: 'customersCtrl as ctrl'
    });

    /* Home screen */
    states.push({
      name: ROUTES.HOME,
      url: '/home',
      templateUrl: 'sections/home/home.tpl.html',
      controller: 'homeCtrl as ctrl'
    });

    states.push({
      name: ROUTES.LOGIN,
      url: '/login',
      templateUrl: 'sections/login/login.tpl.html',
      controller: 'loginCtrl as ctrl'
    });

    states.push({
      name: ROUTES.NEW_BATCH,
      url: '/new-batch',
      templateUrl: 'sections/samples/new-batch/new-batch.tpl.html',
      controller: 'newBatchCtrl as ctrl'
    });

    states.push({
      name: ROUTES.SAMPLES,
      url: '/samples',
      templateUrl: 'sections/samples/samples.tpl.html',
      controller: 'samplesCtrl as ctrl'
    });

    states.push({
      name: ROUTES.CREATE_VIALS,
      url: '/create-vials',
      templateUrl: 'sections/vials/create-vials/create-vials.tpl.html',
      controller: 'createVialsCtrl as ctrl'
    });

    states.push({
      name: ROUTES.VIALS,
      url: '/vials',
      templateUrl: 'sections/vials/vials.tpl.html',
      controller: 'vialsCtrl as ctrl'
    });

    /**
     * UI routes initialization
     */
    angular.forEach(states, function (state) {
      $stateProvider.state(state);
    });

    $urlRouterProvider.otherwise('/login');

  }
);

(function(module) {
try {
  module = angular.module('biofuels.templates');
} catch (e) {
  module = angular.module('biofuels.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('sections/customers/create-customer/create-customer.tpl.html',
    '<div menu=""></div><div layout="row" layout-align="center center"><div flex-xs="90" flex-sm="75" flex-md="75" flex-gt-md="50"><md-card><md-card-title><md-card-title-text><span class="md-headline">Create Customer</span></md-card-title-text></md-card-title><div layout="column" ng-cloak class="md-inline-form"><md-content layout-padding><div><form name="userForm"><div layout-gt-xs="row"><md-input-container class="md-block" flex-gt-xs><label>Customer Name</label><input ng-model="ctrl.customerData.name"></md-input-container><md-input-container class="md-block"><label>Code</label><input ng-model="ctrl.customerData.code" required md-maxlength="4"></md-input-container></div><div layout-gt-xs="row"><md-input-container class="md-block" flex-gt-xs><label>Contact Name #1</label><input ng-model="ctrl.customerData.contactName1"></md-input-container><md-input-container class="md-block" flex-gt-xs><label>Contact Name #2</label><input ng-model="ctrl.customerData.contactName2"></md-input-container><md-input-container class="md-block" flex-gt-xs><label>Name for Billing</label><input ng-model="ctrl.customerData.billingName"></md-input-container></div><div layout-gt-xs="row"><md-input-container class="md-block" flex-gt-xs><label>Ship to Address</label><input ng-model="ctrl.customerData.address"></md-input-container><md-input-container class="md-block" flex-gt-xs><input ng-model="ctrl.customerData.address2" placeholder="Address 2"></md-input-container></div><div layout-gt-xs="row"><md-input-container class="md-block" flex-gt-xs><label>City</label><input ng-model="ctrl.customerData.city"></md-input-container><md-input-container class="md-block" flex-gt-xs><label>State</label><md-select ng-model="ctrl.customerData.state"><md-option ng-repeat="state in ctrl.states" value="{{state.abbrev}}">{{state.abbrev}}</md-option></md-select></md-input-container><md-input-container class="md-block" flex-gt-xs><label>Postal Code</label><input name="postalCode" ng-model="ctrl.customerData.postalCode" required ng-pattern="/^[0-9]{5}$/" md-maxlength="5"><div ng-messages="userForm.postalCode.$error" role="alert" multiple="multiple"><div ng-message="required" class="my-message">You must supply a postal code.</div><div ng-message="pattern" class="my-message">That doesn\'t look like a valid postal code.</div><div ng-message="md-maxlength" class="my-message">Don\'t use the long version silly...we don\'t need to be that specific.</div></div></md-input-container></div><div layout-gt-xs="row"><md-input-container class="md-block" flex-gt-xs><label>Email</label><input ng-model="ctrl.customerData.email"></md-input-container><md-input-container class="md-block" flex-gt-xs><label>Phone Number</label><input ng-model="ctrl.customerData.phoneNumber"></md-input-container></div><div layout-gt-xs="row"><md-input-container class="md-block" flex-gt-xs><label>Purchase Order Number</label><input ng-model="ctrl.customerData.PONumber"></md-input-container><md-input-container class="md-block"><md-button class="md-raised" ng-click="ctrl.addToPOList(ctrl.customerData.PONumber)" ng-disabled="!ctrl.customerData.PONumber">ADD</md-button></md-input-container></div><div><md-list-item ng-repeat="poNumber in ctrl.customerData.PONumbers track by $index"><p>{{ poNumber }}</p><md-button class="md-raised" ng-click="ctrl.removeFromPOList(poNumber)">DELETE</md-button></md-list-item></div></form></div></md-content><md-card-actions layout="row" layout-align="end-center"><md-button class="md-raised md-primary" ng-click="ctrl.createCustomer()" ng-disabled="!(ctrl.customerData.name && ctrl.customerData.code &&\n' +
    '          ctrl.customerData.contactName1 && ctrl.customerData.billingName && ctrl.customerData.address && ctrl.customerData.city && ctrl.customerData.state\n' +
    '          && ctrl.customerData.postalCode && ctrl.customerData.email && ctrl.customerData.phoneNumber && ctrl.customerData.PONumbers.length > 0)">Create Customer</md-button></md-card-actions></div></md-card></div></div>');
}]);
})();

(function(module) {
try {
  module = angular.module('biofuels.templates');
} catch (e) {
  module = angular.module('biofuels.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('sections/samples/samples.tpl.html',
    '<div menu=""></div><md-toolbar class="md-accent"><div class="md-toolbar-tools"><md-select ng-model="ctrl.selectedBatch" placeholder="Select a batch" ng-change="ctrl.updateBatchId()"><md-option ng-value="batch" ng-repeat="batch in ctrl.batches">{{ batch }}</md-option></md-select><md-button class="" aria-label="Home Page" ui-sref="newBatch">New Batch</md-button><md-button class="" aria-label="Samples Page">Rxn Selection</md-button><md-button class="" aria-label="Vials Page">Esterification</md-button><md-button class="" aria-label="Vials Page">FAME</md-button></div></md-toolbar><md-content layout-padding><md-table-container><table md-table md-row-select ng-model="ctrl.selected"><thead md-head md-order="query.order" md-on-reorder="ctrl.onReorder"><tr md-row><th md-column><span>Sample ID</span></th><th md-column md-numeric><span>Type</span></th><th md-column md-numeric>Species ID</th><th md-column md-numeric>RXN VIAL #</th><th md-column md-numeric>ESTERIFICATION</th><th md-column md-numeric>FAME</th></tr></thead><tbody md-body><tr md-row ng-repeat="sample in ctrl.samples" md-select="sample" md-select-id="{{sample}}" md-auto-select><td md-cell>{{sample.id}}</td><td md-cell>{{sample.type}}</td><td md-cell>{{sample.species_id}}</td><td md-cell>{{sample.rxn_vial_id}}</td><td md-cell>{{sample.esterification_complete === 1}}</td><td md-cell>{{sample.fame_complete === 1}}</td></tr></tbody></table></md-table-container><md-table-pagination md-limit="ctrl.query.limit" md-page="ctrl.query.page" md-total="{{ctrl.samples.count}}" md-on-paginate="onPaginate" md-page-select></md-table-pagination></md-content>');
}]);
})();

'use strict';

angular.module('biofuels.core.customer', [
  'biofuels.core.customer.service'
]);

(function(module) {
try {
  module = angular.module('biofuels.templates');
} catch (e) {
  module = angular.module('biofuels.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('sections/vials/vials.tpl.html',
    '<div menu=""></div><md-toolbar class="md-accent"><div class="md-toolbar-tools"><md-select ng-model="ctrl.selectedVialType" aria-label="Vial Selection" ng-change="ctrl.changeVialType()"><md-option ng-repeat="vialType in ctrl.vialTypes" value="{{vialType.code}}">{{vialType.description}}</md-option></md-select><md-button class="" aria-label="Create Vials" ui-sref="createVials">Create Vials</md-button><md-button class="" aria-label="Edit Vials">Edit Vials</md-button></div></md-toolbar><md-content layout-padding><md-table-container><table md-table md-row-select ng-model="ctrl.selected"><thead md-head md-order="query.order" md-on-reorder="ctrl.onReorder"><tr md-row><th md-column><span>Vial ID</span></th><th md-column><span>Sample ID</span></th><th md-column><span>Day Prepared</span></th><th md-column><span>Status</span></th><th md-column ng-show="ctrl.selectedVialType == \'RXN\'"><span>FA Mass</span></th><th md-column ng-show="ctrl.selectedVialType == \'RXN\'"><span>C15 ISTD Concentration</span></th><th md-column ng-show="ctrl.selectedVialType == \'GC\'"><span>C13 Mass</span></th><th md-column ng-show="ctrl.selectedVialType == \'GC\'"><span>C13 ISTD Concentration</span></th><th md-column ng-show="ctrl.selectedVialType == \'GC\'"><span>C19 ISTD Concentration</span></th><th md-column ng-show="ctrl.selectedVialType == \'SPK\'"><span>GC Vial ID</span></th><th md-column ng-show="ctrl.selectedVialType == \'SPK\'"><span>C15 ISTD Concentration</span></th><th md-column ng-show="ctrl.selectedVialType == \'SPK\'"><span>Sample Mass</span></th></tr></thead><tbody md-body><tr md-row ng-repeat="vial in ctrl.vials" md-select="vial" md-select-id="{{vial}}" md-auto-select><td md-cell>{{vial.vial_id}}</td><td md-cell>{{vial.id}}</td><td md-cell>{{ctrl.convertDateString(vial.date_prepared)}}</td><td md-cell>{{vial.status}}</td><td md-cell ng-show="ctrl.selectedVialType == \'RXN\'">{{vial.fatty_acid_mass}}</td><td md-cell ng-show="ctrl.selectedVialType == \'RXN\'">{{vial.c15_istd_concentration}}</td><td md-cell ng-show="ctrl.selectedVialType == \'GC\'">{{vial.c13_mass}}</td><td md-cell ng-show="ctrl.selectedVialType == \'GC\'">{{vial.c13_istd_concentration}}</td><td md-cell ng-show="ctrl.selectedVialType == \'GC\'">{{vial.c19_istd_concentration}}</td><td md-cell ng-show="ctrl.selectedVialType == \'SPK\'">{{vial.gc_vial_id}}</td><td md-cell ng-show="ctrl.selectedVialType == \'SPK\'">{{vial.c15_mass}}</td><td md-cell ng-show="ctrl.selectedVialType == \'SPK\'">{{vial.Mass_450ml_sample}}</td></tr></tbody></table></md-table-container><md-table-pagination md-limit="ctrl.query.limit" md-page="ctrl.query.page" md-total="{{ctrl.desserts.count}}" md-on-paginate="onPaginate" md-page-select></md-table-pagination></md-content>');
}]);
})();

'use strict';

angular.module('biofuels.core.customer.service', [
    'biofuels.core.resource'
  ])
  .factory(
    'customerService',
    function ($log,
              resourceService,
              $q
    ) {
      function createCustomer (custName, custCode, contactName1, contactName2, billingName, address1, address2, city, state, postalCode, phoneNumber, email) {
        $log.debug('Creating customer');

        var payload = {
          customer_name: custName,
          customer_code: custCode,
          contact_name1: contactName1,
          contact_name2: contactName2,
          billing_name: billingName,
          address_1: address1,
          address_2: address2,
          city: city,
          state: state,
          postal_code: postalCode,
          phone_number: phoneNumber,
          email: email
        };

        return resourceService.customerCreate.save(payload).$promise.then(function (data) {
          $log.debug(data);
        }).catch(function (err) {
          $log.error(err);
          return $q.reject(err.data);
        });
      }


      function getCustomers () {
        $log.debug('Getting customers');

        var query = {};

        return resourceService.customerList.get(query).$promise.then(function (data) {
          $log.debug(data);
          return data;
        }).catch(function (err) {
          $log.error(err);
          return $q.reject(err.data);
        });
      }

      return {
        createCustomer: createCustomer,
        getCustomers: getCustomers
      };
    }
  );


(function(module) {
try {
  module = angular.module('biofuels.templates');
} catch (e) {
  module = angular.module('biofuels.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('sections/login/login.tpl.html',
    '<div layout="row" class="login__container" layout-align="center center"><div flex-gt-xs="50" flex-gt-sm="40" flex-gt-md="30"><md-card><img ng-src="images/login-header-3.jpg" class="md-card-image" alt="image caption"><md-tabs md-selected="ctrl.selectedTab" md-center-tabs md-dynamic-height md-stretch-tabs="always"><md-tab id="tab1"><md-tab-label>Login</md-tab-label><md-tab-body><md-content layout-padding><div><form name="userForm" ng-submit="ctrl.loginUser()"><md-input-container class="md-block"><label>Email</label><input ng-model="ctrl.userLogin.email" required></md-input-container><md-input-container class="md-block"><label>Password</label><input type="password" ng-model="ctrl.userLogin.password" ng-keypress="ctrl.onEnter($event)" required></md-input-container></form></div><p ng-class="{ \'form-success\' : ctrl.formResponse,\n' +
    '\n' +
    '        \'form-error\' : ctrl.formError }">{{ ctrl.formResponse || ctrl.formError }}</p></md-content></md-tab-body></md-tab><md-tab id="tab2"><md-tab-label>Register</md-tab-label><md-tab-body><md-content layout-padding><div><form name="registerForm"><md-input-container class="md-block"><label>Full Name</label><input ng-model="ctrl.userRegister.fullName" name="fullName" required md-maxlength="40"><div ng-messages="registerForm.fullName.$error"><ng-message when="[\'required\', \'maxlength\']">This is required!</ng-message></div></md-input-container><md-input-container class="md-block"><label>Liberty Email</label><input type="email" ng-model="ctrl.userRegister.email" name="userEmail" ng-pattern="/^[\\w.]+@liberty.edu$/" required><div ng-messages="registerForm.userEmail.$error" ng-messages-multiple><div ng-message="required">This is required!</div><div ng-message="pattern">You must have a liberty email</div></div></md-input-container><md-input-container class="md-block"><label>Password</label><input type="password" name="password" ng-model="ctrl.userRegister.password" ng-pattern="/^[a-zA-Z]\\w{5,20}$/"><div ng-messages="registerForm.password.$error" ng-messages-multiple><div ng-message="required">This is required!</div><div ng-message="pattern">You need a more complex password</div></div></md-input-container></form></div><p ng-class="{ \'form-success\' : ctrl.registerFormResponse,\n' +
    '\n' +
    '        \'form-error\' : ctrl.registerFormError }">{{ ctrl.registerFormResponse || ctrl.registerFormError }}</p></md-content></md-tab-body></md-tab></md-tabs><md-card-actions layout="row" layout-align="end center"><md-button class="md-raised md-primary" ng-show="ctrl.selectedTab === 0" aria-label="Proceed" ng-click="ctrl.loginUser()" ng-disabled="!userForm.$valid">Login</md-button><md-button class="md-raised md-primary" ng-show="ctrl.selectedTab === 1" aria-label="Proceed" ng-click="ctrl.registerUser()" ng-disabled="!registerForm.$valid">Register</md-button></md-card-actions></md-card></div></div>');
}]);
})();

'use strict';

angular.module('biofuels.component.menu', [
  'biofuels.component.menu.controller',
  'biofuels.component.menu.directive'
]);

(function(module) {
try {
  module = angular.module('biofuels.templates');
} catch (e) {
  module = angular.module('biofuels.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('sections/home/home.tpl.html',
    '<div menu=""></div><md-content layout-padding><div layout="row" layout-sm="column"><div flex-gt-sm="45"><canvas id="pie" class="chart chart-pie" chart-data="ctrl.data" chart-labels="ctrl.labels"></canvas></div><div flex-gt-sm="55"><canvas id="line1" class="chart chart-line" chart-data="ctrl.lineData" chart-labels="ctrl.lineLabels" chart-legend="true" chart-series="ctrl.lineSeries" chart-click="onClick"></canvas></div><div flex-gt-sm="45"><canvas id="pie2" class="chart chart-pie" chart-data="ctrl.data" chart-labels="ctrl.labels"></canvas></div></div><div layout="row"><div flex="35"><canvas id="line" class="chart chart-line" chart-data="ctrl.lineData" chart-labels="ctrl.lineLabels" chart-legend="true" chart-series="ctrl.lineSeries" chart-click="onClick"></canvas></div><div flex><canvas id="radar" class="chart chart-radar" chart-data="ctrl.radarData" chart-labels="ctrl.radarLabels"></canvas></div><div flex><canvas id="bar" class="chart chart-bar" chart-data="ctrl.barData" chart-labels="ctrl.barLabels" chart-series="ctrl.barSeries"></canvas></div></div></md-content>');
}]);
})();

'use strict';

angular.module('biofuels.component.menu.directive', [
    'biofuels.component.menu.controller'
  ])
  .directive(
    'menu',
    function () {
      return {
        restrict: 'A',
        templateUrl: 'components/menu/menu.tpl.html',
        controller: 'MenuCtrl as menuCtrl'
      };
    }
  );


'use strict';

angular.module('biofuels.component.menu.controller', [
    'ngStorage'
  ])
  .controller(
    'MenuCtrl',
    function ($localStorage) {
      (function (vm) {
        vm.userProfile = $localStorage.userProfile;
      })(this);
    }
  );


(function(module) {
try {
  module = angular.module('biofuels.templates');
} catch (e) {
  module = angular.module('biofuels.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('sections/customers/customers.tpl.html',
    '<div menu=""></div><md-toolbar class="md-accent"><div class="md-toolbar-tools"><md-button class="" aria-label="Home Page" ui-sref="createCustomer">New Customer</md-button><md-button class="" aria-label="Samples Page">Edit Customer</md-button></div></md-toolbar><md-content layout-padding><md-table-container><table md-table md-row-select ng-model="ctrl.selected"><thead md-head md-order="query.order" md-on-reorder="ctrl.onReorder"><tr md-row><th md-column><span>ID</span></th><th md-column><span>Customer Name</span></th><th md-column><span>Customer Code</span></th><th md-column><span>Contact Name #1</span></th><th md-column><span>Contact Name #2</span></th><th md-column><span>Billing Name</span></th><th md-column><span>Address</span></th><th md-column><span>Address 2</span></th><th md-column><span>City</span></th><th md-column><span>State</span></th><th md-column><span>Postal Code</span></th><th md-column><span>Phone Number</span></th><th md-column><span>email</span></th></tr></thead><tbody md-body><tr md-row ng-repeat="customer in ctrl.customers" md-select="customer" md-select-id="{{customer}}" md-auto-select><td md-cell>{{customer.id}}</td><td md-cell>{{customer.customer_name}}</td><td md-cell>{{customer.customer_code}}</td><td md-cell>{{customer.contact_name1}}</td><td md-cell>{{customer.contact_name2}}</td><td md-cell>{{customer.billing_name}}</td><td md-cell>{{customer.address_1}}</td><td md-cell>{{customer.address_2}}</td><td md-cell>{{customer.city}}</td><td md-cell>{{customer.state}}</td><td md-cell>{{customer.postal_code}}</td><td md-cell>{{customer.phone_number}}</td><td md-cell>{{customer.email}}</td></tr></tbody></table></md-table-container><md-table-pagination md-limit="ctrl.query.limit" md-page="ctrl.query.page" md-total="{{ctrl.desserts.count}}" md-on-paginate="onPaginate" md-page-select></md-table-pagination></md-content>');
}]);
})();

'use strict';

angular.module('biofuels', [
    'ngMaterial',
    'ui.router',
    'chart.js',
    'md.data.table',
    'biofuels.component.menu',
    'biofuels.core.customer',
    'biofuels.core.resource',
    'biofuels.core.router',
    'biofuels.core.sample',
    'biofuels.core.user',
    'biofuels.core.vial',
    'biofuels.core.wrappers',
    'biofuels.sections.createCustomer',
    'biofuels.sections.customers',
    'biofuels.sections.createVials',
    'biofuels.sections.home',
    'biofuels.sections.login',
    'biofuels.sections.newBatch',
    'biofuels.sections.samples',
    'biofuels.sections.vials'
  ])
  .config(function($mdThemingProvider) {
    var greenDarkContrast = $mdThemingProvider.extendPalette('green', {
      'contrastDefaultColor': 'dark',
      'contrastLightColors': 'light'
    });
    // Register the new color palette map with the name <code>neonRed</code>
    $mdThemingProvider.definePalette('greenDark', greenDarkContrast);

    $mdThemingProvider.definePalette('amazingPaletteName', {
      '50': 'ffebee',
      '100': 'ffcdd2',
      '200': 'ef9a9a',
      '300': 'e57373',
      '400': 'ef5350',
      '500': 'f44336',
      '600': 'e53935',
      '700': 'd32f2f',
      '800': 'c62828',
      '900': 'b71c1c',
      'A100': 'ff8a80',
      'A200': 'ff5252',
      'A400': 'ff1744',
      'A700': 'd50000',
      'contrastDefaultColor': 'light',    // whether, by default, text (contrast)
                                          // on this palette should be dark or light
      'contrastDarkColors': ['50', '100', //hues which contrast should be 'dark' by default
        '200', '300', '400', 'A100'],
      'contrastLightColors': undefined    // could also specify this if default was 'dark'
    });

    $mdThemingProvider.theme('default')
      .primaryPalette('blue-grey')
      .accentPalette('greenDark')
      .backgroundPalette('grey');
  })
  .run(function ($log) {
    $log.debug('Welcome to Angular!');
  });

(function(module) {
try {
  module = angular.module('biofuels.templates');
} catch (e) {
  module = angular.module('biofuels.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('components/menu/menu.tpl.html',
    '<md-toolbar><div class="md-toolbar-tools"><a><img class="menu__logo" src="images/bio-logo.svg"></a><md-button class="md-primary" aria-label="Home Page" ui-sref="home">Home</md-button><md-button aria-label="Samples Page" ui-sref="samples">Samples</md-button><md-button aria-label="Vials Page" ui-sref="vials">Vials</md-button><md-button aria-label="Customers Page" ui-sref="customers">Customers</md-button><span flex></span><md-button>Hey, {{menuCtrl.userProfile.fullName}}</md-button><md-button class="md-raised" aria-label="Learn More">Logout</md-button></div></md-toolbar>');
}]);
})();

//# sourceMappingURL=data:application/json;base64,
